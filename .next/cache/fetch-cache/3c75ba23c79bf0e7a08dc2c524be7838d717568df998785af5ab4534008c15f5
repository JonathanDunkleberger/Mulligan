{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Sat, 23 Aug 2025 23:00:04 GMT","server":"ESF","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"ewogICJraW5kIjogImJvb2tzI3ZvbHVtZXMiLAogICJ0b3RhbEl0ZW1zIjogMTAwMDAwMCwKICAiaXRlbXMiOiBbCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJoT3kzRUFBQVFCQUoiLAogICAgICAiZXRhZyI6ICJ4dVgwck1GbTdqVSIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL2hPeTNFQUFBUUJBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJEdW5lIChNb3ZpZSBUaWUtSW4pIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJGcmFuayBIZXJiZXJ0IgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJQZW5ndWluIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDIzLTA5LTI2IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAi4oCiIERVTkU6IFBBUlQgVFdPIOKAoiBUSEUgTUFKT1IgTU9USU9OIFBJQ1RVUkUgRGlyZWN0ZWQgYnkgRGVuaXMgVmlsbGVuZXV2ZSwgc2NyZWVucGxheSBieSBEZW5pcyBWaWxsZW5ldXZlIGFuZCBKb24gU3BhaWh0cywgYmFzZWQgb24gdGhlIG5vdmVsIER1bmUgYnkgRnJhbmsgSGVyYmVydCDigKIgU3RhcnJpbmcgVGltb3Row6llIENoYWxhbWV0LCBaZW5kYXlhLCBSZWJlY2NhIEZlcmd1c29uLCBKb3NoIEJyb2xpbiwgQXVzdGluIEJ1dGxlciwgRmxvcmVuY2UgUHVnaCwgRGF2ZSBCYXV0aXN0YSwgQ2hyaXN0b3BoZXIgV2Fsa2VuLCBMw6lhIFNleWRvdXgsIHdpdGggU3RlbGxhbiBTa2Fyc2fDpXJkLCB3aXRoIENoYXJsb3R0ZSBSYW1wbGluZywgYW5kIEphdmllciBCYXJkZW0gRnJhbmsgSGVyYmVydOKAmXMgY2xhc3NpYyBtYXN0ZXJwaWVjZeKAlGEgdHJpdW1waCBvZiB0aGUgaW1hZ2luYXRpb24gYW5kIG9uZSBvZiB0aGUgYmVzdHNlbGxpbmcgc2NpZW5jZSBmaWN0aW9uIG5vdmVscyBvZiBhbGwgdGltZS4gU2V0IG9uIHRoZSBkZXNlcnQgcGxhbmV0IEFycmFraXMsIER1bmUgaXMgdGhlIHN0b3J5IG9mIFBhdWwgQXRyZWlkZXPiiJJ3aG8gd291bGQgYmVjb21lIGtub3duIGFzIE1hdWQnRGli4oCUYW5kIG9mIGEgZ3JlYXQgZmFtaWx5J3MgYW1iaXRpb24gdG8gYnJpbmcgdG8gZnJ1aXRpb24gaHVtYW5raW5k4oCZcyBtb3N0IGFuY2llbnQgYW5kIHVuYXR0YWluYWJsZSBkcmVhbS4gQSBzdHVubmluZyBibGVuZCBvZiBhZHZlbnR1cmUgYW5kIG15c3RpY2lzbSwgZW52aXJvbm1lbnRhbGlzbSBhbmQgcG9saXRpY3MsIER1bmUgd29uIHRoZSBmaXJzdCBOZWJ1bGEgQXdhcmQsIHNoYXJlZCB0aGUgSHVnbyBBd2FyZCwgYW5kIGZvcm1lZCB0aGUgYmFzaXMgb2Ygd2hhdCBpcyB1bmRvdWJ0ZWRseSB0aGUgZ3JhbmRlc3QgZXBpYyBpbiBzY2llbmNlIGZpY3Rpb24uIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODA1OTM2NDAzMzMiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMDU5MzY0MDMzMCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA3MDUsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjEuMi4yLjAucHJldmlldy4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1oT3kzRUFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1oT3kzRUFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9aE95M0VBQUFRQkFKJnBnPVBQNSZkcT1kdW5lJmhsPSZjZD0xJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9aE95M0VBQUFRQkFKJmRxPWR1bmUmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvRHVuZV9Nb3ZpZV9UaWVfSW4uaHRtbD9obD0maWQ9aE95M0VBQUFRQkFKIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9aE95M0VBQUFRQkFKJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICIuLi4gXHUwMDNjYlx1MDAzZURVTkVcdTAwM2MvYlx1MDAzZSA6IEhPVVNFIEFUUkVJREVTIFx1MDAzY2JcdTAwM2VEVU5FXHUwMDNjL2JcdTAwM2UgOiBIT1VTRSBIQVJLT05ORU4gXHUwMDNjYlx1MDAzZURVTkVcdTAwM2MvYlx1MDAzZSA6IEhPVVNFIENPUlJJTk8gXHUwMDNjYlx1MDAzZURVTkVcdTAwM2MvYlx1MDAzZSA6IFRIRSBCVVRMRVJJQU4gSklIQUQgXHUwMDNjYlx1MDAzZURVTkVcdTAwM2MvYlx1MDAzZSA6IFRIRSBNQUNISU5FIENSVVNBREUgXHUwMDNjYlx1MDAzZURVTkVcdTAwM2MvYlx1MDAzZSA6IFRIRSBCQVRUTEUgT0YgQ09SUklOIFRIRSBST0FEIFRPIFx1MDAzY2JcdTAwM2VEVU5FXHUwMDNjL2JcdTAwM2UgKCB3aXRoIEZyYW5rIEhlcmJlcnQgOyBpbmNsdWRpbmcgdGhlIG5vdmVsIFNwaWNlIFBsYW5ldCApIEhVTlRFUlMgT0YmbmJzcDsuLi4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJBUWtfRUFBQVFCQUoiLAogICAgICAiZXRhZyI6ICJaM3J6bGlyNkdZQSIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL0FRa19FQUFBUUJBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJEdW5lIChNb3ZpZSBUaWUtSW4pIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJGcmFuayBIZXJiZXJ0IgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJQZW5ndWluIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDIxLTA5LTIxIiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiTk9XIEEgTUFKT1IgTU9USU9OIFBJQ1RVUkUgZGlyZWN0ZWQgYnkgRGVuaXMgVmlsbGVuZXV2ZSwgc3RhcnJpbmcgVGltb3Row6llIENoYWxhbWV0LCBaZW5kYXlhLCBKYXNvbiBNb21vYSwgUmViZWNjYSBGZXJndXNvbiwgT3NjYXIgSXNhYWMsIEpvc2ggQnJvbGluLCBTdGVsbGFuIFNrYXJzZ8OlcmQsIERhdmUgQmF1dGlzdGEsIERhdmlkIERhc3RtYWxjaGlhbiwgU3RlcGhlbiBNY0tpbmxleSBIZW5kZXJzb24sIENoYW5nIENoZW4sIFNoYXJvbiBEdW5jYW4tQnJld3N0ZXIsIENoYXJsb3R0ZSBSYW1wbGluZywgYW5kIEphdmllciBCYXJkZW0uIEZyYW5rIEhlcmJlcnTigJlzIGNsYXNzaWMgbWFzdGVycGllY2XigJRhIHRyaXVtcGggb2YgdGhlIGltYWdpbmF0aW9uIGFuZCBvbmUgb2YgdGhlIGJlc3RzZWxsaW5nIHNjaWVuY2UgZmljdGlvbiBub3ZlbHMgb2YgYWxsIHRpbWUuIEEgbXl0aGljIGFuZCBlbW90aW9uYWxseSBjaGFyZ2VkIGhlcm/igJlzIGpvdXJuZXksIER1bmUgdGVsbHMgdGhlIHN0b3J5IG9mIFBhdWwgQXRyZWlkZXMsIGEgYnJpbGxpYW50IGFuZCBnaWZ0ZWQgeW91bmcgbWFuIGJvcm4gaW50byBhIGdyZWF0IGRlc3RpbnkgYmV5b25kIGhpcyB1bmRlcnN0YW5kaW5nLCB3aG8gbXVzdCB0cmF2ZWwgdG8gdGhlIG1vc3QgZGFuZ2Vyb3VzIHBsYW5ldCBpbiB0aGUgdW5pdmVyc2UgdG8gZW5zdXJlIHRoZSBmdXR1cmUgb2YgaGlzIGZhbWlseSBhbmQgaGlzIHBlb3BsZS4gQXMgbWFsZXZvbGVudCBmb3JjZXMgZXhwbG9kZSBpbnRvIGNvbmZsaWN0IG92ZXIgdGhlIHBsYW5ldOKAmXMgZXhjbHVzaXZlIHN1cHBseSBvZiB0aGUgbW9zdCBwcmVjaW91cyByZXNvdXJjZSBpbiBleGlzdGVuY2XigJRhIGNvbW1vZGl0eSBjYXBhYmxlIG9mIHVubG9ja2luZyBodW1hbml0eeKAmXMgZ3JlYXRlc3QgcG90ZW50aWFs4oCUb25seSB0aG9zZSB3aG8gY2FuIGNvbnF1ZXIgdGhlaXIgZmVhciB3aWxsIHN1cnZpdmUuIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODA1OTM0MzgzNzQiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMDU5MzQzODM3WCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA3MDUsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjAuMy4wLjAucHJldmlldy4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1BUWtfRUFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1BUWtfRUFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9QVFrX0VBQUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImZHE9ZHVuZSZobD0mY2Q9MiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPUFRa19FQUFBUUJBSiZkcT1kdW5lJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L0R1bmVfTW92aWVfVGllX0luLmh0bWw/aGw9JmlkPUFRa19FQUFBUUJBSiIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiTk9UX0ZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAgICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPUFRa19FQUFBUUJBSiZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiQSBteXRoaWMgYW5kIGVtb3Rpb25hbGx5IGNoYXJnZWQgaGVyb+KAmXMgam91cm5leSwgRHVuZSB0ZWxscyB0aGUgc3Rvcnkgb2YgUGF1bCBBdHJlaWRlcywgYSBicmlsbGlhbnQgYW5kIGdpZnRlZCB5b3VuZyBtYW4gYm9ybiBpbnRvIGEgZ3JlYXQgZGVzdGlueSBiZXlvbmQgaGlzIHVuZGVyc3RhbmRpbmcsIHdobyBtdXN0IHRyYXZlbCB0byB0aGUgbW9zdCBkYW5nZXJvdXMgcGxhbmV0IGluIHRoZSB1bml2ZXJzZSB0byAuLi4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJuclJLRHdBQVFCQUoiLAogICAgICAiZXRhZyI6ICJFbmJ1WmtoendBQSIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL25yUktEd0FBUUJBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJEdW5lIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJGcmFuayBIZXJiZXJ0IgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJQZW5ndWluIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIxOTkwLTA5LTAxIiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAi4oCiIERVTkU6IFBBUlQgVFdPIOKAoiBUSEUgTUFKT1IgTU9USU9OIFBJQ1RVUkUgRGlyZWN0ZWQgYnkgRGVuaXMgVmlsbGVuZXV2ZSwgc2NyZWVucGxheSBieSBEZW5pcyBWaWxsZW5ldXZlIGFuZCBKb24gU3BhaWh0cywgYmFzZWQgb24gdGhlIG5vdmVsIER1bmUgYnkgRnJhbmsgSGVyYmVydCDigKIgU3RhcnJpbmcgVGltb3Row6llIENoYWxhbWV0LCBaZW5kYXlhLCBSZWJlY2NhIEZlcmd1c29uLCBKb3NoIEJyb2xpbiwgQXVzdGluIEJ1dGxlciwgRmxvcmVuY2UgUHVnaCwgRGF2ZSBCYXV0aXN0YSwgQ2hyaXN0b3BoZXIgV2Fsa2VuLCBTdGVwaGVuIE1jS2lubGV5IEhlbmRlcnNvbiwgTMOpYSBTZXlkb3V4LCB3aXRoIFN0ZWxsYW4gU2thcnNnw6VyZCwgd2l0aCBDaGFybG90dGUgUmFtcGxpbmcsIGFuZCBKYXZpZXIgQmFyZGVtIEZyYW5rIEhlcmJlcnTigJlzIGNsYXNzaWMgbWFzdGVycGllY2XigJRhIHRyaXVtcGggb2YgdGhlIGltYWdpbmF0aW9uIGFuZCBvbmUgb2YgdGhlIGJlc3RzZWxsaW5nIHNjaWVuY2UgZmljdGlvbiBub3ZlbHMgb2YgYWxsIHRpbWUuIFNldCBvbiB0aGUgZGVzZXJ0IHBsYW5ldCBBcnJha2lzLCBEdW5lIGlzIHRoZSBzdG9yeSBvZiBQYXVsIEF0cmVpZGVz4oCUd2hvIHdvdWxkIGJlY29tZSBrbm93biBhcyBNdWFkJ0RpYuKAlGFuZCBvZiBhIGdyZWF0IGZhbWlseSdzIGFtYml0aW9uIHRvIGJyaW5nIHRvIGZydWl0aW9uIG1hbmtpbmQncyBtb3N0IGFuY2llbnQgYW5kIHVuYXR0YWluYWJsZSBkcmVhbS4gQSBzdHVubmluZyBibGVuZCBvZiBhZHZlbnR1cmUgYW5kIG15c3RpY2lzbSwgZW52aXJvbm1lbnRhbGlzbSBhbmQgcG9saXRpY3MsIER1bmUgd29uIHRoZSBmaXJzdCBOZWJ1bGEgQXdhcmQsIHNoYXJlZCB0aGUgSHVnbyBBd2FyZCwgYW5kIGZvcm1lZCB0aGUgYmFzaXMgb2Ygd2hhdCBpcyB1bmRvdWJ0ZWRseSB0aGUgZ3JhbmRlc3QgZXBpYyBpbiBzY2llbmNlIGZpY3Rpb24uIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODA0NDExNzI3MTkiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMDQ0MTE3MjcxNyIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA4OTcsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgImF2ZXJhZ2VSYXRpbmciOiA0LAogICAgICAgICJyYXRpbmdzQ291bnQiOiAxLAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICIwLjkuMy4wLnByZXZpZXcuMCIsCiAgICAgICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgICAgICAiY29udGFpbnNFcHViQnViYmxlcyI6IGZhbHNlLAogICAgICAgICAgImNvbnRhaW5zSW1hZ2VCdWJibGVzIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJpbWFnZUxpbmtzIjogewogICAgICAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9bnJSS0R3QUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgICAidGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9bnJSS0R3QUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT0xJmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPW5yUktEd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmRxPWR1bmUmaGw9JmNkPTMmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1uclJLRHdBQVFCQUomZHE9ZHVuZSZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9hYm91dC9EdW5lLmh0bWw/aGw9JmlkPW5yUktEd0FBUUJBSiIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiTk9UX0ZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAgICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPW5yUktEd0FBUUJBSiZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiU2V0IG9uIHRoZSBkZXNlcnQgcGxhbmV0IEFycmFraXMsIER1bmUgaXMgdGhlIHN0b3J5IG9mIFBhdWwgQXRyZWlkZXPigJR3aG8gd291bGQgYmVjb21lIGtub3duIGFzIE11YWQmIzM5O0RpYuKAlGFuZCBvZiBhIGdyZWF0IGZhbWlseSYjMzk7cyBhbWJpdGlvbiB0byBicmluZyB0byBmcnVpdGlvbiBtYW5raW5kJiMzOTtzIG1vc3QgYW5jaWVudCBhbmQgdW5hdHRhaW5hYmxlIGRyZWFtLiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIkpQTE1SNjhVNzhjQyIsCiAgICAgICJldGFnIjogInRWWlhBNktoNFVvIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvSlBMTVI2OFU3OGNDIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIkNoaWxkcmVuIG9mIER1bmUiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkZyYW5rIEhlcmJlcnQiCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIlBlbmd1aW4iLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMDgiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJPbiB0aGUgcGxhbmV0IG9mIEFycmFraXMsIG1lbiwgbmF0dXJlLCBhbmQgdGltZSBhdHRlbmQgdGhlIGV2b2x1dGlvbmFyeSBncm93dGggb2YgTGV0byBhbmQgaGlzIHR3aW4gc2lzdGVyIEdoYW5pbWEsIGNoaWxkcmVuIG9mIHRoZSBtaWdodHkgTXVhZCdEaWIsIGFzIHRoZWlyIGF1bnQgQWxpYSBwbG90cyB0byBvYnRhaW4gdGhlIHNlY3JldHMgb2YgdGhlIHR3aW5zJyB2aXNpb25zIGluIG9yZGVyIHRvIHNlY3VyZSBoZXIgcmVpZ24uIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjA0NDEwMTU5MDUiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDQ0MTAxNTkwMCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA0MjAsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgImF2ZXJhZ2VSYXRpbmciOiAzLjUsCiAgICAgICAgInJhdGluZ3NDb3VudCI6IDcsCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjEuNy44LjAucHJldmlldy4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1KUExNUjY4VTc4Y0MmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1KUExNUjY4VTc4Y0MmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9SlBMTVI2OFU3OGNDJnByaW50c2VjPWZyb250Y292ZXImZHE9ZHVuZSZobD0mY2Q9NCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPUpQTE1SNjhVNzhjQyZkcT1kdW5lJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L0NoaWxkcmVuX29mX0R1bmUuaHRtbD9obD0maWQ9SlBMTVI2OFU3OGNDIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9SlBMTVI2OFU3OGNDJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJXaXRoIG1pbGxpb25zIG9mIGNvcGllcyBzb2xkIHdvcmxkd2lkZSwgRnJhbmsgSGVyYmVydCYjMzk7cyBtYWduaWZpY2VudCBEdW5lIGJvb2tzIHN0YW5kIGFtb25nIHRoZSBtYWpvciBhY2hpZXZlbWVudHMgb2YgdGhlIGh1bWFuIGltYWdpbmF0aW9uLiBUaGUgZGVzZXJ0IHBsYW5ldCBoYXMgYmVndW4gdG8gZ3JvdyBncmVlbiBhbmQgbHVzaC4gVGhlIGxpZmUtZ2l2aW5nIHNwaWNlIGlzIGFidW5kYW50LiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIjRrYllFeFNDYTZvQyIsCiAgICAgICJldGFnIjogImo3OEIyNWFiNW9NIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvNGtiWUV4U0NhNm9DIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIlRoZSBTY2llbmNlIG9mIER1bmUiLAogICAgICAgICJzdWJ0aXRsZSI6ICJBbiBVbmF1dGhvcml6ZWQgRXhwbG9yYXRpb24gaW50byB0aGUgUmVhbCBTY2llbmNlIEJlaGluZCBGcmFuayBIZXJiZXJ0J3MgRmljdGlvbmFsIFVuaXZlcnNlIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJLZXZpbiBSLiBHcmF6aWVyIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJCZW5CZWxsYSBCb29rcywgSW5jLiIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMjAwNy0xMi0xMSIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkdldCBleGNpdGVkIGZvciB0aGUgMjAyMSBEZW5pcyBWaWxsZW5ldXZlIER1bmUgZmlsbSByZWxlYXNlLCBzdGFycmluZyBUaW1vdGjDqWUgQ2hhbGFtZXQsIHdpdGggVGhlIFNjaWVuY2Ugb2YgRHVuZSEgU2luY2UgaXRzIG9yaWdpbmFsIHB1YmxpY2F0aW9uIGluIDE5NjUsIHRoZSBEdW5lIHNlcmllcyBoYXMgZW50cmFuY2VkIGdlbmVyYXRpb25zIG9mIHJlYWRlcnMgd2l0aCBpdHMgY29tcGxleCBwbG90dGluZywgZmFzY2luYXRpbmcgY2hhcmFjdGVycywgZ3JhbmQgc2NvcGUsIGFuZCBpbmNyZWRpYmxlIHNjaWVudGlmaWMgcHJlZGljdGlvbnMuIFRoaXMgZ3VpZGUgb2ZmZXJzIGZhc2NpbmF0aW5nIHNjaWVudGlmaWMgc3BlY3VsYXRpb24gb24gdG9waWNzIGluY2x1ZGluZyBxdWFudHVtIHBoeXNpY3MsIGJpb2NoZW1pc3RyeSwgZWNvbG9neSwgZXZvbHV0aW9uLCBwc3ljaG9sb2d5LCB0ZWNobm9sb2d5LCBhbmQgZ2VuZXRpY3MuIEl0IHNjcnV0aW5pemVzIEZyYW5rIEhlcmJlcnTigJlzIHNjaWVuY2UgZmljdGlvbiB3b3JsZCBieSBhc2tpbmcgcXVlc3Rpb25zIHN1Y2ggYXM6IElzIHRoZSBlY29sb2d5IG9mIER1bmUgcmVhbGlzdGljPyBJcyBpdCB0aGVvcmV0aWNhbGx5IHBvc3NpYmxlIHRvIGdldCBpbmZvcm1hdGlvbiBmcm9tIHRoZSBmdXR1cmU/IENvdWxkIGh1bWFucyByZWFsbHkgZXZvbHZlIGFzIEhlcmJlcnQgc3VnZ2VzdHM/IFdoaWNoIG9mIEhlcmJlcnTigJlzIGludmVudGlvbnMgaGF2ZSBhbHJlYWR5IGNvbWUgdG8gbGlmZT8gVGhpcyBjb21wYW5pb24gaXMgYSBtdXN0LWhhdmUgZm9yIGFueSBmYW4gd2hvIHdhbnRzIHRvIHJldmlzaXQgdGhlIHdvcmxkIG9mIER1bmUgYW5kIGV4cGxvcmUgaXQgZXZlbiBmdXJ0aGVyLiIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgxOTM1MjUxNDA4IgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjE5MzUyNTE0MDYiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiB0cnVlLAogICAgICAgICAgImltYWdlIjogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDI0OCwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIlNvY2lhbCBTY2llbmNlIgogICAgICAgIF0sCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogdHJ1ZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMy43LjcuMC5wcmV2aWV3LjMiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPTRrYllFeFNDYTZvQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPTRrYllFeFNDYTZvQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD00a2JZRXhTQ2E2b0MmcGc9UEE2MSZkcT1kdW5lJmhsPSZjZD01JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD00a2JZRXhTQ2E2b0Mmc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9NGtiWUV4U0NhNm9DIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJGT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiB0cnVlLAogICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogNy45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgInJldGFpbFByaWNlIjogewogICAgICAgICAgImFtb3VudCI6IDcuOTksCiAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICB9LAogICAgICAgICJidXlMaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9NGtiWUV4U0NhNm9DJnJkaWQ9Ym9vay00a2JZRXhTQ2E2b0MmcmRvdD0xJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAib2ZmZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAiZmluc2t5T2ZmZXJUeXBlIjogMSwKICAgICAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiA3OTkwMDAwLAogICAgICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgICAgICB9LAogICAgICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogNzk5MDAwMCwKICAgICAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImdpZnRhYmxlIjogdHJ1ZQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRURfRk9SX0FDQ0VTU0lCSUxJVFkiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZSwKICAgICAgICAgICJhY3NUb2tlbkxpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvZG93bmxvYWQvVGhlX1NjaWVuY2Vfb2ZfRHVuZS1zYW1wbGUtZXB1Yi5hY3NtP2lkPTRrYllFeFNDYTZvQyZmb3JtYXQ9ZXB1YiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9UaGVfU2NpZW5jZV9vZl9EdW5lLXNhbXBsZS1wZGYuYWNzbT9pZD00a2JZRXhTQ2E2b0MmZm9ybWF0PXBkZiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPTRrYllFeFNDYTZvQyZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiLi4uIFx1MDAzY2JcdTAwM2VEdW5lXHUwMDNjL2JcdTAwM2Ugbm92ZWxzICwgY29uZnJvbnRpbmcgYSB0aHJlYXQgdG8gc3VyLSB2aXZhbCBpcyBhIGNydWNpYWwgc3RlcCB0byBkZXZlbG9waW5nIG9uZSYjMzk7cyBsYXRlbnQgcG93ZXJzIGFzIGh1bWFuIG9yIC4uLiAoIFx1MDAzY2JcdTAwM2VEdW5lXHUwMDNjL2JcdTAwM2UgMTEgKSAuIFRoZSBvcmRlYWwgYnkgZ29tIGphYmJhciBhbmQgdGhlIGFnb255IGJveCBiZWdhbiBQYXVsJiMzOTtzIHRyYW5zZm9ybWEtIHRpb24gOiAmcXVvdDsgUGF1bCBmZWx0IHRoYXQgaGUgaGFkJm5ic3A7Li4uIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiSWRGYUFBQUFZQUFKIiwKICAgICAgImV0YWciOiAiRWw2RzhEME9mQkkiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9JZEZhQUFBQVlBQUoiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiVGhlIER1bmUgRW5jeWNsb3BlZGlhIiwKICAgICAgICAicHVibGlzaGVyIjogIlB1dG5hbSBQdWJsaXNoaW5nIEdyb3VwIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIxOTg0IiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiT1RIRVIiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICJQU1U6MDAwMDEwMTYyNTkwIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDU1MiwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkxpdGVyYXJ5IENyaXRpY2lzbSIKICAgICAgICBdLAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICIwLjYuMS4wLnByZXZpZXcuMCIsCiAgICAgICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgICAgICAiY29udGFpbnNFcHViQnViYmxlcyI6IGZhbHNlLAogICAgICAgICAgImNvbnRhaW5zSW1hZ2VCdWJibGVzIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJpbWFnZUxpbmtzIjogewogICAgICAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9SWRGYUFBQUFZQUFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1JZEZhQUFBQVlBQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1JZEZhQUFBQVlBQUomZHE9ZHVuZSZobD0mY2Q9NiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPUlkRmFBQUFBWUFBSiZkcT1kdW5lJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L1RoZV9EdW5lX0VuY3ljbG9wZWRpYS5odG1sP2hsPSZpZD1JZEZhQUFBQVlBQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIk5PX1BBR0VTIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IGZhbHNlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPUlkRmFBQUFBWUFBSiZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIk5PTkUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIlhKME9FQUFBUUJBSiIsCiAgICAgICJldGFnIjogIkF2SFBoU0grZHYwIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvWEowT0VBQUFRQkFKIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIkR1bmU6IFRoZSBMYWR5IG9mIENhbGFkYW4iLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkJyaWFuIEhlcmJlcnQiLAogICAgICAgICAgIktldmluIEouIEFuZGVyc29uIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJUb3IgQm9va3MiLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMjEtMDktMjEiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJGcm9tIEJyaWFuIEhlcmJlcnQgYW5kIEtldmluIEouIEFuZGVyc29uLCBEdW5lOiBUaGUgTGFkeSBvZiBDYWxhZGFuIGlzIGEgYnJhbmQgbmV3IG5vdmVsIGluIHRoZSBpbnRlcm5hdGlvbmFsbHkgYmVzdHNlbGxpbmcgRHVuZSBzZXJpZXMuIExhZHkgSmVzc2ljYSwgbW90aGVyIG9mIFBhdWwsIGFuZCBjb25zb3J0IHRvIExldG8gQXRyZWlkZXMuIFRoZSBjaG9pY2VzIHNoZSBtYWRlIHNoYXBlZCBhbiBlbXBpcmUsIGJ1dCBmaXJzdCB0aGUgTGFkeSBvZiBDYWxhZGFuIG11c3QgcmVja29uIHdpdGggaGVyIG93biBiZXRyYXlhbCBvZiB0aGUgQmVuZSBHZXNzZXJpdC4gU2hlIGhhcyBhbHJlYWR5IGJldHJheWVkIGhlciBhbmNpZW50IG9yZGVyLCBidXQgbm93IHNoZSBtdXN0IGRlY2lkZSBpZiBoZXIgbG95YWx0eSB0byB0aGUgU2lzdGVyaG9vZCBpcyBtb3JlIGltcG9ydGFudCB0aGFuIHRoZSBsb3ZlIG9mIGhlciBvd24gZmFtaWx5LiBNZWFud2hpbGUsIGV2ZW50cyBpbiB0aGUgZ3JlYXRlciBlbXBpcmUgYXJlIGFjY2VsZXJhdGluZyBiZXlvbmQgdGhlIGNvbnRyb2wgb2YgZXZlbiB0aGUgUmV2ZXJlbmQgTW90aGVyLCBhbmQgTGFkeSBKZXNzaWNhJ3MgZmFtaWx5IGlzIG9uIGEgY29sbGlzaW9uIGNvdXJzZSB3aXRoIGRlc3RpbnkuIEF0IHRoZSBQdWJsaXNoZXIncyByZXF1ZXN0LCB0aGlzIHRpdGxlIGlzIGJlaW5nIHNvbGQgd2l0aG91dCBEaWdpdGFsIFJpZ2h0cyBNYW5hZ2VtZW50IFNvZnR3YXJlIChEUk0pIGFwcGxpZWQuIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODEyNTA3NjUwNjIiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMTI1MDc2NTA2NCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IHRydWUsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDQ0MiwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiB0cnVlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICIxLjIuMi4wLnByZXZpZXcuMiIsCiAgICAgICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgICAgICAiY29udGFpbnNFcHViQnViYmxlcyI6IGZhbHNlLAogICAgICAgICAgImNvbnRhaW5zSW1hZ2VCdWJibGVzIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJpbWFnZUxpbmtzIjogewogICAgICAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9WEowT0VBQUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgICAidGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9WEowT0VBQUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT0xJmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPVhKME9FQUFBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmRxPWR1bmUmaGw9JmNkPTcmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPVhKME9FQUFBUUJBSiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1YSjBPRUFBQVFCQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIkZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IHRydWUsCiAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiAxMi45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgInJldGFpbFByaWNlIjogewogICAgICAgICAgImFtb3VudCI6IDEyLjk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAiYnV5TGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPVhKME9FQUFBUUJBSiZyZGlkPWJvb2stWEowT0VBQUFRQkFKJnJkb3Q9MSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgIm9mZmVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpbnNreU9mZmVyVHlwZSI6IDEsCiAgICAgICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogMTI5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiAxMjk5MDAwMCwKICAgICAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImdpZnRhYmxlIjogdHJ1ZQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD1YSjBPRUFBQVFCQUomaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIkZyb20gQnJpYW4gSGVyYmVydCBhbmQgS2V2aW4gSi4gQW5kZXJzb24sIER1bmU6IFRoZSBMYWR5IG9mIENhbGFkYW4gaXMgYSBicmFuZCBuZXcgbm92ZWwgaW4gdGhlIGludGVybmF0aW9uYWxseSBiZXN0c2VsbGluZyBEdW5lIHNlcmllcy4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJfdGUtd1FiLVZfOEMiLAogICAgICAiZXRhZyI6ICJmejlsTUU3SGtydyIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL190ZS13UWItVl84QyIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJQYXVsIG9mIER1bmUiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkJyaWFuIEhlcmJlcnQiLAogICAgICAgICAgIktldmluIEouIEFuZGVyc29uIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJNYWNtaWxsYW4iLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMDgtMDktMTYiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJBdCBsb25nIGxhc3QtLXRoZSBkaXJlY3Qgc2VxdWVsIHRvIER1bmUhIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODA3NjUzMTI5NDUiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMDc2NTMxMjk0OCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA1MTMsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgImF2ZXJhZ2VSYXRpbmciOiA0LAogICAgICAgICJyYXRpbmdzQ291bnQiOiA1LAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICIwLjMuMC4wLnByZXZpZXcuMCIsCiAgICAgICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgICAgICAiY29udGFpbnNFcHViQnViYmxlcyI6IGZhbHNlLAogICAgICAgICAgImNvbnRhaW5zSW1hZ2VCdWJibGVzIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJpbWFnZUxpbmtzIjogewogICAgICAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9X3RlLXdRYi1WXzhDJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgICAidGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9X3RlLXdRYi1WXzhDJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT0xJmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPV90ZS13UWItVl84QyZwcmludHNlYz1mcm9udGNvdmVyJmRxPWR1bmUmaGw9JmNkPTgmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1fdGUtd1FiLVZfOEMmZHE9ZHVuZSZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9hYm91dC9QYXVsX29mX0R1bmUuaHRtbD9obD0maWQ9X3RlLXdRYi1WXzhDIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9X3RlLXdRYi1WXzhDJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJBdCBsb25nIGxhc3QtLXRoZSBkaXJlY3Qgc2VxdWVsIHRvIER1bmUhIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAicnlvdDRBZzJHR1FDIiwKICAgICAgImV0YWciOiAiS2xKdzlSeE1MRWsiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9yeW90NEFnMkdHUUMiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiQ2hhcHRlcmhvdXNlOiBEdW5lIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJGcmFuayBIZXJiZXJ0IgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJQZW5ndWluIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIxOTg3IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiRmlmdGVlbiB0aG91c2FuZCB5ZWFycyBhZnRlciBMZXRvIElJJ3MgZGVhdGgsIHRoZSByZW1uYW50cyBvZiB0aGUgQmVuZSBHZXNzZXJpdCBjb250ZW5kIHdpdGggdGhlIHJ1dGhsZXNzIGxlYWRlcnMgb2YgYW4gYWxpZW4gY3VsdHVyZSB0byBmb3JnZSBhIG5ldyBjaXZpbGl6YXRpb24gYW5kIHByZXNlcnZlIHRoZSBiZXN0IG9mIHRoZSBPbGQgRW1waXJlIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjA0NDExMDI2NzAiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDQ0MTEwMjY3OSIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA0NTIsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgImF2ZXJhZ2VSYXRpbmciOiA0LAogICAgICAgICJyYXRpbmdzQ291bnQiOiA1LAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICIwLjQuNS4wLnByZXZpZXcuMCIsCiAgICAgICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgICAgICAiY29udGFpbnNFcHViQnViYmxlcyI6IGZhbHNlLAogICAgICAgICAgImNvbnRhaW5zSW1hZ2VCdWJibGVzIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJpbWFnZUxpbmtzIjogewogICAgICAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9cnlvdDRBZzJHR1FDJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgICAidGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9cnlvdDRBZzJHR1FDJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT0xJmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPXJ5b3Q0QWcyR0dRQyZwcmludHNlYz1mcm9udGNvdmVyJmRxPWR1bmUmaGw9JmNkPTkmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1yeW90NEFnMkdHUUMmZHE9ZHVuZSZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9hYm91dC9DaGFwdGVyaG91c2VfRHVuZS5odG1sP2hsPSZpZD1yeW90NEFnMkdHUUMiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD1yeW90NEFnMkdHUUMmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIkZpZnRlZW4gdGhvdXNhbmQgeWVhcnMgYWZ0ZXIgTGV0byBJSSYjMzk7cyBkZWF0aCwgdGhlIHJlbW5hbnRzIG9mIHRoZSBCZW5lIEdlc3Nlcml0IGNvbnRlbmQgd2l0aCB0aGUgcnV0aGxlc3MgbGVhZGVycyBvZiBhbiBhbGllbiBjdWx0dXJlIHRvIGZvcmdlIGEgbmV3IGNpdmlsaXphdGlvbiBhbmQgcHJlc2VydmUgdGhlIGJlc3Qgb2YgdGhlIE9sZCBFbXBpcmUiCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJ6M1NGMDhpUUdwRUMiLAogICAgICAiZXRhZyI6ICJpUzV6Z3NBK0VacyIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL3ozU0YwOGlRR3BFQyIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJEcmVhbWVyIG9mIER1bmUiLAogICAgICAgICJzdWJ0aXRsZSI6ICJUaGUgQmlvZ3JhcGh5IG9mIEZyYW5rIEhlcmJlcnQiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkJyaWFuIEhlcmJlcnQiCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIk1hY21pbGxhbiIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMjAwMy0wNC0xOSIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkV2ZXJ5b25lIGtub3dzIEZyYW5rIEhlcmJlcnQncyBEdW5lLiBUaGlzIGFtYXppbmcgYW5kIGNvbXBsZXggZXBpYywgY29tYmluaW5nIHBvbGl0aWNzLCByZWxpZ2lvbiwgaHVtYW4gZXZvbHV0aW9uLCBhbmQgZWNvbG9neSwgaGFzIGNhcHR1cmVkIHRoZSBpbWFnaW5hdGlvbiBvZiBnZW5lcmF0aW9ucyBvZiByZWFkZXJzLiBPbmUgb2YgdGhlIG1vc3QgcG9wdWxhciBzY2llbmNlIGZpY3Rpb24gbm92ZWxzIGV2ZXIgd3JpdHRlbiwgaXQgaGFzIGJlY29tZSBhIHdvcmxkd2lkZSBwaGVub21lbm9uLCB3aW5uaW5nIGF3YXJkcywgc2VsbGluZyBtaWxsaW9ucyBvZiBjb3BpZXMgYXJvdW5kIHRoZSB3b3JsZC4gSW4gdGhlIHByb3BoZXRpYyB5ZWFyIG9mIDE5ODQsIER1bmUgd2FzIG1hZGUgaW50byBhIG1vdGlvbiBwaWN0dXJlIGRpcmVjdGVkIGJ5IERhdmlkIEx5bmNoLCBhbmQgaXQgaGFzIHJlY2VudGx5IGJlZW4gcHJvZHVjZWQgYXMgYSB0aHJlZS1wYXJ0IG1pbmlzZXJpZXMgb24gdGhlIFNjaS1GaSBDaGFubmVsLiBUaG91Z2ggaGUgaXMgYmVzdCByZW1lbWJlcmVkIGZvciBEdW5lLCBGcmFuayBIZXJiZXJ0IHdhcyB0aGUgYXV0aG9yIG9mIG1vcmUgdGhhbiB0d2VudHkgYm9va3MgYXQgdGhlIHRpbWUgb2YgaGlzIHRyYWdpYyBkZWF0aCBpbiAxOTg2LCBpbmNsdWRpbmcgc3VjaCBjbGFzc2ljIG5vdmVscyBhcyBUaGUgR3JlZW4gQnJhaW4sIFRoZSBTYW50YXJvZ2EgQmFycmllciwgVGhlIFdoaXRlIFBsYWd1ZSBhbmQgRG9zYWRpIEV4cGVyaW1lbnQuIEJyaWFuIEhlcmJlcnQsIEZyYW5rIEhlcmJlcnQncyBlbGRlc3Qgc29uLCB0ZWxscyB0aGUgcHJvdm9jYXRpdmUgc3Rvcnkgb2YgaGlzIGZhdGhlcidzIGV4dHJhb3JkaW5hcnkgbGlmZSBpbiB0aGlzIGhvbmVzdCBhbmQgbG92aW5nIGNocm9uaWNsZS4gSGUgaGFzIGFsc28gYnJvdWdodCB0byBsaWdodCBhbGwgdGhlIGV2ZW50cyBpbiBIZXJiZXJ0J3MgbGlmZSB0aGF0IHdvdWxkIGZpbmQgdGhlaXIgd2F5IGludG8gc3BlY3VsYXRpdmUgZmljdGlvbidzIGdyZWF0ZXN0IGVwaWMuIEZyb20gaGlzIGVhcmx5IHllYXJzIGluIFRhY29tYSwgV2FzaGluZ3RvbiwgYW5kIGhpcyBlZHVjYXRpb24gYXQgdGhlIFVuaXZlcnNpdHkgb2YgV2FzaGluZ3RvbiwgU2VhdHRsZSwgYW5kIGluIHRoZSBOYXZ5LCB0aHJvdWdoIHRoZSB5ZWFycyBvZiB0cnlpbmcgaGlzIGhhbmQgYXMgYSBUViBjYW1lcmFtYW4sIHJhZGlvIGNvbW1lbnRhdG9yLCByZXBvcnRlciwgYW5kIGVkaXRvciBvZiBzZXZlcmFsIFdlc3QgQ29hc3QgbmV3c3BhcGVyLCB0byB0aGUgZGlmZmljdWx0IHllYXJzIG9mIHBvdmVydHkgd2hpbGUgc3RydWdnbGluZyB0byBiZWNvbWUgYSBwdWJsaXNoZWQgd3JpdGVyLCBIZXJiZXJ0IHdvcmtlZCBsb25nIGFuZCBoYXJkIGJlZm9yZSBmaW5kaW5nIHN1Y2Nlc3MgYWZ0ZXIgdGhlIHB1YmxpY2F0aW9uIG9mIER1bmUgaW4gMTk2NS4gQnJpYW4gSGVyYmVydCB3cml0ZXMgYWJvdXQgdGhlc2UgeWVhcnMgd2l0aCBhIHRydXRoZnVsIGludGVuc2l0eSB0aGF0IGJyaW5ncyBldmVyeSBmYWNldCBvZiBoaXMgZmF0aGVyJ3MgYnJpbGxpYW50LCBhbmQgc29tZXRpbWVzIHRyb3VibGVkLCBnZW5pdXMgdG8gZnVsbCBsaWdodC4gSW5zaWdodGZ1bCBhbmQgcHJvdm9jYXRpdmUsIGNvbnRhaW5pbmcgZmFtaWx5IHBob3RvcyBuZXZlciBwdWJsaXNoZWQgYW55d2hlcmUsIHRoaXMgYWJzb3JiaW5nIGJpb2dyYXBoeSBvZmZlcnMgQnJpYW4gSGVyYmVydCdzIHVuaXF1ZSBwZXJzb25hbCBwZXJzcGVjdGl2ZSBvbiBvbmUgb2YgdGhlIG1vc3QgZW5pZ21hdGljIGFuZCBjcmVhdGl2ZSB0YWxlbnRzIG9mIG91ciB0aW1lLiBEcmVhbWVyIG9mIER1bmUgaXMgYSAyMDA0IEh1Z28gQXdhcmQgTm9taW5lZSBmb3IgQmVzdCBSZWxhdGVkIFdvcmsuIEF0IHRoZSBQdWJsaXNoZXIncyByZXF1ZXN0LCB0aGlzIHRpdGxlIGlzIGJlaW5nIHNvbGQgd2l0aG91dCBEaWdpdGFsIFJpZ2h0cyBNYW5hZ2VtZW50IFNvZnR3YXJlIChEUk0pIGFwcGxpZWQuIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODE0Mjk5NTg0NDgiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMTQyOTk1ODQ0OCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IHRydWUsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDgwMywKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkJpb2dyYXBoeSAmIEF1dG9iaW9ncmFwaHkiCiAgICAgICAgXSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiB0cnVlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICIzLjE1LjE0LjAucHJldmlldy4yIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD16M1NGMDhpUUdwRUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD16M1NGMDhpUUdwRUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9ejNTRjA4aVFHcEVDJnByaW50c2VjPWZyb250Y292ZXImZHE9ZHVuZSZobD0mY2Q9MTAmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXozU0YwOGlRR3BFQyZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD16M1NGMDhpUUdwRUMiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIkZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IHRydWUsCiAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiAxNC45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgInJldGFpbFByaWNlIjogewogICAgICAgICAgImFtb3VudCI6IDE0Ljk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAiYnV5TGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXozU0YwOGlRR3BFQyZyZGlkPWJvb2stejNTRjA4aVFHcEVDJnJkb3Q9MSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgIm9mZmVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpbnNreU9mZmVyVHlwZSI6IDEsCiAgICAgICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogMTQ5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiAxNDk5MDAwMCwKICAgICAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImdpZnRhYmxlIjogdHJ1ZQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD16M1NGMDhpUUdwRUMmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIkJyaWFuIEhlcmJlcnQsIEZyYW5rIEhlcmJlcnQmIzM5O3MgZWxkZXN0IHNvbiwgdGVsbHMgdGhlIHByb3ZvY2F0aXZlIHN0b3J5IG9mIGhpcyBmYXRoZXImIzM5O3MgZXh0cmFvcmRpbmFyeSBsaWZlIGluIHRoaXMgaG9uZXN0IGFuZCBsb3ZpbmcgY2hyb25pY2xlLiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIi0tOGNCWWFObEE0QyIsCiAgICAgICJldGFnIjogIlozRXNOWjBJc3d3IiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvLS04Y0JZYU5sQTRDIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIkR1bmU6IEhvdXNlIENvcnJpbm8iLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkJyaWFuIEhlcmJlcnQiLAogICAgICAgICAgIktldmluIEouIEFuZGVyc29uIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJTcGVjdHJhIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDAyLTA4LTI3IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiQm9vayBUaHJlZSBvZiB0aGUgRXBpYyBQcmVxdWVsIHRvIHRoZSBDbGFzc2ljIE5vdmVsIER1bmXigJRTb29uIHRvIEJlIGEgTWFqb3IgTW90aW9uIFBpY3R1cmUgVGhlIGdyYW5kIGZpbmFsZSBvZiB0aGUgY29tcGxleCBlcGljIHRyaWxvZ3kgb2YgdGhlIGdlbmVyYXRpb24gYmVmb3JlIEZyYW5rIEhlcmJlcnTigJlzIG1hc3RlcndvcmsgRHVuZS4gU2hhZGRhbSBDb3JyaW5vIElWLCBFbXBlcm9yIG9mIHRoZSBLbm93biBVbml2ZXJzZSwgaGFzIHJpc2tlZCBldmVyeXRoaW5nIHRvIGNyZWF0ZSBhIHN1YnN0aXR1dGUgZm9yIHRoZSBzcGljZSBtZWxhbmdlIC4gLiAuIFRoZSBzdWJzdGFuY2UgdGhhdCBtYWtlcyBzcGFjZSB0cmF2ZWwgcG9zc2libGUgLiAuIC4gVGhhdCBwcm9sb25ncyBsaWZlIC4gLiAuIFRoYXQgYWxsb3dzIHByZXNjaWVuY2UgLiAuIC4gQSBzdWJzdGFuY2UgdGhhdCBpcyBmb3VuZCBvbmx5IG9uIHRoZSBkZXNlcnQgcGxhbmV0IEFycmFraXMsIGEgaGFyc2ggd29ybGQgb2Ygc3Rvcm1zIGFuZCBtb25zdHJvdXMgc2FuZHdvcm1zLiBTaGFkZGFtIGhhcyB1c2VkIHRoZSBub2JsZSBob3VzZXMgYXMgY2hlc3MgcGllY2VzIGZvciBoaXMgc2NoZW1lLCBjYXVzaW5nIHRoZSBvdmVydGhyb3cgb2YgcG93ZXJmdWwgZmFtaWxpZXMsIHJhaXNpbmcgb3RoZXIgaG91c2VzIHRvIHBvd2VyLiBUaGUgQmVuZSBHZXNzZXJpdCBTaXN0ZXJob29kIHdvcmtzIHRoZWlyIG93biBwbGFucywgbWFuaXB1bGF0aW5nIGJsb29kbGluZXMsIHRyeWluZyB0byBjcmVhdGUgdGhlaXIgbG9uZy1hd2FpdGVkIG1lc3NpYWgsIHRoZSBLd2lzYXR6IEhhZGVyYWNoLiBEdWtlIExldG8gQXRyZWlkZXMgYmF0dGxlcyBoaXMgbW9ydGFsIGVuZW15LCBCYXJvbiBWbGFkaW1pciBIYXJrb25uZW4sIHdoaWxlIGhpcyBsb3ZlIGZvciB0aGUgYmVhdXRpZnVsIGFuZCB3aXNlIEplc3NpY2EgZ3Jvd3MgZXZlbiBpbiB0aGUgZmFjZSBvZiBibG9vZHNoZWQgYW5kIGJldHJheWFsLiBCdXQgYXJlIHRoZXkgYWxsIGp1c3QgcGF3bnMgb2YgYW4gaW5ldml0YWJsZSBmdXR1cmUgY2VudGVyZWQgYXJvdW5kIHRoZSBwbGFuZXQgRHVuZT8gTG9vayBmb3IgdGhlIGVudGlyZSBwcmVxdWVsIHNlcmllcyBEVU5FOiBIT1VTRSBBVFJFSURFUyDigKIgRFVORTogSE9VU0UgSEFSS09OTkVOIOKAoiBEVU5FOiBIT1VTRSBDT1JSSU5PIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODA1NTM4OTY5NTQiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMDU1Mzg5Njk1NCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IHRydWUsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDY4NSwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAiYXZlcmFnZVJhdGluZyI6IDMsCiAgICAgICAgInJhdGluZ3NDb3VudCI6IDEsCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogdHJ1ZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC44LjcuMC5wcmV2aWV3LjIiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPS0tOGNCWWFObEE0QyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPS0tOGNCWWFObEE0QyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD0tLThjQllhTmxBNEMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZkcT1kdW5lJmhsPSZjZD0xMSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9LS04Y0JZYU5sQTRDJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPS0tOGNCWWFObEE0QyIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogdHJ1ZSwKICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgImFtb3VudCI6IDcuOTksCiAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICB9LAogICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiA3Ljk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAiYnV5TGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPS0tOGNCWWFObEE0QyZyZGlkPWJvb2stLS04Y0JZYU5sQTRDJnJkb3Q9MSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgIm9mZmVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpbnNreU9mZmVyVHlwZSI6IDEsCiAgICAgICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogNzk5MDAwMCwKICAgICAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInJldGFpbFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDc5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJnaWZ0YWJsZSI6IHRydWUKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAgICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IHRydWUsCiAgICAgICAgICAiYWNzVG9rZW5MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL0R1bmVfSG91c2VfQ29ycmluby1zYW1wbGUtZXB1Yi5hY3NtP2lkPS0tOGNCWWFObEE0QyZmb3JtYXQ9ZXB1YiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9LS04Y0JZYU5sQTRDJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJCdXQgYXJlIHRoZXkgYWxsIGp1c3QgcGF3bnMgb2YgYW4gaW5ldml0YWJsZSBmdXR1cmUgY2VudGVyZWQgYXJvdW5kIHRoZSBwbGFuZXQgRHVuZT8gTG9vayBmb3IgdGhlIGVudGlyZSBwcmVxdWVsIHNlcmllcyBEVU5FOiBIT1VTRSBBVFJFSURFUyDigKIgRFVORTogSE9VU0UgSEFSS09OTkVOIOKAoiBEVU5FOiBIT1VTRSBDT1JSSU5PIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiTDgxSjFQelRUUzhDIiwKICAgICAgImV0YWciOiAiUkJ0UW11Q2pubVUiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9MODFKMVB6VFRTOEMiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiVGhlIFJvYWQgdG8gRHVuZSIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiRnJhbmsgSGVyYmVydCIsCiAgICAgICAgICAiQnJpYW4gSGVyYmVydCIsCiAgICAgICAgICAiS2V2aW4gSi4gQW5kZXJzb24iCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIk1hY21pbGxhbiIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMjAwNS0wOSIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoaXMgY29tcGFuaW9uIHRvIEZyYW5rIEhlcmJlcnQncyBcIk5ldyBZb3JrIFRpbWVzXCIgYmVzdHNlbGxpbmcgY2xhc3NpYyBpbmNsdWRlcyBuZXZlci1iZWZvcmUtcHVibGlzaGVkIGNoYXB0ZXJzIGZyb20gXCJEdW5lXCIgYW5kIFwiRHVuZSBNZXNzaWFoLFwiIG9yaWdpbmFsIHN0b3JpZXMsIGFuZCBhIGJyYW5kLW5ldyBub3ZlbCBieSBCcmlhbiBIZXJiZXJ0IGFuZCBLZXZpbiBKLiBBbmRlcnNvbi4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMDc2NTMxMjk1NiIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgwNzY1MzEyOTUyIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDUwOCwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAiYXZlcmFnZVJhdGluZyI6IDQsCiAgICAgICAgInJhdGluZ3NDb3VudCI6IDMsCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjAuNC41LjAucHJldmlldy4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1MODFKMVB6VFRTOEMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPUw4MUoxUHpUVFM4QyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPUw4MUoxUHpUVFM4QyZkcT1kdW5lJmhsPSZjZD0xMiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPUw4MUoxUHpUVFM4QyZkcT1kdW5lJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L1RoZV9Sb2FkX3RvX0R1bmUuaHRtbD9obD0maWQ9TDgxSjFQelRUUzhDIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJOT19QQUdFUyIsCiAgICAgICAgImVtYmVkZGFibGUiOiBmYWxzZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD1MODFKMVB6VFRTOEMmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJOT05FIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJUaGlzIGJvb2sgZXhwbGFpbnMgaG93LCBieSBjb21pbmcgdG8gZ3JpcHMgd2l0aCBLYW50JiMzOTtzIGxlZ2FjeSwgd2UgY2FuIGJlZ2luIHRvIHdvcmsgdGhyb3VnaCB0aGVzZSBkZWJhdGVzIG1vcmUgcHJvZHVjdGl2ZWx5LiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIl91RVctdXM0X0dBQyIsCiAgICAgICJldGFnIjogIkMwQXJMMWRQZE8wIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvX3VFVy11czRfR0FDIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIlNhbmQgRHVuZSBTdGFiaWxpemF0aW9uLCBTaGVsdGVyYmVsdHMgYW5kIEFmZm9yZXN0YXRpb24gaW4gRHJ5IFpvbmVzIiwKICAgICAgICAicHVibGlzaGVyIjogIkZvb2QgJiBBZ3JpY3VsdHVyZSBPcmcuIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIxOTg1LTAxLTAxIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjkyNTEwMjI2MTUiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4OTI1MTAyMjYxMCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDI1MiwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIk5hdHVyZSIKICAgICAgICBdLAogICAgICAgICJhdmVyYWdlUmF0aW5nIjogNCwKICAgICAgICAicmF0aW5nc0NvdW50IjogMSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC44LjEwLjAucHJldmlldy4xIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1fdUVXLXVzNF9HQUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1fdUVXLXVzNF9HQUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9X3VFVy11czRfR0FDJnBnPVBBMzQmZHE9ZHVuZSZobD0mY2Q9MTMmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1fdUVXLXVzNF9HQUMmZHE9ZHVuZSZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9hYm91dC9TYW5kX0R1bmVfU3RhYmlsaXphdGlvbl9TaGVsdGVyYmVsdHNfYW5kLmh0bWw/aGw9JmlkPV91RVctdXM0X0dBQyIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiTk9UX0ZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiQUxMX1BBR0VTIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9TYW5kX0R1bmVfU3RhYmlsaXphdGlvbl9TaGVsdGVyYmVsdHNfYW5kLXNhbXBsZS1wZGYuYWNzbT9pZD1fdUVXLXVzNF9HQUMmZm9ybWF0PXBkZiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPV91RVctdXM0X0dBQyZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiLi4uIFx1MDAzY2JcdTAwM2VkdW5lXHUwMDNjL2JcdTAwM2UgZm9ybXMgYXMgcXVvdGVkIGJlbG93IDogJnF1b3Q7IFRoZSB0aHJlZSBtYWluIHNpbXBsZSBcdTAwM2NiXHUwMDNlZHVuZVx1MDAzYy9iXHUwMDNlIGZvcm1zIGFyZSBzZWVuIHRvIGJlIGRpZmZlcmVudGlhdGVkIGJ5IHRoZSBhbW91bnQgb2YgYXZhaWxhYmxlIHNhbmQgYW5kIGl0cyBwb3RlbnRpYWwgdHJhbnNwb3J0ICwgcmF0aGVyIHRoYW4gYnkgd2luZCByZWdpbWUgLCB3aXRoIHByb2dyZXNzaW9uIGZyb20gYmFyY2hhbiB0aHJvdWdoIGxvbmdpdHVkaW5hbCZuYnNwOy4uLiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogInAxTVVMSDdKc1RRQyIsCiAgICAgICJldGFnIjogImtRVXNLajV6dEJZIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvcDFNVUxIN0pzVFFDIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIkR1bmUiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkZyYW5rIEhlcmJlcnQiCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIlBlbmd1aW4iLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMDMtMDgtMjYiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICLigKIgRFVORTogUEFSVCBUV08g4oCiIFRIRSBNQUpPUiBNT1RJT04gUElDVFVSRSBEaXJlY3RlZCBieSBEZW5pcyBWaWxsZW5ldXZlLCBzY3JlZW5wbGF5IGJ5IERlbmlzIFZpbGxlbmV1dmUgYW5kIEpvbiBTcGFpaHRzLCBiYXNlZCBvbiB0aGUgbm92ZWwgRHVuZSBieSBGcmFuayBIZXJiZXJ0IOKAoiBTdGFycmluZyBUaW1vdGjDqWUgQ2hhbGFtZXQsIFplbmRheWEsIFJlYmVjY2EgRmVyZ3Vzb24sIEpvc2ggQnJvbGluLCBBdXN0aW4gQnV0bGVyLCBGbG9yZW5jZSBQdWdoLCBEYXZlIEJhdXRpc3RhLCBDaHJpc3RvcGhlciBXYWxrZW4sIFN0ZXBoZW4gTWNLaW5sZXkgSGVuZGVyc29uLCBMw6lhIFNleWRvdXgsIHdpdGggU3RlbGxhbiBTa2Fyc2fDpXJkLCB3aXRoIENoYXJsb3R0ZSBSYW1wbGluZywgYW5kIEphdmllciBCYXJkZW0gRnJhbmsgSGVyYmVydOKAmXMgY2xhc3NpYyBtYXN0ZXJwaWVjZeKAlGEgdHJpdW1waCBvZiB0aGUgaW1hZ2luYXRpb24gYW5kIG9uZSBvZiB0aGUgYmVzdHNlbGxpbmcgc2NpZW5jZSBmaWN0aW9uIG5vdmVscyBvZiBhbGwgdGltZS4gU2V0IG9uIHRoZSBkZXNlcnQgcGxhbmV0IEFycmFraXMsIER1bmUgaXMgdGhlIHN0b3J5IG9mIFBhdWwgQXRyZWlkZXPigJR3aG8gd291bGQgYmVjb21lIGtub3duIGFzIE11YWQnRGli4oCUYW5kIG9mIGEgZ3JlYXQgZmFtaWx5J3MgYW1iaXRpb24gdG8gYnJpbmcgdG8gZnJ1aXRpb24gbWFua2luZCdzIG1vc3QgYW5jaWVudCBhbmQgdW5hdHRhaW5hYmxlIGRyZWFtLiBBIHN0dW5uaW5nIGJsZW5kIG9mIGFkdmVudHVyZSBhbmQgbXlzdGljaXNtLCBlbnZpcm9ubWVudGFsaXNtIGFuZCBwb2xpdGljcywgRHVuZSB3b24gdGhlIGZpcnN0IE5lYnVsYSBBd2FyZCwgc2hhcmVkIHRoZSBIdWdvIEF3YXJkLCBhbmQgZm9ybWVkIHRoZSBiYXNpcyBvZiB3aGF0IGlzIHVuZG91YnRlZGx5IHRoZSBncmFuZGVzdCBlcGljIGluIHNjaWVuY2UgZmljdGlvbi4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MTEwMTY1ODA1NSIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIxMTAxNjU4MDUzIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogdHJ1ZSwKICAgICAgICAgICJpbWFnZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGFnZUNvdW50IjogODk3LAogICAgICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAgICAgImNhdGVnb3JpZXMiOiBbCiAgICAgICAgICAiRmljdGlvbiIKICAgICAgICBdLAogICAgICAgICJhdmVyYWdlUmF0aW5nIjogNSwKICAgICAgICAicmF0aW5nc0NvdW50IjogMSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiB0cnVlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICIyLjI3LjIyLjAucHJldmlldy4yIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1wMU1VTEg3SnNUUUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1wMU1VTEg3SnNUUUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9cDFNVUxIN0pzVFFDJnBnPVBQNSZkcT1kdW5lJmhsPSZjZD0xNCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9cDFNVUxIN0pzVFFDJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXAxTVVMSDdKc1RRQyIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogdHJ1ZSwKICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgImFtb3VudCI6IDkuOTksCiAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICB9LAogICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiA5Ljk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAiYnV5TGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXAxTVVMSDdKc1RRQyZyZGlkPWJvb2stcDFNVUxIN0pzVFFDJnJkb3Q9MSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgIm9mZmVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpbnNreU9mZmVyVHlwZSI6IDEsCiAgICAgICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogOTk5MDAwMCwKICAgICAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInJldGFpbFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDk5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJnaWZ0YWJsZSI6IHRydWUKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAgICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IHRydWUsCiAgICAgICAgICAiYWNzVG9rZW5MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL0R1bmUtc2FtcGxlLWVwdWIuYWNzbT9pZD1wMU1VTEg3SnNUUUMmZm9ybWF0PWVwdWImb3V0cHV0PWFjczRfZnVsZmlsbG1lbnRfdG9rZW4mZGxfdHlwZT1zYW1wbGUmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPXAxTVVMSDdKc1RRQyZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiLi4uIFx1MDAzY2JcdTAwM2VEVU5FXHUwMDNjL2JcdTAwM2UgOiBUSEUgQklPR1JBUEhZIE9GIEZSQU5LIEhFUkJFUlQgQm9va3MgRWRpdGVkIGJ5IEJyaWFuIEhlcmJlcnQgVEhFIE5PVEVCT09LUyBPRiBGUkFOSyBIRVJCRVJUJiMzOTtTIFx1MDAzY2JcdTAwM2VEVU5FXHUwMDNjL2JcdTAwM2UgU09OR1MgT0YgTVVBRCYjMzk7RElCIEJvb2tzIGJ5IEJyaWFuIEhlcmJlcnQgYW5kIC4uLiBcdTAwM2NiXHUwMDNlRFVORVx1MDAzYy9iXHUwMDNlIFNBTkRTIE9GIFx1MDAzY2JcdTAwM2VEVU5FIERVTkVcdTAwM2MvYlx1MDAzZSBGUkFOSyBIRVJCRVJUIEFDRSBOZXcgWW9yayBBQ0UgUHVibGlzaGVkIGJ5IEJlcmtsZXkuIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiTm5OX0VBQUFRQkFKIiwKICAgICAgImV0YWciOiAiNUxxWXpRckdlSG8iLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9Obk5fRUFBQVFCQUoiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiRGlzY292ZXJpbmcgRHVuZSIsCiAgICAgICAgInN1YnRpdGxlIjogIkVzc2F5cyBvbiBGcmFuayBIZXJiZXJ0J3MgRXBpYyBTYWdhIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJEb21pbmljIEouIE5hcmRpIiwKICAgICAgICAgICJOLiBUcmV2b3IgQnJpZXJseSIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiTWNGYXJsYW5kIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDIyLTA4LTAxIiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnJhbmsgSGVyYmVydCdzIER1bmUgaXMgb25lIG9mIHRoZSBtb3N0IHdlbGwta25vd24gc2NpZW5jZSBmaWN0aW9uIG5vdmVscyBvZiBhbGwgdGltZSwgYW5kIGl0IGlzIG9mdGVuIHJldmVyZWQgYWxvbmdzaWRlIHRpbWUtaG9ub3JlZCBjbGFzc2ljcyBsaWtlIFRoZSBMb3JkIG9mIHRoZSBSaW5ncy4gVW5saWtlIFRvbGtpZW4ncyB3b3JrLCB0aGUgRHVuZSBzZXJpZXMgaGFzIHJlY2VpdmVkIHJlbWFya2FibHkgbGl0dGxlIGFjYWRlbWljIGF0dGVudGlvbi4gVGhpcyBjb2xsZWN0aW9uIGluY2x1ZGVzIGZvdXJ0ZWVuIG5ldyBlc3NheXMgZnJvbSB2YXJpb3VzIGFjYWRlbWljIGRpc2NpcGxpbmVzLS1pbmNsdWRpbmcgcGhpbG9zb3BoeSwgcG9saXRpY2FsIHNjaWVuY2UsIGRpc2FiaWxpdHkgc3R1ZGllcywgSXNsYW1pYyB0aGVvbG9neSwgZW52aXJvbm1lbnRhbCBzdHVkaWVzLCBhbmQgQnl6YW50aW5lIGhpc3RvcnktLXRoYXQgZXhhbWluZSBhbGwgc2l4IG9mIEhlcmJlcnQncyBEdW5lIGJvb2tzLiBBcyBhIGNvbXBlbmRpdW0sIGl0IGFzc2VydHMgdGhhdCBhIG11bHRpZGlzY2lwbGluYXJ5IGFwcHJvYWNoIHRvIHRoZSB0ZXh0cyBjYW4gbGVhZCB0byBmcmVzaCBkaXNjb3Zlcmllcy4gQWxzbyBpbmNsdWRlZCBpbiB0aGlzIGNvbGxlY3Rpb24gYXJlIGFuIGludHJvZHVjdGlvbiBieSBUaW0gTydSZWlsbHksIHdobyBhdXRob3JlZCBvbmUgb2YgdGhlIGZpcnN0IGNyaXRpY2FsIGFwcHJhaXNhbHMgb2YgSGVyYmVydCdzIHdyaXRpbmdzIGluIDE5ODEsIGFuZCBhIGNvbXByZWhlbnNpdmUgYmlibGlvZ3JhcGh5IG9mIGVzc2VudGlhbCBwcmltYXJ5IGFuZCBzZWNvbmRhcnkgc291cmNlcy4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MTQ3NjY0NjcyNSIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIxNDc2NjQ2NzI0IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogdHJ1ZSwKICAgICAgICAgICJpbWFnZSI6IHRydWUKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiAyODUsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJMaXRlcmFyeSBDcml0aWNpc20iCiAgICAgICAgXSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMS4yLjIuMC5wcmV2aWV3LjMiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPU5uTl9FQUFBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPU5uTl9FQUFBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1Obk5fRUFBQVFCQUomcGc9UEEyNjgmZHE9ZHVuZSZobD0mY2Q9MTUmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPU5uTl9FQUFBUUJBSiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1Obk5fRUFBQVFCQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIkZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IHRydWUsCiAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiAyOS45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgInJldGFpbFByaWNlIjogewogICAgICAgICAgImFtb3VudCI6IDI5Ljk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAiYnV5TGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPU5uTl9FQUFBUUJBSiZyZGlkPWJvb2stTm5OX0VBQUFRQkFKJnJkb3Q9MSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgIm9mZmVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpbnNreU9mZmVyVHlwZSI6IDEsCiAgICAgICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogMjk5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiAyOTk5MDAwMCwKICAgICAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImdpZnRhYmxlIjogdHJ1ZQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZSwKICAgICAgICAgICJhY3NUb2tlbkxpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvZG93bmxvYWQvRGlzY292ZXJpbmdfRHVuZS1zYW1wbGUtZXB1Yi5hY3NtP2lkPU5uTl9FQUFBUUJBSiZmb3JtYXQ9ZXB1YiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9EaXNjb3ZlcmluZ19EdW5lLXNhbXBsZS1wZGYuYWNzbT9pZD1Obk5fRUFBQVFCQUomZm9ybWF0PXBkZiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPU5uTl9FQUFBUUJBSiZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiLi4uIFx1MDAzY2JcdTAwM2VkdW5lXHUwMDNjL2JcdTAwM2UgLSBpcyAtIGEgLSB3aGl0ZSAtIHNhdmlvciAtIG5hcnJhdGl2ZSAvIC4gQmFoZXllbGRpbiAsIEtoYWxpZCAuIOKAnCBBcmFiaWMgYW5kIElzbGFtaWMgVGhlbWVzIGluIEZyYW5rIEhlcmJlcnQmIzM5O3MgXHUwMDNjYlx1MDAzZUR1bmVcdTAwM2MvYlx1MDAzZSDigJ0gKCAyMDA0ICkgLiBBdmFpbGFibGUgYXQgaHR0cHM6Ly9iYWhleWVsZGluLmNvbS9saXRlcmF0dXJlL2FyYWJpYy1hbmQtaXNsYW1pYy10aGVtZXMtaW4tZnJhbmstIGhlcmJlcnRzIC0gXHUwMDNjYlx1MDAzZWR1bmVcdTAwM2MvYlx1MDAzZSZuYnNwOy4uLiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIjFqa3VIRExzaVdrQyIsCiAgICAgICJldGFnIjogInhrUUZROU9LOUU4IiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvMWprdUhETHNpV2tDIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIkR1bmU6IFRoZSBCdXRsZXJpYW4gSmloYWQiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkJyaWFuIEhlcmJlcnQiLAogICAgICAgICAgIktldmluIEouIEFuZGVyc29uIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJNYWNtaWxsYW4iLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMDMtMDktMTUiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJTY2llbmNlIGZpY3Rpb24gcm9tYW4uIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjA3NjUzNDA3NzEiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDc2NTM0MDc3MSIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA3MDgsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgImF2ZXJhZ2VSYXRpbmciOiAzLjUsCiAgICAgICAgInJhdGluZ3NDb3VudCI6IDMwLAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICIwLjEzLjEyLjAucHJldmlldy4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD0xamt1SERMc2lXa0MmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD0xamt1SERMc2lXa0MmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9MWprdUhETHNpV2tDJnBnPVBUMyZkcT1kdW5lJmhsPSZjZD0xNiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPTFqa3VIRExzaVdrQyZkcT1kdW5lJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L0R1bmVfVGhlX0J1dGxlcmlhbl9KaWhhZC5odG1sP2hsPSZpZD0xamt1SERMc2lXa0MiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD0xamt1SERMc2lXa0MmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIi4uLiBcdTAwM2NiXHUwMDNlRHVuZVx1MDAzYy9iXHUwMDNlIGZhbnMgLiAmcXVvdDsgLUxpYnJhcnkgSm91cm5hbCBGIHJhbmsgSGVyYmVydCYjMzk7cyBcdTAwM2NiXHUwMDNlRHVuZVx1MDAzYy9iXHUwMDNlIHNlcmllcyBpcyBvbmUgb2YgdGhlIGdyZWF0IGNyZWF0aW9ucyBvZiBpbWFnaW5hdGl2ZSBsaXRlcmF0dXJlICwgc2NpZW5jZSBmaWN0aW9uJiMzOTtzIGFuc3dlciB0byBUaGUgTG9yZCBvZiB0aGUgUmluZ3MgLiBEZWNhZGVzIGFmdGVyIEhlcmJlcnQmIzM5O3Mgb3JpZ2luYWwgbm92ZWxzICwgdGhlIFx1MDAzY2JcdTAwM2VEdW5lXHUwMDNjL2JcdTAwM2Ugc2FnYSB3YXMmbmJzcDsuLi4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJ1cnlXRHdBQVFCQUoiLAogICAgICAiZXRhZyI6ICJiQlhpa1Rmcm9VRSIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL3VyeVdEd0FBUUJBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJEdW5lIE1lc3NpYWgiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkZyYW5rIEhlcmJlcnQiCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIlBlbmd1aW4iLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMTktMDYtMDQiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJCb29rIFR3byBpbiB0aGUgTWFnbmlmaWNlbnQgRHVuZSBDaHJvbmljbGVz4oCUdGhlIEJlc3RzZWxsaW5nIFNjaWVuY2UgRmljdGlvbiBBZHZlbnR1cmUgb2YgQWxsIFRpbWUgRHVuZSBNZXNzaWFoIGNvbnRpbnVlcyB0aGUgc3Rvcnkgb2YgUGF1bCBBdHJlaWRlcywgYmV0dGVyIGtub3du4oCUYW5kIGZlYXJlZOKAlGFzIHRoZSBtYW4gY2hyaXN0ZW5lZCBNdWFk4oCZRGliLiBBcyBFbXBlcm9yIG9mIHRoZSBrbm93biB1bml2ZXJzZSwgaGUgcG9zc2Vzc2VzIG1vcmUgcG93ZXIgdGhhbiBhIHNpbmdsZSBtYW4gd2FzIGV2ZXIgbWVhbnQgdG8gd2llbGQuIFdvcnNoaXBwZWQgYXMgYSByZWxpZ2lvdXMgaWNvbiBieSB0aGUgZmFuYXRpY2FsIEZyZW1lbiwgUGF1bCBmYWNlcyB0aGUgZW5taXR5IG9mIHRoZSBwb2xpdGljYWwgaG91c2VzIGhlIGRpc3BsYWNlZCB3aGVuIGhlIGFzc3VtZWQgdGhlIHRocm9uZeKAlGFuZCBhIGNvbnNwaXJhY3kgY29uZHVjdGVkIHdpdGhpbiBoaXMgb3duIHNwaGVyZSBvZiBpbmZsdWVuY2UuIEFuZCBldmVuIGFzIEhvdXNlIEF0cmVpZGVzIGJlZ2lucyB0byBjcnVtYmxlIGFyb3VuZCBoaW0gZnJvbSB0aGUgbWFjaGluYXRpb25zIG9mIGhpcyBlbmVtaWVzLCB0aGUgdHJ1ZSB0aHJlYXQgdG8gUGF1bCBjb21lcyB0byBoaXMgbG92ZXIsIENoYW5pLCBhbmQgdGhlIHVuYm9ybiBoZWlyIHRvIGhpcyBmYW1pbHnigJlzIGR5bmFzdHkuLi4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDU5MzA5ODIzMyIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIwNTkzMDk4MjM0IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDM1NCwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC40LjAuMC5wcmV2aWV3LjAiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXVyeVdEd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXVyeVdEd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD11cnlXRHdBQVFCQUomcGc9UFI0JmRxPWR1bmUmaGw9JmNkPTE3JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9dXJ5V0R3QUFRQkFKJmRxPWR1bmUmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvRHVuZV9NZXNzaWFoLmh0bWw/aGw9JmlkPXVyeVdEd0FBUUJBSiIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiTk9UX0ZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAgICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPXVyeVdEd0FBUUJBSiZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiLi4uIFx1MDAzY2JcdTAwM2VEVU5FXHUwMDNjL2JcdTAwM2UgOiBUSEUgQklPR1JBUEhZIE9GIEZSQU5LIEhFUkJFUlQgQm9va3MgRWRpdGVkIGJ5IEJyaWFuIEhlcmJlcnQgVEhFIE5PVEVCT09LUyBPRiBGUkFOSyBIRVJCRVJUJiMzOTtTIFx1MDAzY2JcdTAwM2VEVU5FXHUwMDNjL2JcdTAwM2UgU09OR1MgT0YgTVVBRCYjMzk7RElCIEJvb2tzIGJ5IEJyaWFuIEhlcmJlcnQgYW5kIC4uLiBcdTAwM2NiXHUwMDNlRFVORVx1MDAzYy9iXHUwMDNlIFNBTkRTIE9GIFx1MDAzY2JcdTAwM2VEVU5FIERVTkVcdTAwM2MvYlx1MDAzZSBNRVNTSUFIIEJPT0sgVFdPIElOIFRIRSBcdTAwM2NiXHUwMDNlRFVORVx1MDAzYy9iXHUwMDNlIENIUk9OSUNMRVMgRlJBTksgSEVSQkVSVC4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICIxcnlXRHdBQVFCQUoiLAogICAgICAiZXRhZyI6ICJ0ejRTb3dTVk9FayIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzLzFyeVdEd0FBUUJBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJIZXJldGljcyBvZiBEdW5lIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJGcmFuayBIZXJiZXJ0IgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJQZW5ndWluIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDE5LTA2LTA0IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiQm9vayBGaXZlIGluIHRoZSBNYWduaWZpY2VudCBEdW5lIENocm9uaWNsZXPigJR0aGUgQmVzdHNlbGxpbmcgU2NpZW5jZSBGaWN0aW9uIEFkdmVudHVyZSBvZiBBbGwgVGltZSBMZXRvIEF0cmVpZGVzLCB0aGUgR29kIEVtcGVyb3Igb2YgRHVuZSwgaXMgZGVhZC4gSW4gdGhlIGZpZnRlZW4gaHVuZHJlZCB5ZWFycyBzaW5jZSBoaXMgcGFzc2luZywgdGhlIEVtcGlyZSBoYXMgZmFsbGVuIGludG8gcnVpbi4gVGhlIGdyZWF0IFNjYXR0ZXJpbmcgc2F3IG1pbGxpb25zIGFiYW5kb24gdGhlIGNydW1ibGluZyBjaXZpbGl6YXRpb24gYW5kIHNwcmVhZCBvdXQgYmV5b25kIHRoZSByZWFjaGVzIG9mIGtub3duIHNwYWNlLiBUaGUgcGxhbmV0IEFycmFraXPigJRub3cgY2FsbGVkIFJha2lz4oCUaGFzIHJldmVydGVkIHRvIGl0cyBkZXNlcnQgY2xpbWF0ZSwgYW5kIGl0cyBncmVhdCBzYW5kd29ybXMgYXJlIGR5aW5nLiBOb3cgdGhlIExvc3QgT25lcyBhcmUgcmV0dXJuaW5nIGhvbWUgaW4gcHVyc3VpdCBvZiBwb3dlci4gQW5kIGFzIHRoZXNlIGZhY3Rpb25zIHZpZSBmb3IgY29udHJvbCBvdmVyIHRoZSByZW1uYW50cyBvZiB0aGUgRW1waXJlLCBhIGdpcmwgbmFtZWQgU2hlZWFuYSByaXNlcyB0byBwcm9taW5lbmNlIGluIHRoZSB3YXN0ZWxhbmRzIG9mIFJha2lzLCBzZW5kaW5nIHJlbGlnaW91cyBmZXJ2b3IgdGhyb3VnaG91dCB0aGUgZ2FsYXh5LiBGb3Igc2hlIHBvc3Nlc3NlcyB0aGUgYWJpbGl0aWVzIG9mIHRoZSBGcmVtZW4gc2FuZHJpZGVyc+KAlGZ1bGZpbGxpbmcgYSBwcm9waGVjeSBmb3JldG9sZCBieSB0aGUgbGF0ZSBHb2QgRW1wZXJvci4uLi4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDU5MzA5ODI2NCIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIwNTkzMDk4MjY5IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDY4OSwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC41LjEuMC5wcmV2aWV3LjAiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPTFyeVdEd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPTFyeVdEd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD0xcnlXRHdBQVFCQUomcGc9UFI0JmRxPWR1bmUmaGw9JmNkPTE4JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9MXJ5V0R3QUFRQkFKJmRxPWR1bmUmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvSGVyZXRpY3Nfb2ZfRHVuZS5odG1sP2hsPSZpZD0xcnlXRHdBQVFCQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD0xcnlXRHdBQVFCQUomaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIi4uLiBcdTAwM2NiXHUwMDNlRFVORVx1MDAzYy9iXHUwMDNlIFNPTkdTIE9GIE1VQUQmIzM5O0RJQiBCb29rcyBieSBCcmlhbiBIZXJiZXJ0IGFuZCBLZXZpbiBKLiBBbmRlcnNvbiBcdTAwM2NiXHUwMDNlRFVORVx1MDAzYy9iXHUwMDNlOiBIT1VTRSBBVFJFSURFUyBcdTAwM2NiXHUwMDNlRFVORVx1MDAzYy9iXHUwMDNlOiBIT1VTRSBIQVJLT05ORU4gXHUwMDNjYlx1MDAzZURVTkVcdTAwM2MvYlx1MDAzZTogSE9VU0UgQ09SUklOTyBcdTAwM2NiXHUwMDNlRFVORVx1MDAzYy9iXHUwMDNlOiBUSEUgQlVUTEVSSUFOIEpJSEFEIFx1MDAzY2JcdTAwM2VEVU5FXHUwMDNjL2JcdTAwM2U6IFRIRSBNQUNISU5FIENSVVNBREUgXHUwMDNjYlx1MDAzZURVTkVcdTAwM2MvYlx1MDAzZTogVEhFIEJBVFRMRSBPRiBDT1JSSU4gVEhFIFJPQUQgVE8gXHUwMDNjYlx1MDAzZURVTkVcdTAwM2MvYlx1MDAzZSAoYWxzbyBieSZuYnNwOy4uLiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIkZ4MnlFQUFBUUJBSiIsCiAgICAgICJldGFnIjogImZJYVlXaFVIVkZjIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvRngyeUVBQUFRQkFKIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIlRoZSBXb3JsZHMgb2YgRHVuZSIsCiAgICAgICAgInN1YnRpdGxlIjogIlRoZSBQbGFjZXMgYW5kIEN1bHR1cmVzIHRoYXQgSW5zcGlyZWQgRnJhbmsgSGVyYmVydCIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiVG9tIEh1ZGRsZXN0b24iCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIkZyYW5jZXMgTGluY29sbiBDaGlsZHJlbidzIEJvb2tzIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDIzLTEwLTA1IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIFdvcmxkcyBvZiBEdW5lIHByZXNlbnRzIGEgZGVlcCBkaXZlIGludG8gdGhlIG1hbnkgZGlmZmVyZW50IHN0cmFuZHMgb2YgaW5zcGlyYXRpb24sIGZyb20gWmVuIEJ1ZGRoaXNtIHRvIEluZGlnZW5vdXMgQW1lcmljYW4gdHJpYmFsIHJpdHVhbCwgdGhhdCBGcmFuayBIZXJiZXJ0IHdvdmUgaW50byBEdW5lIGFuZCBpdHMgc2VxdWVscyDigJMgY29sbGVjdGl2ZWx5IHRoZSB3b3JsZCdzIGJlc3RzZWxsaW5nIHNjaWVuY2UtZmljdGlvbiBlcGljLiIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgwNzExMjgyMTE3IgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjA3MTEyODIxMTAiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiBmYWxzZSwKICAgICAgICAgICJpbWFnZSI6IHRydWUKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiAyMTAsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJCaW9ncmFwaHkgJiBBdXRvYmlvZ3JhcGh5IgogICAgICAgIF0sCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjEuMi4yLjAucHJldmlldy4xIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1GeDJ5RUFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1GeDJ5RUFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9RngyeUVBQUFRQkFKJnBnPVBBMTk3JmRxPWR1bmUmaGw9JmNkPTE5JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1GeDJ5RUFBQVFCQUomc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9RngyeUVBQUFRQkFKIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJGT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiB0cnVlLAogICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogMzUsCiAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICB9LAogICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiAzNSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgImJ1eUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1GeDJ5RUFBQVFCQUomcmRpZD1ib29rLUZ4MnlFQUFBUUJBSiZyZG90PTEmc291cmNlPWdic19hcGkiLAogICAgICAgICJvZmZlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaW5za3lPZmZlclR5cGUiOiAxLAogICAgICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDM1MDAwMDAwLAogICAgICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgICAgICB9LAogICAgICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogMzUwMDAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJnaWZ0YWJsZSI6IHRydWUKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAgICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZSwKICAgICAgICAgICJhY3NUb2tlbkxpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvZG93bmxvYWQvVGhlX1dvcmxkc19vZl9EdW5lLXNhbXBsZS1wZGYuYWNzbT9pZD1GeDJ5RUFBQVFCQUomZm9ybWF0PXBkZiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPUZ4MnlFQUFBUUJBSiZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiLi4uIFx1MDAzY2JcdTAwM2VEdW5lXHUwMDNjL2JcdTAwM2UgQ2hhcHRlciBTZXZlbiBTY2hvbGFyIGludGVydmlldyAmIzM5OyAsIFx1MDAzY2JcdTAwM2VEdW5lXHUwMDNjL2JcdTAwM2UgMSBcdTAwM2NiXHUwMDNlRHVuZVx1MDAzYy9iXHUwMDNlICwgMjk2IC4gUG9kIHBvZGNhc3QgLCAxOCBBcHJpbCAyMDIyIC4gKCBzb2xvLnRvL2R1bmVwb2QgKSAyIFx1MDAzY2JcdTAwM2VEdW5lXHUwMDNjL2JcdTAwM2UgLCAzNzEgLiAzIEhlcmV0aWNzIG9mIFx1MDAzY2JcdTAwM2VEdW5lXHUwMDNjL2JcdTAwM2UgLCA0MDggLiA2IFQuIE8mIzM5O1JlaWxseSAsICYjMzk7IENvbnZlcnNhdGlvbnMgNCBcdTAwM2NiXHUwMDNlRHVuZVx1MDAzYy9iXHUwMDNlICwgODEgLiBpbiBQb3J0IFRvd25zZW5kICYjMzk7IC4gNSBRdW90ZWQgaW4mbmJzcDsuLi4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJTSEE4RUFBQVFCQUoiLAogICAgICAiZXRhZyI6ICJlR29KRGRBSUtlOCIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL1NIQThFQUFBUUJBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJTYW5kcyBvZiBEdW5lIiwKICAgICAgICAic3VidGl0bGUiOiAiTm92ZWxsYXMgZnJvbSB0aGUgV29ybGRzIG9mIER1bmUiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkJyaWFuIEhlcmJlcnQiLAogICAgICAgICAgIktldmluIEouIEFuZGVyc29uIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJUb3IgQm9va3MiLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMjItMDYtMjgiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJDb2xsZWN0ZWQgZm9yIHRoZSBmaXJzdCB0aW1lLCB0aGVzZSBEdW5lIG5vdmVsbGFzIGJ5IGJlc3RzZWxsaW5nIGF1dGhvcnMgQnJpYW4gSGVyYmVydCBhbmQgS2V2aW4gSi4gQW5kZXJzb24gc2hpbmUgYSBsaWdodCB1cG9uIHRoZSBkYXJrZXIgY29ybmVycyBvZiB0aGUgRHVuZSB1bml2ZXJzZS4gU3Bhbm5pbmcgc3BhY2UgYW5kIHRpbWUsIFNhbmRzIG9mIER1bmUgaXMgZXNzZW50aWFsIHJlYWRpbmcgZm9yIGFueSBmYW4gb2YgdGhlIHNlcmllcy4gVGhlIHdvcmxkIG9mIER1bmUgaGFzIHNoYXBlZCBhbiBlbnRpcmUgZ2VuZXJhdGlvbiBvZiBzY2llbmNlIGZpY3Rpb24uIEZyb20gdGhlIHNhbmQgYmxhc3RlZCB3b3JsZCBvZiBBcnJha2lzLCB0byB0aGUgc3BsZW5kb3Igb2YgdGhlIGltcGVyaWFsIGhvbWV3b3JsZCBvZiBLYWl0YWluLCByZWFkZXJzIGhhdmUgbGl2ZWQgaW4gYSB1bml2ZXJzZSBvZiB0cmVhY2hlcnkgYW5kIHdvbmRlci4gTm93LCB0aGVzZSBzdG9yaWVzIGV4cGFuZCBvbiB0aGUgRHVuZSB1bml2ZXJzZSwgdGVsbGluZyBvZiB0aGUgbG9zdCB5ZWFycyBvZiBHdXJuZXkgSGFsbGVjayBhcyBoZSB3b3JrcyB3aXRoIHNtdWdnbGVycyBvbiBBcnJha2lzIGluIGEgZGVhZGx5IGdhbWJpdCBmb3IgcmV2ZW5nZTsgaW5zaWRlIHRoZSByYW5rcyBvZiB0aGUgU2FyZGF1a2FyIGFzIHRoZSBjaGlsZCBvZiBhIGJldHJheWVkIG5vYmxlbWFuIGJlY29tZXMgb25lIG9mIHRoZSBFbXBlcm9y4oCZcyBtb3N0IHJ1dGhsZXNzIGZpZ2h0ZXJzOyBhIHlvdW5nIGZpcmVicmFuZCBGcmVtZW4gd29tYW4sIGEgZ3VlcnJpbGxhIGZpZ2h0ZXIgYWdhaW5zdCB0aGUgcnV0aGxlc3MgSGFya29ubmVucywgd2hvIHdpbGwgb25lIGRheSBiZWNvbWUgU2hhZG91dCBNYXBlcy4gQXQgdGhlIFB1Ymxpc2hlcidzIHJlcXVlc3QsIHRoaXMgdGl0bGUgaXMgYmVpbmcgc29sZCB3aXRob3V0IERpZ2l0YWwgUmlnaHRzIE1hbmFnZW1lbnQgU29mdHdhcmUgKERSTSkgYXBwbGllZC4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MTI1MDgwNTY5MCIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIxMjUwODA1Njk0IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogdHJ1ZSwKICAgICAgICAgICJpbWFnZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGFnZUNvdW50IjogMTUwLAogICAgICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAgICAgImNhdGVnb3JpZXMiOiBbCiAgICAgICAgICAiRmljdGlvbiIKICAgICAgICBdLAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IHRydWUsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjIuNS41LjAucHJldmlldy4yIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1TSEE4RUFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1TSEE4RUFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9U0hBOEVBQUFRQkFKJnBnPVBUMTQyJmRxPWR1bmUmaGw9JmNkPTIwJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1TSEE4RUFBQVFCQUomc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9U0hBOEVBQUFRQkFKIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJGT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiB0cnVlLAogICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogMTEuOTksCiAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICB9LAogICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiAxMS45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgImJ1eUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1TSEE4RUFBQVFCQUomcmRpZD1ib29rLVNIQThFQUFBUUJBSiZyZG90PTEmc291cmNlPWdic19hcGkiLAogICAgICAgICJvZmZlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaW5za3lPZmZlclR5cGUiOiAxLAogICAgICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDExOTkwMDAwLAogICAgICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgICAgICB9LAogICAgICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogMTE5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJnaWZ0YWJsZSI6IHRydWUKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAgICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IHRydWUKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9U0hBOEVBQUFRQkFKJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJOb3ZlbGxhcyBmcm9tIHRoZSBXb3JsZHMgb2YgXHUwMDNjYlx1MDAzZUR1bmVcdTAwM2MvYlx1MDAzZSBCcmlhbiBIZXJiZXJ0LCBLZXZpbiBKLiBBbmRlcnNvbi4gVEhFIFx1MDAzY2JcdTAwM2VEVU5FXHUwMDNjL2JcdTAwM2UgU0VSSUVTIEJZIEZSQU5LIEhFUkJFUlQgXHUwMDNjYlx1MDAzZUR1bmUgRHVuZVx1MDAzYy9iXHUwMDNlIE1lc3NpYWggQ2hpbGRyZW4gb2YgXHUwMDNjYlx1MDAzZUR1bmVcdTAwM2MvYlx1MDAzZSBHb2QgRW1wZXJvciBvZiBcdTAwM2NiXHUwMDNlRHVuZVx1MDAzYy9iXHUwMDNlIEhlcmV0aWNzIG9mIFx1MDAzY2JcdTAwM2VEdW5lXHUwMDNjL2JcdTAwM2UgQ2hhcHRlcmhvdXNlOiBcdTAwM2NiXHUwMDNlRHVuZVx1MDAzYy9iXHUwMDNlIEJZIEZSQU5LIEhFUkJFUlQsIEJSSUFOIEhFUkJFUlQsIEFORCBLRVZJTiZuYnNwOy4uLiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogInZ3SkhFUUFBUUJBSiIsCiAgICAgICJldGFnIjogIk1zUldtWlJ6U3l3IiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvdndKSEVRQUFRQkFKIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIkR1bmUgRm9ybWF0aW9uIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJZdmVzIEVhcmhhcnQiLAogICAgICAgICAgIkFJIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJQdWJsaWZ5ZSBBUyIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMjAyNS0wMi0xMiIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkR1bmUgRm9ybWF0aW9uIGV4cGxvcmVzIHRoZSBmYXNjaW5hdGluZyB3b3JsZCBvZiBob3cgd2luZCBzaGFwZXMgc2FuZCBkdW5lcyBpbiBib3RoIGRlc2VydHMgYW5kIGNvYXN0YWwgcmVnaW9ucy4gVGhpcyBib29rIGRlbHZlcyBpbnRvIHRoZSBwaHlzaWNzIG9mIGFlb2xpYW4gdHJhbnNwb3J0LCBleGFtaW5pbmcgaG93IHdpbmQgbW92ZXMgc2VkaW1lbnQsIGFuZCBpbnZlc3RpZ2F0ZXMgdGhlIGVudmlyb25tZW50YWwgZmFjdG9ycyBpbmZsdWVuY2luZyBkdW5lIGFycmFuZ2VtZW50LCBvciBtb3JwaG9sb2d5LiBUaGVzZSBmYWN0b3JzIGFyZSBjcml0aWNhbCBmb3IgZ2VvbW9ycGhvbG9naXN0cyBhbmQgZW52aXJvbm1lbnRhbCBzY2llbnRpc3RzIGFpbWluZyB0byB1bmRlcnN0YW5kIGxhbmRzY2FwZSBldm9sdXRpb24uIFRoZSBib29rIGFyZ3VlcyB0aGF0IGR1bmUgbW9ycGhvbG9neSBkaXJlY3RseSByZXN1bHRzIGZyb20gdGhlIGludGVycGxheSBiZXR3ZWVuIHdpbmQgcGF0dGVybnMsIHNlZGltZW50IHN1cHBseSwgYW5kIHN1cmZhY2UgY29uZGl0aW9ucy4gSXQgYmVnaW5zIHdpdGggYWVvbGlhbiB0cmFuc3BvcnQgcHJpbmNpcGxlcywgZXhwbGFpbmluZyBob3cgd2luZCBzcGVlZCBhbmQgZ3JhaW4gc2l6ZSBhZmZlY3Qgc2FuZCBtb3ZlbWVudC4gRnJvbSB0aGVyZSwgaXQgZXhhbWluZXMgZGlmZmVyZW50IGR1bmUgdHlwZXMsIHN1Y2ggYXMgY3Jlc2NlbnRpYyBiYXJjaGFucyBhbmQgbGluZWFyIHNlaWZzLCBkZXRhaWxpbmcgdGhlIGNvbmRpdGlvbnMgdGhhdCBkaWN0YXRlIHRoZWlyIGFwcGVhcmFuY2UgYW5kIGRldmVsb3BtZW50LiBUaGUgYm9vayBlbXBoYXNpemVzIHRoZSByb2xlIG9mIHZlZ2V0YXRpb24sIG1vaXN0dXJlLCBhbmQgdG9wb2dyYXBoeSBpbiBtb2RpZnlpbmcgd2luZCBmbG93IGFuZCBzZWRpbWVudCBkZXBvc2l0aW9uLiBUaGlzIHVuaXF1ZSBhcHByb2FjaCBtYWtlcyBEdW5lIEZvcm1hdGlvbiBhIHZhbHVhYmxlIHJlc291cmNlIGZvciBzdHVkZW50cywgcmVzZWFyY2hlcnMsIGFuZCBwcm9mZXNzaW9uYWxzIGluIGdlb2dyYXBoeSwgZ2VvbG9neSwgYW5kIGVudmlyb25tZW50YWwgc2NpZW5jZS4gQnkgaW50ZWdyYXRpbmcgZmllbGQgb2JzZXJ2YXRpb25zLCBleHBlcmltZW50cywgYW5kIGNvbXB1dGF0aW9uYWwgbW9kZWxzLCB0aGUgYm9vayBwcm92aWRlcyBhIGRldGFpbGVkIHVuZGVyc3RhbmRpbmcgb2YgdGhlIGNvbXBsZXggcHJvY2Vzc2VzIHNoYXBpbmcgb3VyIHBsYW5ldCdzIHN1cmZhY2UsIG9mZmVyaW5nIGluc2lnaHRzIGludG8gcGFzdCBjbGltYXRlcyByZWNvcmRlZCBpbiBwYWxlb2R1bmVzIGFuZCBoZWxwaW5nIHRvIGFkZHJlc3MgY3VycmVudCBlbnZpcm9ubWVudGFsIGNoYWxsZW5nZXMgbGlrZSBkZXNlcnRpZmljYXRpb24gYW5kIGNvYXN0YWwgZXJvc2lvbi4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4ODIzMzk4MzA2MiIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI4MjMzOTgzMDYzIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogdHJ1ZSwKICAgICAgICAgICJpbWFnZSI6IHRydWUKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiAxNjAsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJTY2llbmNlIgogICAgICAgIF0sCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjEuMi4yLjAucHJldmlldy4zIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD12d0pIRVFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD12d0pIRVFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9dndKSEVRQUFRQkFKJnBnPVBQMSZkcT1kdW5lJmhsPSZjZD0yMSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9dndKSEVRQUFRQkFKJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXZ3SkhFUUFBUUJBSiIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogdHJ1ZSwKICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgImFtb3VudCI6IDQuOTksCiAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICB9LAogICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiA0Ljk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAiYnV5TGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXZ3SkhFUUFBUUJBSiZyZGlkPWJvb2stdndKSEVRQUFRQkFKJnJkb3Q9MSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgIm9mZmVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpbnNreU9mZmVyVHlwZSI6IDEsCiAgICAgICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogNDk5MDAwMCwKICAgICAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInJldGFpbFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDQ5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJnaWZ0YWJsZSI6IHRydWUKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAgICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IHRydWUsCiAgICAgICAgICAiYWNzVG9rZW5MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL0R1bmVfRm9ybWF0aW9uLXNhbXBsZS1lcHViLmFjc20/aWQ9dndKSEVRQUFRQkFKJmZvcm1hdD1lcHViJm91dHB1dD1hY3M0X2Z1bGZpbGxtZW50X3Rva2VuJmRsX3R5cGU9c2FtcGxlJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IHRydWUsCiAgICAgICAgICAiYWNzVG9rZW5MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL0R1bmVfRm9ybWF0aW9uLXNhbXBsZS1wZGYuYWNzbT9pZD12d0pIRVFBQVFCQUomZm9ybWF0PXBkZiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPXZ3SkhFUUFBUUJBSiZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiLi4uIFx1MDAzY2JcdTAwM2VEdW5lXHUwMDNjL2JcdTAwM2UgVHlwZXM6IEJhcmNoYW5zIGFuZCBUcmFuc3ZlcnNlIER1bmVzIDYuIExpbmVhciBhbmQgU3RhciBEdW5lczogRm9ybWF0aW9uIGFuZCBEeW5hbWljcyA3LiBDb2FzdGFsIFx1MDAzY2JcdTAwM2VEdW5lXHUwMDNjL2JcdTAwM2UgU3lzdGVtczogRm9ybWF0aW9uIGFuZCBBZGFwdGF0aW9uIDguIFRoZSBSb2xlIG9mIFZlZ2V0YXRpb24gaW4gXHUwMDNjYlx1MDAzZUR1bmVcdTAwM2MvYlx1MDAzZSBTdGFiaWxpemF0aW9uIDkuIFRoZSBJbmZsdWVuY2Ugb2YgTW9pc3R1cmUgYW5kJm5ic3A7Li4uIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiQW93M01qTkV2Z2tDIiwKICAgICAgImV0YWciOiAiUDF2MGtEbGk0MVUiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9Bb3czTWpORXZna0MiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiR29kIEVtcGVyb3Igb2YgRHVuZSIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiRnJhbmsgSGVyYmVydCIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiUGVuZ3VpbiIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMjAwOC0wOS0wMiIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkxldG8gSUksIEdvZCBFbXBlcm9yIG9mIER1bmUsIHRyYWRlcyBoaXMgaHVtYW5pdHkgZm9yIGltbW9ydGFsaXR5IGFuZCBkZXNwZXJhdGVseSBhdHRlbXB0cyB0byBzYXZlIGh1bWFua2luZCwgaW4gc3BpdGUgb2YgYSByaXNpbmcgcmViZWxsaW9uIGxlZCBieSBTaW9uYSB3aG8gaXMgdW5hd2FyZSBvZiBoZXIgb3duIGRlc3RpbmVkIHJvbGUgaW4gcHJlc2VydmluZyB0aGUgZnV0dXJlLiIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIwNDQxMDE2MzE2IgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODA0NDEwMTYzMTAiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiBmYWxzZSwKICAgICAgICAgICJpbWFnZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGFnZUNvdW50IjogNDA0LAogICAgICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAgICAgImNhdGVnb3JpZXMiOiBbCiAgICAgICAgICAiRmljdGlvbiIKICAgICAgICBdLAogICAgICAgICJhdmVyYWdlUmF0aW5nIjogNCwKICAgICAgICAicmF0aW5nc0NvdW50IjogNSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC43LjguMC5wcmV2aWV3LjAiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPUFvdzNNak5FdmdrQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPUFvdzNNak5FdmdrQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1Bb3czTWpORXZna0MmcHJpbnRzZWM9ZnJvbnRjb3ZlciZkcT1kdW5lJmhsPSZjZD0yMiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPUFvdzNNak5FdmdrQyZkcT1kdW5lJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L0dvZF9FbXBlcm9yX29mX0R1bmUuaHRtbD9obD0maWQ9QW93M01qTkV2Z2tDIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9QW93M01qTkV2Z2tDJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJHb2QgRW1wZXJvciBvZiBEdW5lIGlzIHRoZSBhc3RvbmlzaGluZyBmb3VydGggYm9vayBpbiB0aGUgc2VyaWVzLiBDZW50dXJpZXMgaGF2ZSBwYXNzZWQgb24gRHVuZSBpdHNlbGYsIGFuZCB0aGUgcGxhbmV0IGlzIGdyZWVuIHdpdGggbGlmZS4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICIwcnlXRHdBQVFCQUoiLAogICAgICAiZXRhZyI6ICJwRWtUZU8zY2xUdyIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzLzByeVdEd0FBUUJBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJHb2QgRW1wZXJvciBvZiBEdW5lIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJGcmFuayBIZXJiZXJ0IgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJQZW5ndWluIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDE5LTA2LTA0IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiQm9vayBGb3VyIGluIHRoZSBNYWduaWZpY2VudCBEdW5lIENocm9uaWNsZXPigJR0aGUgQmVzdHNlbGxpbmcgU2NpZW5jZSBGaWN0aW9uIEFkdmVudHVyZSBvZiBBbGwgVGltZSBNaWxsZW5uaWEgaGF2ZSBwYXNzZWQgb24gQXJyYWtpcywgYW5kIHRoZSBvbmNlLWRlc2VydCBwbGFuZXQgaXMgZ3JlZW4gd2l0aCBsaWZlLiBMZXRvIEF0cmVpZGVzLCB0aGUgc29uIG9mIHRoZSB3b3JsZOKAmXMgc2F2aW9yLCB0aGUgRW1wZXJvciBQYXVsIE11YWTigJlEaWIsIGlzIHN0aWxsIGFsaXZlIGJ1dCBmYXIgZnJvbSBodW1hbi4gVG8gcHJlc2VydmUgaHVtYW5pdHnigJlzIGZ1dHVyZSwgaGUgc2FjcmlmaWNlZCBoaXMgb3duIGJ5IG1lcmdpbmcgd2l0aCBhIHNhbmR3b3JtLCBncmFudGluZyBoaW0gbmVhciBpbW1vcnRhbGl0eSBhcyBHb2QgRW1wZXJvciBvZiBEdW5lIGZvciB0aGUgcGFzdCB0aGlydHktZml2ZSBodW5kcmVkIHllYXJzLiBMZXRv4oCZcyBydWxlIGlzIG5vdCBhIGJlbmV2b2xlbnQgb25lLiBIaXMgdHJhbnNmb3JtYXRpb24gaGFzIG1hZGUgbm90IG9ubHkgaGlzIGFwcGVhcmFuY2UgYnV0IGhpcyBtb3JhbGl0eSBpbmh1bWFuLiBBIHJlYmVsbGlvbiwgbGVkIGJ5IFNpb25hLCBhIG1lbWJlciBvZiB0aGUgQXRyZWlkZXMgZmFtaWx5LCBoYXMgcmlzZW4gdG8gb3Bwb3NlIHRoZSBkZXNwb3TigJlzIHJ1bGUuIEJ1dCBTaW9uYSBpcyB1bmF3YXJlIHRoYXQgTGV0b+KAmXMgdmlzaW9uIG9mIGEgR29sZGVuIFBhdGggZm9yIGh1bWFuaXR5IHJlcXVpcmVzIGhlciB0byBmdWxmaWxsIGEgZGVzdGlueSBzaGUgbmV2ZXIgd2FudGVk4oCUb3IgY291bGQgcG9zc2libHkgY29uY2VpdmUuLi4uIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODA1OTMwOTgyNTciCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMDU5MzA5ODI1MCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA2MDksCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjAuNi4xLjAucHJldmlldy4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD0wcnlXRHdBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD0wcnlXRHdBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9MHJ5V0R3QUFRQkFKJnBnPVBSNCZkcT1kdW5lJmhsPSZjZD0yMyZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPTByeVdEd0FBUUJBSiZkcT1kdW5lJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L0dvZF9FbXBlcm9yX29mX0R1bmUuaHRtbD9obD0maWQ9MHJ5V0R3QUFRQkFKIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9MHJ5V0R3QUFRQkFKJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICIuLi4gXHUwMDNjYlx1MDAzZURVTkVcdTAwM2MvYlx1MDAzZSBTT05HUyBPRiBNVUFEJiMzOTtESUIgQm9va3MgYnkgQnJpYW4gSGVyYmVydCBhbmQgS2V2aW4gSi4gQW5kZXJzb24gXHUwMDNjYlx1MDAzZURVTkVcdTAwM2MvYlx1MDAzZTogSE9VU0UgQVRSRUlERVMgXHUwMDNjYlx1MDAzZURVTkVcdTAwM2MvYlx1MDAzZTogSE9VU0UgSEFSS09OTkVOIFx1MDAzY2JcdTAwM2VEVU5FXHUwMDNjL2JcdTAwM2U6IEhPVVNFIENPUlJJTk8gXHUwMDNjYlx1MDAzZURVTkVcdTAwM2MvYlx1MDAzZTogVEhFIEJVVExFUklBTiBKSUhBRCBcdTAwM2NiXHUwMDNlRFVORVx1MDAzYy9iXHUwMDNlOiBUSEUgTUFDSElORSBDUlVTQURFIFx1MDAzY2JcdTAwM2VEVU5FXHUwMDNjL2JcdTAwM2U6IFRIRSBCQVRUTEUgT0YgQ09SUklOIFRIRSBST0FEIFRPIFx1MDAzY2JcdTAwM2VEVU5FXHUwMDNjL2JcdTAwM2UgKEFsc28gYnkmbmJzcDsuLi4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICItRXhuRHdBQVFCQUoiLAogICAgICAiZXRhZyI6ICJVSk04R09JaVAxYyIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzLy1FeG5Ed0FBUUJBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJBIER1bmUgQ29tcGFuaW9uIiwKICAgICAgICAic3VidGl0bGUiOiAiQ2hhcmFjdGVycywgUGxhY2VzIGFuZCBUZXJtcyBpbiBGcmFuayBIZXJiZXJ0J3MgT3JpZ2luYWwgU2l4IE5vdmVscyIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiRG9uYWxkIEUuIFBhbHVtYm8iCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIk1jRmFybGFuZCIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMjAxOC0wOC0wMyIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoaXMgY29tcGFuaW9uIHRvIEZyYW5rIEhlcmJlcnQncyBzaXggb3JpZ2luYWwgRHVuZSBub3ZlbHMtLUR1bmUsIER1bmUgTWVzc2lhaCwgQ2hpbGRyZW4gb2YgRHVuZSwgR29kIEVtcGVyb3Igb2YgRHVuZSwgSGVyZXRpY3Mgb2YgRHVuZSBhbmQgQ2hhcHRlcmhvdXNlOiBEdW5lLS1wcm92aWRlcyBhbiBlbmN5Y2xvcGVkaWEgb2YgY2hhcmFjdGVycywgbG9jYXRpb25zLCB0ZXJtcyBhbmQgb3RoZXIgZWxlbWVudHMsIGFuZCBoaWdobGlnaHRzIHRoZSBzZXJpZXMnIHVuZGVycmF0ZWQgYWVzdGhldGljIGludGVncml0eS4gQW4gZXh0ZW5zaXZlIGludHJvZHVjdGlvbiBkaXNjdXNzZXMgdGhlIHRoZW1lIG9mIGVjb2xvZ3ksIGNoYW9zIHRoZW9yeSBjb25jZXB0cyBhbmQgc3RydWN0dXJlcywgYW5kIEpvc2VwaCBDYW1wYmVsbCdzIG1vbm9teXRoIGluIEhlcmJlcnQncyBuYXJyYXRpdmVzLiIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgxNDc2NjMzMjk5IgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjE0NzY2MzMyOTAiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiB0cnVlLAogICAgICAgICAgImltYWdlIjogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDE5OCwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkxpdGVyYXJ5IENyaXRpY2lzbSIKICAgICAgICBdLAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IHRydWUsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjEuNC4zLjAucHJldmlldy4zIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD0tRXhuRHdBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD0tRXhuRHdBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9LUV4bkR3QUFRQkFKJnBnPVBBMSZkcT1kdW5lJmhsPSZjZD0yNCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9LUV4bkR3QUFRQkFKJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPS1FeG5Ed0FBUUJBSiIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogdHJ1ZSwKICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgImFtb3VudCI6IDE5Ljk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogMTkuOTksCiAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICB9LAogICAgICAgICJidXlMaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9LUV4bkR3QUFRQkFKJnJkaWQ9Ym9vay0tRXhuRHdBQVFCQUomcmRvdD0xJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAib2ZmZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAiZmluc2t5T2ZmZXJUeXBlIjogMSwKICAgICAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiAxOTk5MDAwMCwKICAgICAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInJldGFpbFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDE5OTkwMDAwLAogICAgICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiZ2lmdGFibGUiOiB0cnVlCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9BX0R1bmVfQ29tcGFuaW9uLXNhbXBsZS1lcHViLmFjc20/aWQ9LUV4bkR3QUFRQkFKJmZvcm1hdD1lcHViJm91dHB1dD1hY3M0X2Z1bGZpbGxtZW50X3Rva2VuJmRsX3R5cGU9c2FtcGxlJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IHRydWUsCiAgICAgICAgICAiYWNzVG9rZW5MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL0FfRHVuZV9Db21wYW5pb24tc2FtcGxlLXBkZi5hY3NtP2lkPS1FeG5Ed0FBUUJBSiZmb3JtYXQ9cGRmJm91dHB1dD1hY3M0X2Z1bGZpbGxtZW50X3Rva2VuJmRsX3R5cGU9c2FtcGxlJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9LUV4bkR3QUFRQkFKJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICIuLi4gXHUwMDNjYlx1MDAzZUR1bmVcdTAwM2MvYlx1MDAzZSBub3ZlbHMg4oCUIFx1MDAzY2JcdTAwM2VEdW5lXHUwMDNjL2JcdTAwM2UgKCAxOTY1ICkgLCBcdTAwM2NiXHUwMDNlRHVuZVx1MDAzYy9iXHUwMDNlIE1lc3NpYWggKCAxOTc1ICkgLCBDaGlsZHJlbiBvZiBcdTAwM2NiXHUwMDNlRHVuZVx1MDAzYy9iXHUwMDNlICggMTk4MSApICwgR29kIEVtcGVyb3Igb2YgXHUwMDNjYlx1MDAzZUR1bmVcdTAwM2MvYlx1MDAzZSAoIDE5ODEgKSAsIEhlcmV0aWNzIG9mIFx1MDAzY2JcdTAwM2VEdW5lXHUwMDNjL2JcdTAwM2UgKCAxOTg0ICkgLCBhbmQgQ2hhcHRlcmhvdXNlIDogXHUwMDNjYlx1MDAzZUR1bmVcdTAwM2MvYlx1MDAzZSAoIDE5ODUgKSDigJRIZXJiZXJ0JiMzOTtzIHNvbiBCcmlhbiBIZXJiZXJ0IGFuZCBoaXMgY29sbGFib3JhdG9yIEtldmluIEombmJzcDsuLi4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJ1RlVORWRmNlVza0MiLAogICAgICAiZXRhZyI6ICJjODlGaEJHQUl1USIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL3VGVU5FZGY2VXNrQyIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJDb2FzdGFsIER1bmUgTWFuYWdlbWVudCIsCiAgICAgICAgInN1YnRpdGxlIjogIlNoYXJlZCBFeHBlcmllbmNlIG9mIEV1cm9wZWFuIENvbnNlcnZhdGlvbiBQcmFjdGljZSIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiSm9obiBIb3VzdG9uIiwKICAgICAgICAgICJQYXVsIEouIFJvb25leSIsCiAgICAgICAgICAiU2FsbHkgRS4gRWRtb25kc29uIiwKICAgICAgICAgICJQLiBKLiBSb29uZXkiCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIkxpdmVycG9vbCBVbml2ZXJzaXR5IFByZXNzIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDAxLTAxLTAxIiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiRWxpemFiZXRoIEEuIEtheWUgc3BlY2lhbGl6ZXMgaW4gY29tbXVuaWNhdGlvbnMgYXMgcGFydCBvZiBoZXIgY29hY2hpbmcgYW5kIGNvbnN1bHRpbmcgcHJhY3RpY2UuIFNoZSBoYXMgZWRpdGVkIFJlcXVpcmVtZW50cyBmb3IgQ2VydGlmaWNhdGlvbiBzaW5jZSB0aGUgMjAwMC0wMSBlZGl0aW9uLiIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIwODUzMjM4NTQ1IgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODA4NTMyMzg1NDYiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiBmYWxzZSwKICAgICAgICAgICJpbWFnZSI6IHRydWUKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA0NzYsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJUZWNobm9sb2d5ICYgRW5naW5lZXJpbmciCiAgICAgICAgXSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC45LjguMC5wcmV2aWV3LjEiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXVGVU5FZGY2VXNrQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXVGVU5FZGY2VXNrQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD11RlVORWRmNlVza0MmcGc9UEE0MTUmZHE9ZHVuZSZobD0mY2Q9MjUmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD11RlVORWRmNlVza0MmZHE9ZHVuZSZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9hYm91dC9Db2FzdGFsX0R1bmVfTWFuYWdlbWVudC5odG1sP2hsPSZpZD11RlVORWRmNlVza0MiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IHRydWUsCiAgICAgICAgICAiYWNzVG9rZW5MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL0NvYXN0YWxfRHVuZV9NYW5hZ2VtZW50LXNhbXBsZS1wZGYuYWNzbT9pZD11RlVORWRmNlVza0MmZm9ybWF0PXBkZiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPXVGVU5FZGY2VXNrQyZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiLi4uIFx1MDAzY2JcdTAwM2VkdW5lXHUwMDNjL2JcdTAwM2UgLSBwZXJpb2RzIG9mIFx1MDAzY2JcdTAwM2VkdW5lXHUwMDNjL2JcdTAwM2UgYnVpbGRpbmcgYW5kIGFkdmFuY2VtZW50IC4gU2ltaWxhcmx5ICwgdHJvdWdocyB3aXRoIGN1dCBhbmQgZmlsbCBzdHJ1Y3R1cmVzIG1heSBiZSBpbnRlcnByZXRlZCBhcyBwZXJpb2RzIHdoZW4gdGhlIFx1MDAzY2JcdTAwM2VkdW5lXHUwMDNjL2JcdTAwM2Ugc2FuZHMgYXJlIGJlaW5nIGVyb2RlZCBhbmQgcmV3b3JrZWQgLiBUaGUgc3RydWN0dXJlcyB3aXRoaW4gdGhlIFx1MDAzY2JcdTAwM2VkdW5lXHUwMDNjL2JcdTAwM2Ugc2hvd24gaW4gRmlndXJlIDImbmJzcDsuLi4iCiAgICAgIH0KICAgIH0KICBdCn0K","status":200,"url":"https://www.googleapis.com/books/v1/volumes?q=dune&maxResults=25&key=AIzaSyB0h8Chg6lBoHUDHUbOHY83sceJP_O_Ga4"},"revalidate":31536000,"tags":[]}