{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Sat, 23 Aug 2025 22:51:40 GMT","server":"ESF","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{
  "kind": "books#volumes",
  "totalItems": 1000000,
  "items": [
    {
      "kind": "books#volume",
      "id": "yV1yAAAAMAAJ",
      "etag": "q3XBDbm9B2w",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/yV1yAAAAMAAJ",
      "volumeInfo": {
        "title": "Borderlands",
        "authors": [
          "Gloria Anzaldúa"
        ],
        "publishedDate": "1999",
        "description": "The actual physical borderland that I'm dealing with in this book is the Texas-U.S., Southwest/Mexican border. The psychological borderlands, the sexual borderlands, and spiritual borderlands are not particular to the Southwest. In fact the Borderlands are physically present wherever two or more cultures edge each other, where people of different races occupy the same territory, where under, lower, middle and upper classes touch, where the space between two individuals shrinks with intimacy. --Goria Anzaldúa.",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "UTEXAS:059172144068934"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 272,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 3.5,
        "ratingsCount": 3,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.2.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=yV1yAAAAMAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=yV1yAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=yV1yAAAAMAAJ&q=borderlands&dq=borderlands&hl=&cd=1&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=yV1yAAAAMAAJ&dq=borderlands&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Borderlands.html?hl=&id=yV1yAAAAMAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=yV1yAAAAMAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "The actual physical borderland that I&#39;m dealing with in this book is the Texas-U.S., Southwest/Mexican border. The psychological borderlands, the sexual borderlands, and spiritual borderlands are not particular to the Southwest."
      }
    },
    {
      "kind": "books#volume",
      "id": "vt-sDwAAQBAJ",
      "etag": "Q1t6xZGgLSw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/vt-sDwAAQBAJ",
      "volumeInfo": {
        "title": "Global Borderlands",
        "subtitle": "Fantasy, Violence, and Empire in Subic Bay, Philippines",
        "authors": [
          "Victoria Reyes"
        ],
        "publisher": "Stanford University Press",
        "publishedDate": "2019-09-03",
        "description": "The U.S. military continues to be an overt presence in the Philippines, and a reminder of the country's colonial past. Using Subic Bay (a former U.S. military base, now a Freeport Zone) as a case study, Victoria Reyes argues that its defining feature is its ability to elicit multiple meanings. For some, it is a symbol of imperialism and inequality, while for others, it projects utopian visions of wealth and status. Drawing on archival and ethnographic data, Reyes describes the everyday experiences of people living and working in Subic Bay, and makes a case for critically examining similar spaces across the world. These foreign-controlled, semi-autonomous zones of international exchange are what she calls global borderlands. While they can take many forms, ranging from overseas military bases to tourist resorts, they all have key features in common. This new unit of globalization provides a window into broader economic and political relations, the consequences of legal ambiguity, and the continuously reimagined identities of the people living there. Rejecting colonialism as merely a historical backdrop, Reyes demonstrates how it is omnipresent in our modern world.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781503609426"
          },
          {
            "type": "ISBN_10",
            "identifier": "1503609421"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 359,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=vt-sDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=vt-sDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=vt-sDwAAQBAJ&pg=PT284&dq=borderlands&hl=&cd=2&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=vt-sDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=vt-sDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 30,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 16.5,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=vt-sDwAAQBAJ&rdid=book-vt-sDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 30000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 16500000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Global_Borderlands-sample-epub.acsm?id=vt-sDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Global_Borderlands-sample-pdf.acsm?id=vt-sDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=vt-sDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderlands\u003c/b\u003e . They divide \u003cb\u003eborderlands\u003c/b\u003e spatially ( the border heartland , intermediate \u003cb\u003eborderland\u003c/b\u003e , and the outer \u003cb\u003eborderland\u003c/b\u003e ) and temporally ( infant , adolescent , adult , declining , and defunct \u003cb\u003eborderlands\u003c/b\u003e ) , and call for the need&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "4WV5CgAAQBAJ",
      "etag": "E9m8/NLgSmM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/4WV5CgAAQBAJ",
      "volumeInfo": {
        "title": "Borderland Films",
        "subtitle": "American Cinema, Mexico, and Canada During the Progressive Era",
        "authors": [
          "Dominique Brégent-Heald"
        ],
        "publisher": "U of Nebraska Press",
        "publishedDate": "2015-11",
        "description": "The concept of North American borderlands in the cultural imagination fluctuated greatly during the Progressive Era as it was affected by similarly changing concepts of identity and geopolitical issues influenced by the Mexican Revolution and the First World War. Such shifts became especially evident in films set along the Mexican and Canadian borders as filmmakers explored how these changes simultaneously represented and influenced views of society at large. Borderland Films examines the intersection of North American borderlands and culture as portrayed through early twentieth-century cinema. Drawing on hundreds of films, Dominique Brégent-Heald investigates the significance of national borders; the ever-changing concepts of race, gender, and enforced boundaries; the racialized ideas of criminality that painted the borderlands as unsafe and in need of control; and the wars that showed how international conflict significantly influenced the United States’ relations with its immediate neighbors. Borderland Films provides a fresh perspective on American cinematic, cultural, and political history and on how cinema contributed to the establishment of societal narratives in the early twentieth century.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780803278868"
          },
          {
            "type": "ISBN_10",
            "identifier": "0803278861"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 449,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=4WV5CgAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=4WV5CgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=4WV5CgAAQBAJ&pg=PA296&dq=borderlands&hl=&cd=3&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=4WV5CgAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=4WV5CgAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 60,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 48,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=4WV5CgAAQBAJ&rdid=book-4WV5CgAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 60000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 48000000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Borderland_Films-sample-pdf.acsm?id=4WV5CgAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=4WV5CgAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBorderlands\u003c/b\u003e; Calderón and Saldívar, Criticism in the \u003cb\u003eBorderlands\u003c/b\u003e; Fregoso, MeXicana Encounters; Sandoval, “U.S. Third World Feminism.” A sampling of Mexican scholarship on border- lands studies includes Bartra, Blood, Ink, and Culture&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "3RCTDwAAQBAJ",
      "etag": "9hnkdnsm7uQ",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/3RCTDwAAQBAJ",
      "volumeInfo": {
        "title": "Borderland Battles",
        "subtitle": "Violence, Crime, and Governance at the Edges of Colombia's War",
        "authors": [
          "Annette Idler"
        ],
        "publishedDate": "2019",
        "description": "The post-cold war era has seen an unmistakable trend toward the proliferation of violent non-state groups-variously labeled terrorists, rebels, paramilitaries, gangs, and criminals-near borders in unstable regions especially. In Borderland Battles, Annette Idler examines the micro-dynamics among violent non-state groups and finds striking patterns: borderland spaces consistently intensify the security impacts of how these groups compete for territorial control, cooperate in illicit cross-border activities, and replace the state in exerting governance functions. Drawing on extensive fieldwork with more than 600 interviews in and on the shared borderlands of Colombia, Ecuador, and Venezuela, where conflict is ripe and crime thriving, Idler reveals how dynamic interactions among violent non-state groups produce a complex security landscape with ramifications for order and governance, both locally and beyond. A deep examination of how violent non-state groups actually operate with and against one another on the ground, Borderland Battles will be essential reading for anyone involved in reducing organized crime and armed conflict-some of our era's most pressing and seemingly intractable problems.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780190849146"
          },
          {
            "type": "ISBN_10",
            "identifier": "0190849142"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 497,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=3RCTDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=3RCTDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=3RCTDwAAQBAJ&pg=PA78&dq=borderlands&hl=&cd=4&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=3RCTDwAAQBAJ&dq=borderlands&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Borderland_Battles.html?hl=&id=3RCTDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Borderland_Battles-sample-pdf.acsm?id=3RCTDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=3RCTDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderlands\u003c/b\u003e neglects these dynamics. A \u003cb\u003eborderland\u003c/b\u003e lens is also enlightening at the macro level: Benedikt Korf and Timothy Raeymakers argue that \u003cb\u003eborderland\u003c/b\u003e dynamics “radiate” outward to the regions in which they are embedded.54 This&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "Pf3bei5IAE4C",
      "etag": "y/khXDgREvE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Pf3bei5IAE4C",
      "volumeInfo": {
        "title": "Borderland",
        "subtitle": "Origins of the American Suburb, 1820-1939",
        "authors": [
          "John R. Stilgoe"
        ],
        "publisher": "Yale University Press",
        "publishedDate": "1988-01-01",
        "description": "This text portrays the American suburbs from their beginnings in the mid-1800s to the onset of World War II and focuses on their appearance, people's reaction to them and their importance to society.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0300048661"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780300048667"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 374,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "averageRating": 3,
        "ratingsCount": 2,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.6.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=Pf3bei5IAE4C&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=Pf3bei5IAE4C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=Pf3bei5IAE4C&pg=PA11&dq=borderlands&hl=&cd=5&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=Pf3bei5IAE4C&dq=borderlands&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Borderland.html?hl=&id=Pf3bei5IAE4C"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Pf3bei5IAE4C&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderland\u003c/b\u003e documents . In this book the \u003cb\u003eborderlands\u003c/b\u003e are - or were - where houses are so far apart that even in winter they cast shadows only on their own lots ; the \u003cb\u003eborderlands\u003c/b\u003e are ordered about a horseback and carriage pace , not a&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "sYHSEAAAQBAJ",
      "etag": "dnNBkYn4rFE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/sYHSEAAAQBAJ",
      "volumeInfo": {
        "title": "Borderland Narratives",
        "subtitle": "Negotiation and Accommodation in North America’s Contested Spaces, 1500-1850",
        "authors": [
          "Andrew K. Frank",
          "A. Glenn Crothers"
        ],
        "publisher": "University Press of Florida",
        "publishedDate": "2019-04-16",
        "description": "Broadening the idea of \"borderlands\" beyond its traditional geographic meaning, this volume features new ways of characterizing the political, cultural, religious, and racial fluidity of early America. It extends the concept to regions not typically seen as borderlands and demonstrates how the term has been used in recent years to describe unstable spaces where people, cultures, and viewpoints collide. The essays include an exploration of the diplomacy and motives that led colonial and Native leaders in the Ohio Valley—including those from the Shawnee and Cherokee—to cooperate and form coalitions; a contextualized look at the relationship between African Americans and Seminole Indians on the Florida borderlands; and an assessment of the role that animal husbandry played in the economies of southeastern Indians. An essay on the experiences of those who disappeared in the early colonial southwest highlights the magnitude of destruction on these emergent borderlands and features a fresh perspective on Cabeza de Vaca. Yet another essay examines the experiences of French missionary priests in the trans-Appalachian West, adding a new layer of understanding to places ordinarily associated with the evangelical Protestant revivals of the Second Great Awakening. Collectively these essays focus on marginalized peoples and reveal how their experiences and decisions lie at the center of the history of borderlands. They also look at the process of cultural mixing and the crossing of religious and racial boundaries. A timely assessment of the dynamic field of borderland studies, Borderland Narratives argues that the interpretive model of borders is essential to understanding the history of colonial North America. A volume in the series Contested Boundaries, edited by Gene Allen Smith Contributors: Andrew Frank | A. Glenn Crothers | Rob Harper | Tyler Boulware | Carla Gerona | Rebekah M. K. Mergenthal | Michael Pasquier | Philip Mulder | Julie Winch",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780813063935"
          },
          {
            "type": "ISBN_10",
            "identifier": "0813063930"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 201,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.4.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=sYHSEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=sYHSEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=sYHSEAAAQBAJ&pg=PA1740&dq=borderlands&hl=&cd=6&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=sYHSEAAAQBAJ&dq=borderlands&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Borderland_Narratives.html?hl=&id=sYHSEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Borderland_Narratives-sample-epub.acsm?id=sYHSEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Borderland_Narratives-sample-pdf.acsm?id=sYHSEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=sYHSEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderlands\u003c/b\u003e constituted both a place and a process . The connections between Weber&#39;s \u003cb\u003eborderlands\u003c/b\u003e and the New Western History deservedly attracted the attention of many scholars , most notably James Sandos . In a review essay in American&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "KqTIhTWuAXcC",
      "etag": "oODywRbDSRk",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/KqTIhTWuAXcC",
      "volumeInfo": {
        "title": "The Bengal Borderland",
        "subtitle": "Beyond State and Nation in South Asia",
        "authors": [
          "Willem van Schendel"
        ],
        "publisher": "Anthem Press",
        "publishedDate": "2005",
        "description": "'The Bengal Borderland' constitutes the epicentre of the partition of British India. Yet while the forging of international borders between India, Pakistan, Bangladesh and Burma (the 'Bengal Borderland') has been a core theme in Partition studies, these crucial borderlands have, remarkably, been largely ignored by historians.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781843311454"
          },
          {
            "type": "ISBN_10",
            "identifier": "1843311453"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 441,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "averageRating": 5,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.3.4.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=KqTIhTWuAXcC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=KqTIhTWuAXcC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=KqTIhTWuAXcC&pg=PA4&dq=borderlands&hl=&cd=7&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=KqTIhTWuAXcC&dq=borderlands&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Bengal_Borderland.html?hl=&id=KqTIhTWuAXcC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Bengal_Borderland-sample-epub.acsm?id=KqTIhTWuAXcC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Bengal_Borderland-sample-pdf.acsm?id=KqTIhTWuAXcC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=KqTIhTWuAXcC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderlands\u003c/b\u003e in a period of global reterritorialization requires a historical approach . The historicity of \u003cb\u003eborderland\u003c/b\u003e space is obvious . Whether \u003cb\u003eborderlands\u003c/b\u003e are created with earthquake- like suddenness or not , their formal beginnings&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "8NS0OTXRlTMC",
      "etag": "gmlGBE01Dvg",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/8NS0OTXRlTMC",
      "volumeInfo": {
        "title": "North America",
        "subtitle": "The Historical Geography of a Changing Continent",
        "authors": [
          "Thomas F. McIlwraith",
          "Edward K. Muller"
        ],
        "publisher": "Bloomsbury Publishing PLC",
        "publishedDate": "2001",
        "description": "This classic text retains the superb scholarship of the first edition in a thoroughly revised and accessibly written new edition. With both new and updated essays by distinguished American and Canadian authors, the book provides a comprehensive historical overview of the formation and growth of North American regions from European exploration and colonization to the second half of the twentieth century. Collectively the contributors explore the key themes of acquisition of geographical knowledge, cultural transfer and acculturation, frontier expansion, spatial organization of society, resource exploitation, regional and national integration, and landscape change. With six new chapters, redrawn maps, a new introduction that explores scholarly trends in historical geography since publication of the first edition, and a new final chapter guiding students to the basic sources for historical geographic enquiry, North America will be an indispensable text in historical geography courses.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0742500195"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780742500198"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 524,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "averageRating": 5,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.9.8.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=8NS0OTXRlTMC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=8NS0OTXRlTMC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=8NS0OTXRlTMC&pg=PA47&dq=borderlands&hl=&cd=8&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=8NS0OTXRlTMC&dq=borderlands&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/North_America.html?hl=&id=8NS0OTXRlTMC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/North_America-sample-pdf.acsm?id=8NS0OTXRlTMC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=8NS0OTXRlTMC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBorderlands\u003c/b\u003e . THE \u003cb\u003eBORDERLANDS\u003c/b\u003e CONTEXT The term &quot; Spanish \u003cb\u003eBorderlands\u003c/b\u003e &quot; refers to the once remote and sparsely populated Spanish frontier in North America , that stretch of the subtropics that spans from California on the Pa- cific to&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "0bjHEAAAQBAJ",
      "etag": "iGieDA/T1Tg",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/0bjHEAAAQBAJ",
      "volumeInfo": {
        "title": "Lived Experiences of Borderland Communities in Zimbabwe",
        "subtitle": "Livelihoods, Conservation, War and Covid-19",
        "authors": [
          "Nedson Pophiwa",
          "Joshua Matanzima",
          "Kirk Helliker"
        ],
        "publisher": "Springer Nature",
        "publishedDate": "2023-06-27",
        "description": "This book examines the national borders and borderlands of Zimbabwe through the presentation of empirically rich case studies. It delves into the lived experiences, both past and present, of populations residing along the borders between Zimbabwe and its neighbours, i.e., Zambia, Botswana, South Africa and Mozambique. It locates these lived experiences within the political economy of Zimbabwe, and highlights a wide range of themes pertinent to borders, including health, COVID-19, marginalisation, resource access, conservation, human-wildlife conflicts, civil wars, politico-economic crises, border jumping and cross border trade. The borderland communities discussed also include ethnic minorities such as the Tonga, San, Ndau, Shangane, and Kalanga. Overall, the book demonstrates the centrality of borders to the Zimbabwean nation-state and the importance of reading history, politics and society from the borderlands. The book fits into the wider prevailing literature of border and borderlands in Africa and beyond and thus has appeal far beyond Zimbabwe. Its diverse themes also relate to topics covered in multiple disciplines, including history, anthropology, and sociology. Academics, development specialists and policy makers will benefit in different ways from the depth and breadth of the analysis in the book.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9783031321955"
          },
          {
            "type": "ISBN_10",
            "identifier": "3031321952"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 217,
        "printType": "BOOK",
        "categories": [
          "Political Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.3.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=0bjHEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=0bjHEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=0bjHEAAAQBAJ&pg=PA68&dq=borderlands&hl=&cd=9&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=0bjHEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=0bjHEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE_AND_RENTAL",
        "isEbook": true,
        "listPrice": {
          "amount": 129,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 103.2,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=0bjHEAAAQBAJ&rdid=book-0bjHEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 129000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 103200000,
              "currencyCode": "USD"
            },
            "giftable": true
          },
          {
            "finskyOfferType": 3,
            "listPrice": {
              "amountInMicros": 45150000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 39280000,
              "currencyCode": "USD"
            },
            "rentalDuration": {
              "unit": "DAY",
              "count": 90
            }
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Lived_Experiences_of_Borderland_Communit-sample-epub.acsm?id=0bjHEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Lived_Experiences_of_Borderland_Communit-sample-pdf.acsm?id=0bjHEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=0bjHEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderland\u003c/b\u003e communities and everyday lives. The vast scholarship on \u003cb\u003eborderlands\u003c/b\u003e has opened exciting new avenues of inquiry, allowing us to see the complex nature of borders—as spaces of alliances, resistance, subversion, and cooperation&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "N5FDAAAAIAAJ",
      "etag": "OvevzxxYecw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/N5FDAAAAIAAJ",
      "volumeInfo": {
        "title": "Borderlands of Economics",
        "authors": [
          "Radhakamal Mukerjee"
        ],
        "publishedDate": "1927",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "UCAL:$B18586"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 290,
        "printType": "BOOK",
        "categories": [
          "Economics"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.8.7.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=N5FDAAAAIAAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=N5FDAAAAIAAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=N5FDAAAAIAAJ&pg=PA5&dq=borderlands&hl=&cd=10&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=N5FDAAAAIAAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=N5FDAAAAIAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=N5FDAAAAIAAJ&rdid=book-N5FDAAAAIAAJ&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/Borderlands_of_Economics.epub?id=N5FDAAAAIAAJ&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=N5FDAAAAIAAJ&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderland\u003c/b\u003e sciences which have guided me in the several lines of economic interpretation . The scope and treatment of the book are frankly prefatory , but I trust will suffice to fore- shadow a system of economics revivified at its&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "fEgXEQAAQBAJ",
      "etag": "i1yvgsUDqUs",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/fEgXEQAAQBAJ",
      "volumeInfo": {
        "title": "International Regional Economic Integration and the Development of China’s Borderland Economies",
        "authors": [
          "Shuanglu Liang"
        ],
        "publisher": "Springer Nature",
        "publishedDate": "2024-07-31",
        "description": "China’s borderland economy has grown significantly recently, thanks largely to a favorable institutional environment created by national strategies such as the development of the western part of China, revitalization of old industrial bases in the northeast, and the anti-poverty campaign. This work draws on theories of international economics and spatial economics to study the regional economic integration of China's border areas, with the aim of shedding light on how to improve policies and practices. It discusses topics such as the transformation of border trade, industrial upgrading and urbanization in borderlands , especially in the context of cross-border economic integration. Furthermore, the book also explores ways in which changes in the border might contribute to the formation of peripheral economic growth centers, and related environmental, institutional and policy issues. It will interest scholars of Asian economic trends and the rise of China, particularly in Southeast Asia.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9789819730445"
          },
          {
            "type": "ISBN_10",
            "identifier": "9819730449"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 275,
        "printType": "BOOK",
        "categories": [
          "Business & Economics"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.3.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=fEgXEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=fEgXEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=fEgXEQAAQBAJ&pg=PA150&dq=borderlands&hl=&cd=11&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=fEgXEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=fEgXEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE_AND_RENTAL",
        "isEbook": true,
        "listPrice": {
          "amount": 129.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 103.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=fEgXEQAAQBAJ&rdid=book-fEgXEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 129990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 103990000,
              "currencyCode": "USD"
            },
            "giftable": true
          },
          {
            "finskyOfferType": 3,
            "listPrice": {
              "amountInMicros": 45500000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 39580000,
              "currencyCode": "USD"
            },
            "rentalDuration": {
              "unit": "DAY",
              "count": 90
            }
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/International_Regional_Economic_Integrat-sample-epub.acsm?id=fEgXEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/International_Regional_Economic_Integrat-sample-pdf.acsm?id=fEgXEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=fEgXEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderlands\u003c/b\u003e of China and its neighboring countries , where resources are abundant , the factors of production are concentrated in ... \u003cb\u003eBorderlands\u003c/b\u003e in the Context of Integration 4.1 Integration and Industrial Structure in the \u003cb\u003eBorderlands\u003c/b\u003e."
      }
    },
    {
      "kind": "books#volume",
      "id": "eJ_nAAAAIAAJ",
      "etag": "Z3RHHocVMy0",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/eJ_nAAAAIAAJ",
      "volumeInfo": {
        "title": "The Borderland of Imbecility",
        "subtitle": "Medicine, Society and the Fabrication of the Feeble Mind in Late Victorian and Edwardian England",
        "authors": [
          "Mark Jackson"
        ],
        "publisher": "Manchester University Press",
        "publishedDate": "2000",
        "description": "This book is about the life and work of David Milch, the writer who created NYPD Blue, Deadwood and a number of other important US television dramas. It provides a detailed account of Milch's journey from academia to the heights of the television industry, locating him within the traditions of achievement in American literature over the past in order to evaluate his contribution to fiction writing. It also draws on behind-the-scenes materials to analyse the significance of NYPD Blue, Deadwood, John From Cincinatti and Luck. Contributing to academic debates in film, television and literary studies on authorship, the book will be of interest to fans of Milch's work, as well as those engaged with the intersection between literature and popular television.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0719054567"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780719054563"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 298,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.8.13.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=eJ_nAAAAIAAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=eJ_nAAAAIAAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=eJ_nAAAAIAAJ&pg=PA1&dq=borderlands&hl=&cd=12&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=eJ_nAAAAIAAJ&dq=borderlands&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Borderland_of_Imbecility.html?hl=&id=eJ_nAAAAIAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Borderland_of_Imbecility-sample-epub.acsm?id=eJ_nAAAAIAAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Borderland_of_Imbecility-sample-pdf.acsm?id=eJ_nAAAAIAAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=eJ_nAAAAIAAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBorderlands\u003c/b\u003e. In December 1894 , an editorial in the British Medical Journal advised readers that the &#39; feeble - minded &#39; , those inhabiting &#39; the \u003cb\u003eborderland\u003c/b\u003e of imbecility &#39; , were &#39; more to be pitied , and certainly are a greater danger&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "XFkEEAAAQBAJ",
      "etag": "55ioAvE9YnY",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/XFkEEAAAQBAJ",
      "volumeInfo": {
        "title": "Remote Homeland, Recovered Borderland",
        "subtitle": "Manchus, Manchoukuo, and Manchuria, 1907–1985",
        "authors": [
          "Shao Dan"
        ],
        "publisher": "University of Hawaii Press",
        "publishedDate": "2011-08-31",
        "description": "Remote Homeland, Recovered Borderland addresses a long-ignored issue in the existing studies of community construction: How does the past failure of an ethnic people to maintain sovereignty over their homeland influence their contemporary reconfigurations of ethnic and national identities? To answer this question, Shao Dan focuses on the Manzus, the second largest non-Han group in contemporary China, whose cultural and historical ancestors, the Manchus, ruled China from 1644 to 1912. Based on deep and rigorous empirical research, Shao analyzes the major forces responsible for the transformation of Manchu identity from the ruling group of the Qing empire to the minority of minorities in China today: the de-territorialization and provincialization of Manchuria in the late Qing, the remaking of national borders and ethnic boundaries during the Sino-Japanese contestation over Manchuria, and the power of the state to re-categorize borderland populations and ascribe ethnic identity in post-Qing republican states. Within the first half of the twentieth century, four regimes—the Qing empire under the Manchu royal clan, the Republic of China under the Nationalist Party, Manchuokuo under the Japanese Kanto Army, and the People’s Republic of China under the Communist Party—each grouped the Manchus into different ethnic and national categories while re-positioning Manchuria itself on their political maps in accordance with their differing definitions of statehood. During periods of state succession, Manchuria was transformed from the Manchu homeland in the Qing dynasty to an East Asian borderland in the early twentieth century, before becoming China’s territory recovered from the Japanese empire. As the transformation of territoriality took place, the hard boundaries of the Manchu community were reconfigured, its ways of self-identification reformed, and the space for its identity representations redefined. Taking the borderland approach, Remote Homeland goes beyond the single-country focus and looks instead at regional and cross-border perspectives. It is a study of China, but one that transcends traditional historiographies. As such, it will be of interest to scholars of modern China, Japanese empire, and Northeast Asian history, as well as to those engaged in the study of borderlands, ethnic identity, nationalism, and imperialism.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780824860226"
          },
          {
            "type": "ISBN_10",
            "identifier": "0824860225"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 441,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.3.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=XFkEEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=XFkEEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=XFkEEAAAQBAJ&pg=PA4&dq=borderlands&hl=&cd=13&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=XFkEEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=XFkEEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 25,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 25,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=XFkEEAAAQBAJ&rdid=book-XFkEEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 25000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 25000000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Remote_Homeland_Recovered_Borderland-sample-pdf.acsm?id=XFkEEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=XFkEEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderlands\u003c/b\u003e of others . In geography , territoriality refers to “ a spatial strategy to affect , influence , or ... \u003cb\u003eBorderlands\u003c/b\u003e are a special category of space in which political contestation , shifting borders , and the conse&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "dPZ0DwAAQBAJ",
      "etag": "GHr291SeMCQ",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/dPZ0DwAAQBAJ",
      "volumeInfo": {
        "title": "Tribal Politics in the Borderland of Egypt and Libya",
        "authors": [
          "Thomas Hüsken"
        ],
        "publisher": "Springer",
        "publishedDate": "2018-10-25",
        "description": "This book explores the tribal politics of the Awlad ‘Ali Bedouin in the borderland of Egypt and Libya. These tribal politics are part of heterarchy in which sovereignty is shared between tribes, states and other groups and, within this dynamic setting, the local politicians of the Awlad ‘Ali are essential producers of order beyond the framework of the nation state. Based on long-term fieldwork, this monograph is ideal for audiences interested in North African Politics, Libya, Egypt, and borderland studies.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9783319923420"
          },
          {
            "type": "ISBN_10",
            "identifier": "3319923420"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 272,
        "printType": "BOOK",
        "categories": [
          "Political Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=dPZ0DwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=dPZ0DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=dPZ0DwAAQBAJ&pg=PA49&dq=borderlands&hl=&cd=14&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=dPZ0DwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=dPZ0DwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE_AND_RENTAL",
        "isEbook": true,
        "listPrice": {
          "amount": 54.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 43.44,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=dPZ0DwAAQBAJ&rdid=book-dPZ0DwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 54990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 43440000,
              "currencyCode": "USD"
            },
            "giftable": true
          },
          {
            "finskyOfferType": 3,
            "listPrice": {
              "amountInMicros": 19250000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 16750000,
              "currencyCode": "USD"
            },
            "rentalDuration": {
              "unit": "DAY",
              "count": 90
            }
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Tribal_Politics_in_the_Borderland_of_Egy-sample-epub.acsm?id=dPZ0DwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Tribal_Politics_in_the_Borderland_of_Egy-sample-pdf.acsm?id=dPZ0DwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=dPZ0DwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderlands\u003c/b\u003e as peripheral or marginal. Subsequent anthropological studies in supposed margins, peripheries and \u003cb\u003eborderlands\u003c/b\u003e even altered our understanding of state formation and making to a significant degree (Das and Poole 2004). They&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "DN7xQW3aIbMC",
      "etag": "AnbAf5DjsXI",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/DN7xQW3aIbMC",
      "volumeInfo": {
        "title": "Myth and the History of the Hispanic Southwest",
        "subtitle": "Essays",
        "authors": [
          "David J. Weber"
        ],
        "publisher": "UNM Press",
        "publishedDate": "1988",
        "description": "Located in Southwest Collection.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0826311946"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780826311948"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 196,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.6.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=DN7xQW3aIbMC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=DN7xQW3aIbMC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=DN7xQW3aIbMC&pg=PA74&dq=borderlands&hl=&cd=15&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=DN7xQW3aIbMC&dq=borderlands&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Myth_and_the_History_of_the_Hispanic_Sou.html?hl=&id=DN7xQW3aIbMC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Myth_and_the_History_of_the_Hispanic_Sou-sample-pdf.acsm?id=DN7xQW3aIbMC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=DN7xQW3aIbMC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBorderlands\u003c/b\u003e refers only to the years before 1821 ; others use the term to embrace the period both before and after 1821. Still others employ \u003cb\u003eBorderlands\u003c/b\u003e without the &quot; Spanish &quot; designation to mean the eras before and after 1821.60&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "Vtjo80U2b3AC",
      "etag": "RW6eFdpwGpE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Vtjo80U2b3AC",
      "volumeInfo": {
        "title": "Borderland Churches",
        "subtitle": "A Congregation's Introduction to Missional Living",
        "authors": [
          "Gary V Nelson"
        ],
        "publisher": "Chalice Press",
        "publishedDate": "2009-01-01",
        "description": "Borderland Churches is a call to embrace the pluralistic, post Christian and postmodern culture with a sense of opportunity and hope. The author uses the image of the church crossing over into an \"in -between time\", a place where faith is lived outside the walls of the church engaging the community in incarnational ways. To live in that \"precarious but exhilarating place where faith and other faiths and no faith meet.\" Only individuals and congregations that accept this new reality will be able to carry on Christian ministry in this new cultural situation. A TCP Leadership Series title.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780827202573"
          },
          {
            "type": "ISBN_10",
            "identifier": "0827202571"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 178,
        "printType": "BOOK",
        "categories": [
          "Religion"
        ],
        "averageRating": 5,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=Vtjo80U2b3AC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=Vtjo80U2b3AC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=Vtjo80U2b3AC&pg=PA5&dq=borderlands&hl=&cd=16&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=Vtjo80U2b3AC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=Vtjo80U2b3AC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=Vtjo80U2b3AC&rdid=book-Vtjo80U2b3AC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Borderland_Churches-sample-pdf.acsm?id=Vtjo80U2b3AC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Vtjo80U2b3AC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBorderlands\u003c/b\u003e My colleague Frank Byrne has been a great help to me. One day, while facilitating at a staff training event, he introduced the captivating idea of “\u003cb\u003eborderlands\u003c/b\u003e.” He told us that the life of mission was lived in the “\u003cb\u003eborderlands\u003c/b\u003e&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "2UIPAAAAYAAJ",
      "etag": "tLWppwSLbLc",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/2UIPAAAAYAAJ",
      "volumeInfo": {
        "title": "The Borderlands of Insanity",
        "subtitle": "And Other Allied Papers",
        "authors": [
          "Andrew Wynter"
        ],
        "publishedDate": "1875",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "HARVARD:HC2URB"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 330,
        "printType": "BOOK",
        "categories": [
          "Hallucinations and illusions"
        ],
        "averageRating": 4,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.5.7.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=2UIPAAAAYAAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=2UIPAAAAYAAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=2UIPAAAAYAAJ&pg=PA51&dq=borderlands&hl=&cd=17&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=2UIPAAAAYAAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=2UIPAAAAYAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=2UIPAAAAYAAJ&rdid=book-2UIPAAAAYAAJ&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/The_Borderlands_of_Insanity.epub?id=2UIPAAAAYAAJ&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "downloadLink": "http://books.google.com/books/download/The_Borderlands_of_Insanity.pdf?id=2UIPAAAAYAAJ&hl=&output=pdf&sig=ACfU3U3MLjqghNsY_-vahB02DaklJSjfuQ&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=2UIPAAAAYAAJ&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBorderland\u003c/b\u003e of Insanity , in the opinion of those who know them best ; but it is only the last supreme act which , in the eyes of the world , takes them over the frontier into the domain of the insane ... \u003cb\u003eBorderlands\u003c/b\u003e of Insanity . 51."
      }
    },
    {
      "kind": "books#volume",
      "id": "3M1CDwAAQBAJ",
      "etag": "7iktpTzl3eQ",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/3M1CDwAAQBAJ",
      "volumeInfo": {
        "title": "Focus On: 100 Most Popular Unreal Engine Games",
        "authors": [
          "Wikipedia contributors"
        ],
        "publisher": "e-artnow sro",
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 1087,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.2.3.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=3M1CDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=3M1CDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=3M1CDwAAQBAJ&pg=RA4-PA56&dq=borderlands&hl=&cd=18&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=3M1CDwAAQBAJ&dq=borderlands&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Focus_On_100_Most_Popular_Unreal_Engine.html?hl=&id=3M1CDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Focus_On_100_Most_Popular_Unreal_Engine-sample-epub.acsm?id=3M1CDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Focus_On_100_Most_Popular_Unreal_Engine-sample-pdf.acsm?id=3M1CDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=3M1CDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBorderlands\u003c/b\u003e Gets Slightly Delayed &quot; . IGN . Retrieved July 6 , 2016 . 6. ^ &quot; \u003cb\u003eBorderlands\u003c/b\u003e GOTY version heading to Mac on December 3 &quot; . 7. ^ https://shield.nvidia.com/games/geforce-now/\u003cb\u003eborderlands\u003c/b\u003e 8. ^ https://www.destructoid.com&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "fUPbAwAAQBAJ",
      "etag": "az9v6H93ycY",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/fUPbAwAAQBAJ",
      "volumeInfo": {
        "title": "Borderland on the Isthmus",
        "subtitle": "Race, Culture, and the Struggle for the Canal Zone",
        "authors": [
          "Michael E. Donoghue"
        ],
        "publisher": "Duke University Press",
        "publishedDate": "2014-04-23",
        "description": "The construction, maintenance, and defense of the Panama Canal brought Panamanians, U.S. soldiers and civilians, West Indians, Asians, and Latin Americans into close, even intimate, contact. In this lively and provocative social history, Michael E. Donoghue positions the Panama Canal Zone as an imperial borderland where U.S. power, culture, and ideology were projected and contested. Highlighting race as both an overt and underlying force that shaped life in and beyond the Zone, Donoghue details how local traditions and colonial policies interacted and frequently clashed. Panamanians responded to U.S. occupation with proclamations, protests, and everyday forms of resistance and acquiescence. Although U.S. \"Zonians\" and military personnel stigmatized Panamanians as racial inferiors, they also sought them out for service labor, contraband, sexual pleasure, and marriage. The Canal Zone, he concludes, reproduced classic colonial hierarchies of race, national identity, and gender, establishing a model for other U.S. bases and imperial outposts around the globe.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780822376675"
          },
          {
            "type": "ISBN_10",
            "identifier": "0822376679"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 404,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=fUPbAwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=fUPbAwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=fUPbAwAAQBAJ&pg=PA52&dq=borderlands&hl=&cd=19&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=fUPbAwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=fUPbAwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 39.95,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 31.16,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=fUPbAwAAQBAJ&rdid=book-fUPbAwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 39950000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 31160000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Borderland_on_the_Isthmus-sample-epub.acsm?id=fUPbAwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Borderland_on_the_Isthmus-sample-pdf.acsm?id=fUPbAwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=fUPbAwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderlands\u003c/b\u003e in northern Florida and the current Southwest. 4 Most imperial \u003cb\u003eborderlands\u003c/b\u003e throughout history have been contiguous, joined territorially to a larger imperial heartland, such as the Russian \u003cb\u003eborderlands\u003c/b\u003e of the tsarist era that&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "aIxmyWo6o94C",
      "etag": "vxtfu+l+v9E",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/aIxmyWo6o94C",
      "volumeInfo": {
        "title": "New England and the Maritime Provinces",
        "subtitle": "Connections and Comparisons",
        "authors": [
          "Stephen John Hornsby",
          "John G. Reid"
        ],
        "publisher": "McGill-Queen's Press - MQUP",
        "publishedDate": "2005",
        "description": "A wide-reaching, inter-disciplinary examination of the links between New England and the Maritimes.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0773528652"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780773528659"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 432,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.6.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=aIxmyWo6o94C&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=aIxmyWo6o94C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=aIxmyWo6o94C&pg=PA5&dq=borderlands&hl=&cd=20&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=aIxmyWo6o94C&dq=borderlands&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/New_England_and_the_Maritime_Provinces.html?hl=&id=aIxmyWo6o94C"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/New_England_and_the_Maritime_Provinces-sample-epub.acsm?id=aIxmyWo6o94C&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/New_England_and_the_Maritime_Provinces-sample-pdf.acsm?id=aIxmyWo6o94C&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=aIxmyWo6o94C&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBorderlands\u003c/b\u003e : Four Centuries of Interaction , held in 1987 , and the publication of the proceedings two years later.9 The \u003cb\u003eborderlands\u003c/b\u003e concept had been developed many years before by Herbert E. Bolton as a tool for the study of&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "fMUWUqsq8SoC",
      "etag": "/ZtJi8OezL4",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/fMUWUqsq8SoC",
      "volumeInfo": {
        "title": "Global Boundaries",
        "authors": [
          "Clive H. Schofield"
        ],
        "publisher": "Psychology Press",
        "publishedDate": "1994",
        "description": "First published in 2002. Routledge is an imprint of Taylor & Francis, an informa company.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0415088380"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780415088381"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 148,
        "printType": "BOOK",
        "categories": [
          "Law"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.5.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=fMUWUqsq8SoC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=fMUWUqsq8SoC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=fMUWUqsq8SoC&pg=PA1&dq=borderlands&hl=&cd=21&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=fMUWUqsq8SoC&dq=borderlands&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Global_Boundaries.html?hl=&id=fMUWUqsq8SoC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Global_Boundaries-sample-pdf.acsm?id=fMUWUqsq8SoC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=fMUWUqsq8SoC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderlands\u003c/b\u003e society is offered as a means of determining the degree of transnationalism among different sectors of the population . Third , the concept of &#39; \u003cb\u003eborderlands\u003c/b\u003e milieu &#39; is developed to identify characteristics that make border&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "we2KvdT3zOsC",
      "etag": "nMP/sSqBbvw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/we2KvdT3zOsC",
      "volumeInfo": {
        "title": "Encyclopedia of Women and Religion in North America, Set",
        "authors": [
          "Rosemary Skinner Keller",
          "Rosemary Radford Ruether",
          "Marie Cantlon"
        ],
        "publisher": "Indiana University Press",
        "publishedDate": "2006-04-19",
        "description": "A fundamental and well-illustrated reference collection for anyone interested in the role of women in North American religious life.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780253346858"
          },
          {
            "type": "ISBN_10",
            "identifier": "0253346851"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 1443,
        "printType": "BOOK",
        "categories": [
          "Reference"
        ],
        "averageRating": 5,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "2.4.4.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=we2KvdT3zOsC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=we2KvdT3zOsC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=we2KvdT3zOsC&pg=PA1135&dq=borderlands&hl=&cd=22&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=we2KvdT3zOsC&dq=borderlands&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Encyclopedia_of_Women_and_Religion_in_No.html?hl=&id=we2KvdT3zOsC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Encyclopedia_of_Women_and_Religion_in_No-sample-pdf.acsm?id=we2KvdT3zOsC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=we2KvdT3zOsC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderlands\u003c/b\u003e and found it to be a useful metaphor. These writers have expanded the \u003cb\u003eborderlands\u003c/b\u003e to mean and embrace more than what Bol- ton originally meant while keeping the basic idea that the history of one people can never be told in&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "vxVEEQAAQBAJ",
      "etag": "z4doxQOu2sM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/vxVEEQAAQBAJ",
      "volumeInfo": {
        "title": "The Maya Forest Waterlands",
        "subtitle": "Shared Conservation, Entangled Politics, and Fluid Borders",
        "authors": [
          "Hanna Laako",
          "Edith Kauffer"
        ],
        "publisher": "Taylor & Francis",
        "publishedDate": "2025-02-12",
        "description": "This book examines the entanglements and blurred edges of nature conservation and geopolitical relations in the borderlands of the trinational Maya Forest. Maya Forest is an umbrella term for transboundary conservation developed by scientists and conservationists in the 1990s to protect the threatened rainforest in the borderlands of Mexico, Belize, and Guatemala. Currently, the Maya Forest is a biodiversity hotspot composed of a network of protected areas and heritage sites. However, issues related to water, land, and forests have often been treated as separate political units, and not as part of the same history. Written by two authors with decades of hands-on experience in this region, this book sheds light on the complex dynamics by which conservation and natural resource management geopolitically shape borderlands such as the Maya Forest. The book introduces the novel concept of forest waterlands as borderlands and fluid edges, which are now subject to concern by conservationists. These are entangled spaces in which conservation, peoples, and politics interact, connect, and disconnect with the nexus of waters, forests, and lands. The book sheds light on the building and mapping of the Maya Forest ecoregion, with particular attention to water as an often neglected, but unifying element. It showcases how the Maya Forest is a distinct region characterized by transformations entangled with the Maya, trails of biological stations, the shared history of chicleros (chewing-gum hunters), fluid international rivers and transboundary basins, and various geopolitical discrepancies. It offers a contemporary glimpse into the Maya Forest’s intertwined bio- and geopolitics, which urge us to rethink borders and boundaries. This book will be of great interest to students and scholars of nature conservation, global environmental politics, geopolitics, borderlands, international relations, and natural resource management.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781040309070"
          },
          {
            "type": "ISBN_10",
            "identifier": "1040309070"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 234,
        "printType": "BOOK",
        "categories": [
          "Nature"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=vxVEEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=vxVEEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=vxVEEQAAQBAJ&pg=RA1-PA2016-IA4&dq=borderlands&hl=&cd=23&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=vxVEEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=vxVEEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 0,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 0,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=vxVEEQAAQBAJ&rdid=book-vxVEEQAAQBAJ&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Maya_Forest_Waterlands-sample-epub.acsm?id=vxVEEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Maya_Forest_Waterlands-sample-pdf.acsm?id=vxVEEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=vxVEEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborderlands\u003c/b\u003e in the light of these developments? What can \u003cb\u003eBorderlands\u003c/b\u003e Studies contribute to the contemporary understanding of these edges of empires and places of encounters, not just of humans, but of species and landscapes? These are&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "_62IjQ-XQScC",
      "etag": "UhGnGsb+AA0",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/_62IjQ-XQScC",
      "volumeInfo": {
        "title": "Latinas in the United States, set",
        "subtitle": "A Historical Encyclopedia",
        "authors": [
          "Vicki L. Ruiz",
          "Virginia Sánchez Korrol"
        ],
        "publisher": "Indiana University Press",
        "publishedDate": "2006-05-03",
        "description": "Latinas in the United States: A Historical Encyclopedia records the contribution of women of Latin American birth or heritage to the economic and cultural development of the United States. The encyclopedia, edited by Vicki L. Ruiz and Virginia Sánchez-Korrol, is the first comprehensive gathering of scholarship on Latinas. This encyclopedia will serve as an essential reference for decades to come. In more than 580 entries, the historical and cultural narratives of Latinas come to life. From mestizo settlement, pioneer life, and diasporic communities, the encyclopedia details the contributions of women as settlers, comadres, and landowners, as organizers and nuns. More than 200 scholars explore the experiences of Latinas during and after EuroAmerican colonization and conquest; the early-19th-century migration of Puerto Ricans and Cubans; 20th-century issues of migration, cultural tradition, labor, gender roles, community organization, and politics; and much more. Individual biographical entries profile women who have left their mark on the historical and cultural landscape. With more than 300 photographs, Latinas in the United States offers a mosaic of historical experiences, detailing how Latinas have shaped their own lives, cultures, and communities through mutual assistance and collective action, while confronting the pressures of colonialism, racism, discrimination, sexism, and poverty. \"Meant for scholars and general readers, this is a great resource on Latinas and historical topics connected with them.\" -- curledup.com",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780253111692"
          },
          {
            "type": "ISBN_10",
            "identifier": "0253111692"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 909,
        "printType": "BOOK",
        "categories": [
          "Reference"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.4.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=_62IjQ-XQScC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=_62IjQ-XQScC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=_62IjQ-XQScC&pg=PA697&dq=borderlands&hl=&cd=24&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=_62IjQ-XQScC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=_62IjQ-XQScC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE_AND_RENTAL",
        "isEbook": true,
        "listPrice": {
          "amount": 176,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 140.8,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=_62IjQ-XQScC&rdid=book-_62IjQ-XQScC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 176000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 140800000,
              "currencyCode": "USD"
            },
            "giftable": true
          },
          {
            "finskyOfferType": 3,
            "listPrice": {
              "amountInMicros": 149600000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 134640000,
              "currencyCode": "USD"
            },
            "rentalDuration": {
              "unit": "DAY",
              "count": 180
            }
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Latinas_in_the_United_States_set-sample-pdf.acsm?id=_62IjQ-XQScC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=_62IjQ-XQScC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBORDERLANDS\u003c/b\u003e Gabriela Sandoval The southern tier of states extending from California to the Carolinas constitutes the Spanish \u003cb\u003eborderlands\u003c/b\u003e , so named because Spain explored and settled parts of this region soon after the time of Columbus&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "aCIeEQAAQBAJ",
      "etag": "02d982BMapQ",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/aCIeEQAAQBAJ",
      "volumeInfo": {
        "title": "Intersection of AI and Business Intelligence in Data-Driven Decision-Making",
        "authors": [
          "Natarajan, Arul Kumar",
          "Galety, Mohammad Gouse",
          "Iwendi, Celestine",
          "Das, Deepthi",
          "Shankar, Achyut"
        ],
        "publisher": "IGI Global",
        "publishedDate": "2024-08-28",
        "description": "In today's rapidly evolving business landscape, organizations are inundated with vast amounts of data, making it increasingly challenging to extract meaningful insights and make informed decisions. The traditional business intelligence (BI) approach must often address the complexity and speed required for effective decision-making in this data-rich environment. As a result, many businesses need help to leverage their data to drive sustainable growth and remain competitive. Intersection of AI and Business Intelligence in Data-Driven Decision-Making presents a transformative solution to this pressing challenge. By exploring the convergence of artificial intelligence (AI) and BI, our book provides a comprehensive framework for leveraging AI-powered BI to revolutionize data analysis, predictive modeling, and decision-making processes. Readers will gain valuable insights into practical applications, emerging trends, and ethical considerations, inspiring and exciting them about the potential of AI in driving business success.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9798369352892"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 506,
        "printType": "BOOK",
        "categories": [
          "Computers"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.0.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=aCIeEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=aCIeEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=aCIeEQAAQBAJ&pg=PA228&dq=borderlands&hl=&cd=25&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=aCIeEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=aCIeEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 415,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 332,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=aCIeEQAAQBAJ&rdid=book-aCIeEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 415000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 332000000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Intersection_of_AI_and_Business_Intellig-sample-pdf.acsm?id=aCIeEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=aCIeEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBorderlands borderlands\u003c/b\u003e and i will kill you im coming on \u003cb\u003eborderlands\u003c/b\u003e and i will murder you ... 2 2401 \u003cb\u003eBorderlands\u003c/b\u003e 3 2401 \u003cb\u003eBorderlands\u003c/b\u003e 2401 \u003cb\u003eBorderlands\u003c/b\u003e i am coming to the borders and i will kill coming , borders , kill [ come , border&nbsp;..."
      }
    }
  ]
}
","status":200,"url":"https://www.googleapis.com/books/v1/volumes?q=borderlands&maxResults=25&key=AIzaSyB0h8Chg6lBoHUDHUbOHY83sceJP_O_Ga4"},"revalidate":31536000,"tags":[]}