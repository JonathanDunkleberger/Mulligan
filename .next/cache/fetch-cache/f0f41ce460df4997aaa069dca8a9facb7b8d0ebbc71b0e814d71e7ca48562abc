{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Sat, 23 Aug 2025 22:51:39 GMT","server":"ESF","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{
  "kind": "books#volumes",
  "totalItems": 1000000,
  "items": [
    {
      "kind": "books#volume",
      "id": "-ZrfAgAAQBAJ",
      "etag": "FCTLJqKL+XE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/-ZrfAgAAQBAJ",
      "volumeInfo": {
        "title": "Border Patrol Nation",
        "subtitle": "Dispatches from the Front Lines of Homeland Security",
        "authors": [
          "Todd Miller"
        ],
        "publisher": "City Lights Publishers",
        "publishedDate": "2014-03-24",
        "description": "\"In his scathing and deeply reported examination of the U.S. Border Patrol, Todd Miller argues that the agency has gone rogue since the Sept. 11 terrorist attacks, trampling on the dignity and rights of the undocumented with military-style tactics … Miller's book arrives at a moment when it appears that part of the Homeland Security apparatus is backpedaling by promising to tone down its tactics, maybe prodded by investigative journalism, maybe by the revelations of NSA leaker Edward Snowden … Border Patrol is quite possibly the right book at the right time … \"—Tony Perry, Los Angeles Times \"At the start of his unsettling and important new book, Border Patrol Nation, Miller observes that these days 'it is common to see the Border Patrol in places—such as Erie, Pennsylvania; Rochester, New York; or Forks, Washington—where only fifteen years ago it would have seemed far-fetched, if not unfathomable.'”—Barbara Spindel, Christian Science Monitor \"Miller’s approach in Border Patrol Nation is to offer a glimpse into the secretive operations of the Border Patrol, reporting with a journalist’s objectivity and nose for a good story. Miller’s book is full of facts, and it’s clear he’s outraged, but he gives voices to people on every side of the issue … Miller’s book is a fascinating read … and bring the work of Susan Orlean to mind.\"—Amanda Eyre Ward, Kirkus Reviews \"Todd Miller's invaluable and gripping book, Border Patrol Nation: Dispatches from the Front Lines of Homeland Security is the story of how this country’s borders are being transformed into up-armored, heavily militarized zones run by a border-industrial complex. It's an achievement and an eye opener.\"—Tom Engelhardt, TomDispatch \"What Jeremy Scahill was to Blackwater, Todd Miller is to the U.S. Border Patrol!\"—Tom Miller, author, On the Border: Portraits of America's Southwestern Frontier \"Todd Miller has entered a secret world, and he has gone deep … Powerful.\"—Luis Alberto Urrea, author of The Devil's Highway: A True Story \"Journalist Miller tells an alarming story of U.S. Border Patrol and Homeland Security's ever-widening reach into the lives of American citizens and legal immigrants as well as the undocumented. In addition to readers interested in immigration issues, those concerned about the NSA’s privacy violations will likely be even more shocked by the actions of Homeland Security.\"—Publishers Weekly, Starred Review Armed authorities watch from a military-grade surveillance tower as lines of people stream toward the security checkpoint, tickets in hand, anxious and excited to get through the gate. Few seem to notice or care that the US Border Patrol is monitoring the Super Bowl, as they have for years, one of the many ways that forces created to police the borders are now being used, in an increasingly militarized fashion, to survey and monitor the whole of American society. In fast-paced prose, Todd Miller sounds an alarm as he chronicles the changing landscape. Traveling the country—and beyond—to speak with the people most involved with and impacted by the Border Patrol, he combines these first-hand encounters with careful research to expose a vast and booming industry for high-end technology, weapons, surveillance, and prisons. While politicians and corporations reap substantial profits, the experiences of millions of men, women, and children point to staggering humanitarian consequences. Border Patrol Nation shows us in stark relief how the entire country has become a militarized border zone, with consequences that affect us all. Todd Miller has worked on and written about US border issues for over fifteen years.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780872866324"
          },
          {
            "type": "ISBN_10",
            "identifier": "0872866327"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 362,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "2.6.5.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=-ZrfAgAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=-ZrfAgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=-ZrfAgAAQBAJ&printsec=frontcover&dq=border&hl=&cd=1&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=-ZrfAgAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=-ZrfAgAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 24.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 24.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=-ZrfAgAAQBAJ&rdid=book--ZrfAgAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 24990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 24990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Border_Patrol_Nation-sample-epub.acsm?id=-ZrfAgAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Border_Patrol_Nation-sample-pdf.acsm?id=-ZrfAgAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=-ZrfAgAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "&quot;In his scathing and deeply reported examination of the U.S. Border Patrol, Todd Miller argues that the agency has gone rogue since the Sept. 11 terrorist attacks, trampling on the dignity and rights of the undocumented with military-style ..."
      }
    },
    {
      "kind": "books#volume",
      "id": "jVZJAAAAMAAJ",
      "etag": "64U9I6AdNRs",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/jVZJAAAAMAAJ",
      "volumeInfo": {
        "title": "The Border Magazine",
        "subtitle": "An Illustrated Monthly",
        "authors": [
          "Nicholas Dickson",
          "William Sanderson"
        ],
        "publishedDate": "1898",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "UOM:39015066915599"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 288,
        "printType": "BOOK",
        "categories": [
          "Scotland"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.5.8.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=jVZJAAAAMAAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=jVZJAAAAMAAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=jVZJAAAAMAAJ&pg=PA110&dq=border&hl=&cd=2&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=jVZJAAAAMAAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=jVZJAAAAMAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=jVZJAAAAMAAJ&rdid=book-jVZJAAAAMAAJ&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/The_Border_Magazine.epub?id=jVZJAAAAMAAJ&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "downloadLink": "http://books.google.com/books/download/The_Border_Magazine.pdf?id=jVZJAAAAMAAJ&hl=&output=pdf&sig=ACfU3U1X1XR8usd5MMQ9Ir7C1V2Tu0ITdw&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=jVZJAAAAMAAJ&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBORDER\u003c/b\u003e MAGAZINE will be sent post free to any part of the United Kingdom , Canada , the United States , and all Countries included in the Postal Union for one year , 45 . PAGE ΙΟΙ 104 THE WEARY TRYST . By ANDREW POLLOCK , - 109 \u003cb\u003eBORDER\u003c/b\u003e&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "ZX__8mFDHFwC",
      "etag": "E4qfXdiDHiY",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/ZX__8mFDHFwC",
      "volumeInfo": {
        "title": "Northern Border Security",
        "subtitle": "Hearings Before a Subcommittee of the Committee on Appropriations, United States Senate, One Hundred Seventh Congress, First Session, Special Hearing, October 3, 2001, Washington, DC, December 5, 2001, Washington, DC..",
        "authors": [
          "United States. Congress. Senate. Committee on Appropriations. Subcommittee on Treasury and General Government"
        ],
        "publishedDate": "2002",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "UCAL:B5104775"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 100,
        "printType": "BOOK",
        "categories": [
          "United States"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.5.7.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=ZX__8mFDHFwC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=ZX__8mFDHFwC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=ZX__8mFDHFwC&pg=PA85&dq=border&hl=&cd=3&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=ZX__8mFDHFwC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=ZX__8mFDHFwC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=ZX__8mFDHFwC&rdid=book-ZX__8mFDHFwC&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/Northern_Border_Security.epub?id=ZX__8mFDHFwC&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=ZX__8mFDHFwC&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBorder\u003c/b\u003e is 4,000 miles long . The Southern \u003cb\u003eBorder\u003c/b\u003e is 2,000 miles long . While much has been done over the last decade to improve security on our \u003cb\u003eborder\u003c/b\u003e with Mexico , the Northern \u003cb\u003eBorder\u003c/b\u003e has largely been ignored . For example , only 1,773&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "G4hnEAAAQBAJ",
      "etag": "x4lF4rlNITU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/G4hnEAAAQBAJ",
      "volumeInfo": {
        "title": "Boundaries and Borders in the Post-Yugoslav Space",
        "subtitle": "A European Experience",
        "authors": [
          "Nenad Stefanov",
          "Srdjan Radović"
        ],
        "publisher": "Walter de Gruyter GmbH & Co KG",
        "publishedDate": "2021-10-25",
        "description": "The disintegration of Yugoslavia, accompanied by the emergence of new borders, is paradigmatically highlighting the relevance of borders in processes of societal change, crisis and conflict. This is even more the case, if we consider the violent practices that evolved out of populist discourse of ethnically homogenous bounded space in this process that happened in the wars in Yugoslavia in the 1990ies. Exploring the boundaries of Yugoslavia is not just relevant in the context of Balkan area studies, but the sketched phenomena acquire much wider importance, and can be helpful in order to better understand the dynamics of b/ordering societal space, that are so characteristic for our present situation.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9783110712766"
          },
          {
            "type": "ISBN_10",
            "identifier": "3110712768"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 278,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=G4hnEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=G4hnEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=G4hnEAAAQBAJ&pg=PA78&dq=border&hl=&cd=4&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=G4hnEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=G4hnEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 103.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 103.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=G4hnEAAAQBAJ&rdid=book-G4hnEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 103990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 103990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Boundaries_and_Borders_in_the_Post_Yugos-sample-pdf.acsm?id=G4hnEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=G4hnEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e economic relations are already confined by the existence of the new \u003cb\u003eborder\u003c/b\u003e, the old networks have not yet dissolved. This is followed by the “adult borderland” stage. The social networks now unconditionally accept the&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "wvYnDwAAQBAJ",
      "etag": "PMWP7WN76XM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/wvYnDwAAQBAJ",
      "volumeInfo": {
        "title": "Borders, Memory and Transculturality",
        "subtitle": "An Annotated Bibliography on the European Discourse",
        "authors": [
          "Angela Vaupel"
        ],
        "publisher": "LIT Verlag Münster",
        "publishedDate": "2017",
        "description": "This annotated bibliography provides a guide for grappling with border issues and offers an account of the research discourse on the interdisciplinary disciplines of Border Studies, Memory Studies and (Teacher) Education: the reviews collected in this volume connect a variety of approaches such as education for diversity and inclusion; borders, memories and their representation in the media; Museum Studies and pedagogy, and present a wealth of information and material that refers to major socio-historical events which shaped European regions and dominated public debate. Angela Vaupel is a senior lecturer at St Mary's University College Belfast and has widely published on aspects of European Cultural Studies.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9783643909084"
          },
          {
            "type": "ISBN_10",
            "identifier": "364390908X"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 213,
        "printType": "BOOK",
        "categories": [
          "Political Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=wvYnDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=wvYnDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=wvYnDwAAQBAJ&pg=PA158&dq=border&hl=&cd=5&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=wvYnDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=wvYnDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 29.34,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 15.84,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=wvYnDwAAQBAJ&rdid=book-wvYnDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 29340000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 15840000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true
        },
        "webReaderLink": "http://play.google.com/books/reader?id=wvYnDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e &#39; and &#39; \u003cb\u003eborder\u003c/b\u003e areas &#39; . In his view , \u003cb\u003eborder\u003c/b\u003e areas in Europe can be divided into three main groups , namely West - European ( there are &#39; old \u003cb\u003eborders\u003c/b\u003e &#39; which have been developed in parallel with the historical regions in this&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "6RSVEAAAQBAJ",
      "etag": "48gcKS1lEcw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/6RSVEAAAQBAJ",
      "volumeInfo": {
        "title": "Visible Borders, Invisible Economies",
        "subtitle": "Living Death in Latinx Narratives",
        "authors": [
          "Kristy L. Ulibarri"
        ],
        "publisher": "University of Texas Press",
        "publishedDate": "2022-11-22",
        "description": "2023 Outstanding Book Award, National Association for Ethnic Studies A thorough examination of the political and economic exploitation of Latinx subjects, migrants, and workers through the lens of Latinx literature, photography, and film. Globalization in the United States can seem paradoxical: free trade coincides with fortification of the southern border, while immigration is reimagined as a national-security threat. US politics turn aggressively against Latinx migrants and subjects even as post-NAFTA markets become thoroughly reliant on migrant and racialized workers. But in fact, there is no incongruity here. Rather, anti-immigrant politics reflect a strategy whereby capital uses specialized forms of violence to create a reserve army of the living, laboring dead. Visible Borders, Invisible Economies turns to Latinx literature, photography, and films that render this unseen scheme shockingly vivid. Works such as Valeria Luiselli’s Tell Me How It Ends and Alex Rivera’s Sleep Dealer crystallize the experience of Latinx subjects and migrants subjugated to social death, their political existence erased by disenfranchisement and racist violence while their bodies still toil in behalf of corporate profits. In Kristy L. Ulibarri’s telling, art clarifies what power obscures: the national-security state performs anti-immigrant and xenophobic politics that substitute cathartic nationalism for protections from the free market while ensuring maximal corporate profits through the manufacture of disposable migrant labor.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781477326039"
          },
          {
            "type": "ISBN_10",
            "identifier": "1477326030"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 283,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "2.5.4.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=6RSVEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=6RSVEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=6RSVEAAAQBAJ&pg=PA70&dq=border&hl=&cd=6&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=6RSVEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=6RSVEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 34.95,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 34.95,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=6RSVEAAAQBAJ&rdid=book-6RSVEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 34950000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 34950000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true
        },
        "pdf": {
          "isAvailable": true
        },
        "webReaderLink": "http://play.google.com/books/reader?id=6RSVEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBorder\u003c/b\u003e Patrol&#39;s games ( as in some of Taylor&#39;s work ) . Moreover , the images often cannot capture the totality of these \u003cb\u003eborder\u003c/b\u003e phenomena , especially the unbridled economic and political violences at play , whether these be the puls&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "-yh5LweFHQwC",
      "etag": "x5E+FVE9iDI",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/-yh5LweFHQwC",
      "volumeInfo": {
        "title": "EU Enlargement, Region Building and Shifting Borders of Inclusion and Exclusion",
        "authors": [
          "Professor James W. Scott"
        ],
        "publisher": "Ashgate Publishing, Ltd.",
        "publishedDate": "2012-11-28",
        "description": "The 2004 entry of 10 Central and Eastern European countries, along with Malta and Cyprus, into the EU has caused a huge shift in the EU's external boundaries. The socio-economic and political transformations that this shift has caused not only suggest new regional development opportunities, but also many potential problems and tensions. While the EU insists that enlargement will not signify 'new divisions', processes of inclusion and exclusion and the imposition of visa restrictions on non-EU citizens could pose obstacles to co-operation, conjuring fears of an emerging 'fortress Europe' that effectively divides the continent. Illustrated with case studies from Central and Eastern European border areas, this book examines capacities for region building across national borders in within the context of EU enlargement, synthesizing the various insights provided by local information and suggesting ways forward for the future development of the EU's 'Wider Europe' strategy.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781409487159"
          },
          {
            "type": "ISBN_10",
            "identifier": "1409487156"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 266,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.6.5.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=-yh5LweFHQwC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=-yh5LweFHQwC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=-yh5LweFHQwC&pg=PA104&dq=border&hl=&cd=7&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=-yh5LweFHQwC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=-yh5LweFHQwC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 149.95,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 119.96,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=-yh5LweFHQwC&rdid=book--yh5LweFHQwC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 149950000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 119960000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/EU_Enlargement_Region_Building_and_Shift-sample-epub.acsm?id=-yh5LweFHQwC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/EU_Enlargement_Region_Building_and_Shift-sample-pdf.acsm?id=-yh5LweFHQwC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=-yh5LweFHQwC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e , it means simplification and standardization of \u003cb\u003eborder\u003c/b\u003e controls ; on the eastern \u003cb\u003eborder\u003c/b\u003e , there is a strong risk of limiting the still relatively free movement of people . Cross - \u003cb\u003eBorder\u003c/b\u003e Cooperation in the Post - Soviet Context&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "7C1AEAAAQBAJ",
      "etag": "yTySteoFaGc",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/7C1AEAAAQBAJ",
      "volumeInfo": {
        "title": "British Columbia’s Borders in Globalization",
        "authors": [
          "Nicole Bates-Eamer",
          "Helga Kristín Hallgrímsdóttir"
        ],
        "publisher": "Routledge",
        "publishedDate": "2021-11-24",
        "description": "This book is a case-study collection examining the influences and functions of British Columbia’s (BC) borders in the 21st century. British Columbia’s Borders in Globalization examines bordering processes and the causes and effects of borders in the Cascadian region, from the perspective of BC. The chapters cover diverse topics including historical border disputes and cannabis culture and identity; the governance of transboundary water flows, migration, and preclearance policies for goods and people; and the emerging issue of online communities. The case studies provide examples that highlight the simultaneous but contradictory trends regarding borders in BC: while boundaries and bordering processes at the external borders shift away from the territorial boundary lines, self-determination, local politics, and cultural identities re-inscribe internal boundaries and borders that are both virtual and real. Moreover, economic protectionism, racial discourses, and xenophobic narratives, driven by advances in technology, reinforce the territorial dimensions of borders. These case studies contribute to the literature challenging the notion that territorial borders are sufficient for understanding how borders function in BC; and in a few instances they illustrate the nuanced ways in which borders (or bordering processes) are becoming detached from territory. The chapters in this book were originally published as a special issue of the Journal of Borderlands Studies.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781000481020"
          },
          {
            "type": "ISBN_10",
            "identifier": "1000481026"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 126,
        "printType": "BOOK",
        "categories": [
          "Political Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=7C1AEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=7C1AEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=7C1AEAAAQBAJ&pg=PT34&dq=border&hl=&cd=8&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=7C1AEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=7C1AEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 55.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 43.11,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=7C1AEAAAQBAJ&rdid=book-7C1AEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 55990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 43110000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/British_Columbia_s_Borders_in_Globalizat-sample-epub.acsm?id=7C1AEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/British_Columbia_s_Borders_in_Globalizat-sample-pdf.acsm?id=7C1AEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=7C1AEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBorder\u003c/b\u003e Services Agency 2017-18 Departmental Plan . Canadian Broadcasting Corporation . 2017. Protesters Say New \u003cb\u003eBorder\u003c/b\u003e Law is &#39; Draconian &#39; , December 16. http://www.cbc.ca/news/canada/british-columbia/protesters-say- new - \u003cb\u003eborder\u003c/b\u003e - law&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "QazKoWJprysC",
      "etag": "REfz4hRPjmQ",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/QazKoWJprysC",
      "volumeInfo": {
        "title": "The Borders of Inequality",
        "subtitle": "Where Wealth and Poverty Collide",
        "authors": [
          "ê–igo MorŽ Mart’nez"
        ],
        "publisher": "University of Arizona Press",
        "publishedDate": "2011-05-15",
        "description": "Recently U.S. media, policymakers, and commentators of all stripes have been preoccupied with the nationÕs border with Mexico. Airwaves, websites, and blogs are filled with concerns over border issues: illegal immigrants, drug wars, narcotics trafficking, and Òsecuring the border.Ó While this is a valid conversation, itÕs rarely contrasted with the other U.S. border, with CanadaÑ still the longest unguarded border on Earth. In this fascinating book, originally published in Spain to much acclaim, researcher ê–igo MorŽ looks at the bigger picture. With a professionally trained eye, he examines the worldÕs Òtop twenty most unequal borders.Ó What he finds is that many of these border situations share similar characteristics. There is always illegal immigration from the poor country to the wealthy one. There is always trafficking in illegal substances. And the unequal neighbors usually regard each other with suspicion or even open hostility. After surveying the Òtop twenty,Ó MorŽ explores in depth the cases of three borders: between Germany and Poland, Spain and Morocco, and the United States and Mexico. The core problem, he concludes, is not drugs or immigration or self-protection. Rather, the problem is inequality itself. Unequal borders result, he writes, from a skewed interaction among markets, people, and states. Using these findings, MorŽ builds a useful new framework for analyzing border dynamics from a quantitative view based on economic inequality. The Borders of Inequality illustrates how longstanding Òmultidirectional misunderstandingsÓ can exacerbate cross-border problemsÑand consequent public opinion. Perpetuating these misunderstandings can inflame and complicate the situation, but purposeful efforts to reduce inequality can produce promising results.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780816529322"
          },
          {
            "type": "ISBN_10",
            "identifier": "0816529329"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 189,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.3.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=QazKoWJprysC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=QazKoWJprysC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=QazKoWJprysC&pg=PA64&dq=border&hl=&cd=9&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=QazKoWJprysC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=QazKoWJprysC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 45,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 36,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=QazKoWJprysC&rdid=book-QazKoWJprysC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 45000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 36000000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Borders_of_Inequality-sample-pdf.acsm?id=QazKoWJprysC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=QazKoWJprysC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e). But it reaches its apogee on the \u003cb\u003eborder\u003c/b\u003e between Mexico and the United States, two countries that are united, or separated, by a chain of reciprocal cities like San Diego–Tijuana and El Paso–Ciudad Juárez. The fact that all of&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "QU70DAAAQBAJ",
      "etag": "8luASokfeHI",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/QU70DAAAQBAJ",
      "volumeInfo": {
        "title": "Migration Borders Freedom",
        "authors": [
          "Harald Bauder"
        ],
        "publisher": "Routledge",
        "publishedDate": "2016-09-01",
        "description": "International borders have become deadly barriers of a proportion rivaled only by war or natural disaster. Yet despite the damage created by borders, most people can’t – or don’t want to – imagine a world without them. What alternatives do we have to prevent the deadly results of contemporary borders? In today’s world, national citizenship determines a person’s ability to migrate across borders. Migration Borders Freedom questions that premise. Recognizing the magnitude of deaths occurring at contemporary borders worldwide, the book problematizes the concept of the border and develops arguments for open borders and a world without borders. It explores alternative possibilities, ranging from the practical to the utopian, that link migration with ideas of community, citizenship, and belonging. The author calls into question the conventional political imagination that assumes migration and citizenship to be responsibilities of nation states, rather than cities. While the book draws on the theoretical work of thinkers such as Ernst Bloch, David Harvey, and Henry Lefebvre, it also presents international empirical examples of policies and practices on migration and claims of belonging. In this way, the book equips the reader with the practical and conceptual tools for political action, activist practice, and scholarly engagement to achieve greater justice for people who are on the move. The Open Access version of this book, available at https://www.taylorfrancis.com/books/9781315638300 has been made available under a Creative Commons Attribution-Non Commercial-No Derivatives 4.0 license.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781317270621"
          },
          {
            "type": "ISBN_10",
            "identifier": "1317270622"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 185,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.5.7.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=QU70DAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=QU70DAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=QU70DAAAQBAJ&pg=PA1988&dq=border&hl=&cd=10&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=QU70DAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=QU70DAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 0,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 0,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=QU70DAAAQBAJ&rdid=book-QU70DAAAQBAJ&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Migration_Borders_Freedom-sample-epub.acsm?id=QU70DAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Migration_Borders_Freedom-sample-pdf.acsm?id=QU70DAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=QU70DAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e scholarship (van Houtum et al. 2005). In Balibar&#39;s (2002, 75) words, the \u003cb\u003eborder\u003c/b\u003e has no “essence”: there is neither a uniform meaning of the \u003cb\u003eborder\u003c/b\u003e nor an objective character that can be attributed to \u003cb\u003eborders\u003c/b\u003e independent of human&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "nOiMLHMIAuMC",
      "etag": "oq/tbqCGox0",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/nOiMLHMIAuMC",
      "volumeInfo": {
        "title": "Walls, Borders, Boundaries",
        "subtitle": "Spatial and Cultural Practices in Europe",
        "authors": [
          "Marc Silberman",
          "Karen E. Till",
          "Janet Ward"
        ],
        "publisher": "Berghahn Books",
        "publishedDate": "2012-05-01",
        "description": "How is it that walls, borders, boundaries—and their material and symbolic architectures of division and exclusion—engender their very opposite? This edited volume explores the crossings, permeations, and constructions of cultural and political borders between peoples and territories, examining how walls, borders, and boundaries signify both interdependence and contact within sites of conflict and separation. Topics addressed range from the geopolitics of Europe’s historical and contemporary city walls to conceptual reflections on the intersection of human rights and separating walls, the memory politics generated in historically disputed border areas, theatrical explorations of border crossings, and the mapping of boundaries within migrant communities.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780857455055"
          },
          {
            "type": "ISBN_10",
            "identifier": "0857455052"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 282,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.14.14.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=nOiMLHMIAuMC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=nOiMLHMIAuMC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=nOiMLHMIAuMC&pg=PA20&dq=border&hl=&cd=11&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=nOiMLHMIAuMC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=nOiMLHMIAuMC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 34.95,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 19.22,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=nOiMLHMIAuMC&rdid=book-nOiMLHMIAuMC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 34950000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 19220000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Walls_Borders_Boundaries-sample-epub.acsm?id=nOiMLHMIAuMC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Walls_Borders_Boundaries-sample-pdf.acsm?id=nOiMLHMIAuMC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=nOiMLHMIAuMC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eBorder\u003c/b\u003e , Despite Physical Barrier , ” New York Times , 5 March 2007 , A4 . 33. \u003cb\u003eBorder\u003c/b\u003e Art Workshop / Taller de Arte Fronterizo webpage : http : //www.borderart- workshop.com/index.html ( accessed 1 July 2010 ) ; Susan Leibovitz Steinman&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "IWbnDwAAQBAJ",
      "etag": "0rMnSFB5jsM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/IWbnDwAAQBAJ",
      "volumeInfo": {
        "title": "Migration, Borders and Education",
        "subtitle": "International Sociological Inquiries",
        "authors": [
          "Jessica Gerrard",
          "Arathi Sriprakash"
        ],
        "publisher": "Routledge",
        "publishedDate": "2020-05-21",
        "description": "This book brings together high-quality international research which examines how migration and borders are experienced in education. It presents new conceptualisations of education as a ‘border regime’, demonstrating the need for closer attention to ‘border thinking’, and diasporic and transnational analyses in education. We live in a time in which borders – material and political – are being reasserted with profound social consequences. Both the containment and global movement of people dominate political concerns and inevitably impact educational systems and practices. Providing a global outlook, the chapters in this book present in-depth sociological analyses of the ways in which borders are constituted and reconstituted through educational practice from a diverse range of national contexts. Key issues taken up by authors include: immigration status and educational inequalities; educational inclusion and internal migration; ‘curricula nationalism’ and global citizenship; education and labour; the educational experiences of refugees and the politics of refugee education; student migration and adult education; and nationalism, colonialism and racialization. This book was originally published as a special issue of International Studies in Sociology of Education.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781000063837"
          },
          {
            "type": "ISBN_10",
            "identifier": "1000063836"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 225,
        "printType": "BOOK",
        "categories": [
          "Education"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=IWbnDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=IWbnDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=IWbnDwAAQBAJ&pg=RA1-PA1998&dq=border&hl=&cd=12&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=IWbnDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=IWbnDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 54.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 43.44,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=IWbnDwAAQBAJ&rdid=book-IWbnDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 54990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 43440000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Migration_Borders_and_Education-sample-epub.acsm?id=IWbnDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Migration_Borders_and_Education-sample-pdf.acsm?id=IWbnDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=IWbnDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e at this moment in time , the past reveals much negotiation over \u003cb\u003eborders\u003c/b\u003e and boundaries be these linguistic , social , epistemological , psychological , ontological or physical boundaries - the world prior to nation state&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "c5nH4gJpgmsC",
      "etag": "FCLBTzeCrQY",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/c5nH4gJpgmsC",
      "volumeInfo": {
        "title": "Borders, Bindings & Edges",
        "subtitle": "The Art of Finishing Your Quilt",
        "authors": [
          "Sally Collins"
        ],
        "publisher": "C&T Publishing Inc",
        "publishedDate": "2004-05-01",
        "description": "The ultimate reference guide for quilt borders and finishes!",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781607054931"
          },
          {
            "type": "ISBN_10",
            "identifier": "1607054930"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 116,
        "printType": "BOOK",
        "categories": [
          "Crafts & Hobbies"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.4.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=c5nH4gJpgmsC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=c5nH4gJpgmsC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=c5nH4gJpgmsC&pg=PA26&dq=border&hl=&cd=13&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=c5nH4gJpgmsC&dq=border&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Borders_Bindings_Edges.html?hl=&id=c5nH4gJpgmsC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Borders_Bindings_Edges-sample-pdf.acsm?id=c5nH4gJpgmsC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=c5nH4gJpgmsC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... uninterrupted around perimeter . Symmetrical Partially symmetrical One design printed over and over 00 : 0 0000000 00000000 Cut and Sew \u003cb\u003eBorders\u003c/b\u003e from a Symmetrical \u003cb\u003eBorder\u003c/b\u003e Print for. 26 \u003cb\u003eBorders\u003c/b\u003e , Bindings &amp; Edges \u003cb\u003eBorder\u003c/b\u003e-Print Fabric \u003cb\u003eBorders\u003c/b\u003e."
      }
    },
    {
      "kind": "books#volume",
      "id": "_eiWDwAAQBAJ",
      "etag": "lQYkBZTmpB4",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/_eiWDwAAQBAJ",
      "volumeInfo": {
        "title": "Women and Borders",
        "subtitle": "Refugees, Migrants and Communities",
        "authors": [
          "Seema Shekhawat",
          "Emanuela C. Del Re"
        ],
        "publisher": "Bloomsbury Publishing",
        "publishedDate": "2017-12-18",
        "description": "Borders - whether settled or contested, violent or calm, closed or open - may have a direct, and often acute, human impact. Those affected may be people living nearby, those attempting to cross them and even those who succeed in doing so. At the border, vulnerable refugee and migrant communities, especially women, are exposed to state-centred boundary practices, paving the way for both their alienation and exploitation. The militarization of borders subjugates the very position of women in these marginalized areas and often subjects them to further victimization, which is facilitated by patriarchal socio-cultural practice. Structural violence is endemic to these regions and gender interlocks with their perimeters to reinforce and shape violence. This book locates gender and violence along geographical edges and critically examines the gendered experiences of women as global border residents and border crossers. Broadly, it explores two questions. First, what are women's experiences of engaging with borders? Second, where are women positioned in the theory and practice of marking, remarking and demarking these margins? Offering a nuanced and thorough approach, this book suggests that research on borders and violence needs to focus on how bordered violence shapes the embodiment of gender identity and norms and how they are challenged. It examines an array of issues including forced migration, trafficking and cross-border ties to explore how gender and borders intersect.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781838609863"
          },
          {
            "type": "ISBN_10",
            "identifier": "1838609865"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 281,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=_eiWDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=_eiWDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=_eiWDwAAQBAJ&pg=PT222&dq=border&hl=&cd=14&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=_eiWDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=_eiWDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 42.25,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 31.26,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=_eiWDwAAQBAJ&rdid=book-_eiWDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 42250000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 31260000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Women_and_Borders-sample-epub.acsm?id=_eiWDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Women_and_Borders-sample-pdf.acsm?id=_eiWDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=_eiWDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e was announced by India and Pakistan . For the first time , the two states agreed to completely halt hostilities on the \u003cb\u003eborder\u003c/b\u003e , including a cessation of firing and shelling . Though the ceasefire helped reduce cross- \u003cb\u003eborder\u003c/b\u003e&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "NDSoDwAAQBAJ",
      "etag": "nP+R7R8FI7E",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/NDSoDwAAQBAJ",
      "volumeInfo": {
        "title": "Crossing Borders",
        "authors": [
          "Mimi Sheller",
          "Kevin Hannam"
        ],
        "publisher": "Routledge",
        "publishedDate": "2018-10-18",
        "description": "Crossing Borders examines how translocal, transnational, and internal borders of various kinds distribute uneven capabilities for moving, dwelling, and circulating. The contributors offer nuanced understandings of the politics of mobility across various kinds of borders and forms of cultural circulation, showing how people experience and practice crossing many different borders. Several chapters draw on interviews and ethnographic methods to analyze transnational migration, while others focus on material relations and cultural practices. Rather than the usual narrative of mobility as a kind of freedom, border crossing emerges here as an instrumental practice for building translocal livelihoods, a tactic for simply getting by, and a material practice potentially generating new forms of future sociality. Ultimately these diverse perspectives on crossing borders offer new ways to think about the mobility of political relations and the politics of mobile relations in a world of growing circulation across borders, but also flexible forms of (re)bordering. This book was originally published as a special issue of Mobilities.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781351714389"
          },
          {
            "type": "ISBN_10",
            "identifier": "1351714384"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 159,
        "printType": "BOOK",
        "categories": [
          "Business & Economics"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=NDSoDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=NDSoDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=NDSoDwAAQBAJ&pg=PA3&dq=border&hl=&cd=15&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=NDSoDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=NDSoDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 54.95,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 43.41,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=NDSoDwAAQBAJ&rdid=book-NDSoDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 54950000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 43410000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Crossing_Borders-sample-pdf.acsm?id=NDSoDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=NDSoDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e (2002) and EU enlargement to Romania and Bulgaria (2007). Despite the consequences of the economic crisis, which have been widely attributed to the adverse developments in the ... \u003cb\u003eBORDERS\u003c/b\u003e Cross-\u003cb\u003eborder\u003c/b\u003e Mobility Approach."
      }
    },
    {
      "kind": "books#volume",
      "id": "kpgAEAAAQBAJ",
      "etag": "JZI73fRKEuM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/kpgAEAAAQBAJ",
      "volumeInfo": {
        "title": "Borders, Sociocultural Encounters and Contestations",
        "subtitle": "Southern African Experiences in Global View",
        "authors": [
          "Christopher Changwe Nshimbi",
          "Inocent Moyo",
          "Jussi P. Laine"
        ],
        "publisher": "Routledge",
        "publishedDate": "2020-11-19",
        "description": "This book examines the enduring significance of borders in Southern Africa, covering encounters between people, ideas and matter, and the new spatialities and transformations they generate in their historical, social, economic and cultural contexts. Situated within debates on borders, borderlands, sub- and regional integration, this volume examines local, grassroots and non-state actors and their cross-border economic and sociocultural encounters and contestations. Particular attention is also paid on the role they play in the Southern African Development Community (SADC) region and its integration project in its multiplicity. The interdisciplinary chapters address the diverse human activities relating to cross-border economic and sociocultural encounters and contestations that are manifested through multiform and -scalar interactions between or among grassroots actors, involving engagements between grassroots actors and the state or its agencies, and/or to the broader arrangements that bear consequences of the first two upon regional integration. By bringing these different, at times contrasting, forms of interaction under a holistic analysis, this volume devises novel ways to understand the persistence and role of borders and their relation to new transnational and transcultural integrative phenomena at various levels, extending from the (nation-)state and the political to the cultural and social at the everyday level of border practices. Scholars and students of African studies, geography, economics, politics, sociology and border studies will find this book useful.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781000203394"
          },
          {
            "type": "ISBN_10",
            "identifier": "1000203395"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 170,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=kpgAEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=kpgAEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=kpgAEAAAQBAJ&pg=PT19&dq=border&hl=&cd=16&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=kpgAEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=kpgAEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 55.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 43.11,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=kpgAEAAAQBAJ&rdid=book-kpgAEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 55990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 43110000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Borders_Sociocultural_Encounters_and_Con-sample-epub.acsm?id=kpgAEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Borders_Sociocultural_Encounters_and_Con-sample-pdf.acsm?id=kpgAEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=kpgAEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e activities and motives behind them are largely sociocultural, though some of the actors engage in economic activities too. Moyo underpins the dynamic and agentive cross-\u003cb\u003eborder\u003c/b\u003e existence of these actors, reflected in transboundary&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "uGJcun8ma2cC",
      "etag": "QuHDdUhRKxA",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/uGJcun8ma2cC",
      "volumeInfo": {
        "title": "Refugees and Borders in South Asia",
        "subtitle": "The Great Exodus of 1971",
        "authors": [
          "Antara Datta"
        ],
        "publisher": "Routledge",
        "publishedDate": "2012-08-21",
        "description": "The crisis in East Pakistan in 1971, which preceded the birth of Bangladesh, led to ten million refugees crossing the border into India. This book argues that this massive influx of refugees within a few short months changed ideas about citizenship and belonging in South Asia. The book looks at how the Indian state, while generously keeping its borders open to the refugees, made it clear that these refugees were different from those generated by Partition, and would not be allowed to settle permanently. It discusses how the state was breaking its ‘effective’ link between refugees and citizenship, and how at the same time a second ‘affective’ border was developing between those living in the border areas, especially in Assam and West Bengal. Moving beyond the refugee narratives created by Partition, this book argues that these ‘effective’ and ‘affective’ borders generated by the refugee crisis in 1971 form part of the longer historical trajectory of the current political debate regarding ‘illegal infiltration’ from Bangladesh . It goes on to analyse the aftermath of the 1971 war and the massive repatriation project undertaken by the governments of India, Pakistan and Bangladesh to examine ways in which questions about minorities and belonging remained unresolved post-1971. The book is an interesting contribution to the history of refugees, border-making and 1971 in South Asia, as well as to studies in politics and international relations.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781136250361"
          },
          {
            "type": "ISBN_10",
            "identifier": "1136250360"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 242,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "3.7.7.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=uGJcun8ma2cC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=uGJcun8ma2cC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=uGJcun8ma2cC&pg=PA43&dq=border&hl=&cd=17&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=uGJcun8ma2cC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=uGJcun8ma2cC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE_AND_RENTAL",
        "isEbook": true,
        "listPrice": {
          "amount": 61.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 49.59,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=uGJcun8ma2cC&rdid=book-uGJcun8ma2cC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 61990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 49590000,
              "currencyCode": "USD"
            },
            "giftable": true
          },
          {
            "finskyOfferType": 3,
            "listPrice": {
              "amountInMicros": 31000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 27280000,
              "currencyCode": "USD"
            },
            "rentalDuration": {
              "unit": "DAY",
              "count": 180
            }
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Refugees_and_Borders_in_South_Asia-sample-epub.acsm?id=uGJcun8ma2cC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Refugees_and_Borders_in_South_Asia-sample-pdf.acsm?id=uGJcun8ma2cC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=uGJcun8ma2cC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e , could , by accepting a UN presence within its \u003cb\u003eborder\u003c/b\u003e , reassert its primacy over its frontiers . It could claim that by opening reception centres and allowing the refugees to return , it was re - establishing control over&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "piCWDwAAQBAJ",
      "etag": "jgZao0bKf+A",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/piCWDwAAQBAJ",
      "volumeInfo": {
        "title": "EU Law Beyond EU Borders",
        "subtitle": "The Extraterritorial Reach of EU Law",
        "authors": [
          "Marise Cremona",
          "Joanne Scott"
        ],
        "publisher": "Oxford University Press",
        "publishedDate": "2019-05-03",
        "description": "This book addresses the impact of EU law beyond its own borders, the use of law as a powerful instrument of EU external action, and some of the normative challenges this poses. The phenomenon of EU law operating beyond its borders, which may be termed its 'global reach', includes the extraterritorial application of EU law, territorial extension, and the so-called 'Brussels Effect' resulting from unilateral legislative and regulatory action, but also includes the impact of the EU's bilateral relationships, and its engagement with multilateral fora and the negotiation of international legal instruments. The book maps this phenomenon across a range of policy fields, including the environment, the internet and data protection, banking and financial markets, competition policy, and migration. It argues that in looking beyond the undoubtedly important instrumental function of law we can start to identify the ways in which law shapes the EU's external identity and its relations with other legal regimes, both enabling and constraining the EU's external action.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780192579478"
          },
          {
            "type": "ISBN_10",
            "identifier": "0192579479"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 263,
        "printType": "BOOK",
        "categories": [
          "Law"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=piCWDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=piCWDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=piCWDwAAQBAJ&pg=PA198&dq=border&hl=&cd=18&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=piCWDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=piCWDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 99.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 79.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=piCWDwAAQBAJ&rdid=book-piCWDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 99990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 79990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/EU_Law_Beyond_EU_Borders-sample-pdf.acsm?id=piCWDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=piCWDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e , and the role of Frontex , the EU&#39;s external \u003cb\u003eborder\u003c/b\u003e agency . The &#39; external &#39; dimension concerns the EU&#39;s engagement with states outside the Schengen zone in relation to \u003cb\u003eborder\u003c/b\u003e control and irregular migration . In Boswell&#39;s&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "k-1TBAAAQBAJ",
      "etag": "w2b650oeATQ",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/k-1TBAAAQBAJ",
      "volumeInfo": {
        "title": "European-East Asian Borders in Translation",
        "authors": [
          "Joyce C.H. Liu",
          "Nick Vaughan-Williams"
        ],
        "publisher": "Routledge",
        "publishedDate": "2014-08-21",
        "description": "European-East Asian Borders is an international, trans-disciplinary volume that breaks new ground in the study of borders and bordering practices in global politics. It explores the insights and limitations of border theory developed primarily in the European context to a range of historical and contemporary border-related issues and phenomena in East Asia. The essays presented here question, rather than assume, the various borders between inclusion/exclusion, here/there, us/them, that condition the (im)possibility of translating between histories, cultures and identities. Contributors suggest that the act of translation offers new ways of thinking about how border logics operate, taking on the concept of translation itself as border problematic and therefore raising questions of power and authority, such as who gets to act as a translator, or who benefits from the outcome. The book will appeal not only to upper-level students and scholars with a geopolitical-historical interest in East Asia, but also to those who work in the inter-disciplinary field of border studies and others with an interest more generally in translation and the extent to which theory ‘travels’ across time and space.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781135011536"
          },
          {
            "type": "ISBN_10",
            "identifier": "1135011532"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 227,
        "printType": "BOOK",
        "categories": [
          "Political Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=k-1TBAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=k-1TBAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=k-1TBAAAQBAJ&pg=PA9&dq=border&hl=&cd=19&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=k-1TBAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=k-1TBAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 54.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 43.44,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=k-1TBAAAQBAJ&rdid=book-k-1TBAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 54990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 43440000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/European_East_Asian_Borders_in_Translati-sample-pdf.acsm?id=k-1TBAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=k-1TBAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e, linguistic \u003cb\u003eborder\u003c/b\u003e, ideological \u003cb\u003eborder\u003c/b\u003e, or virtual \u003cb\u003eborder\u003c/b\u003e; whether it is the external physical \u003cb\u003eborder\u003c/b\u003e or the internalized bordered consciousness; each author not only problema- tizes the \u003cb\u003eborder\u003c/b\u003e, but also offers new insights as to&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "lha6DQAAQBAJ",
      "etag": "jKKtskizo5k",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/lha6DQAAQBAJ",
      "volumeInfo": {
        "title": "Every Which Way Crochet Borders",
        "subtitle": "139 Patterns for Customized Edgings",
        "authors": [
          "Edie Eckman"
        ],
        "publisher": "Storey Publishing",
        "publishedDate": "2017-02-07",
        "description": "Step-by-step instructions and symbol charts put these 139 creative new border designs within reach for beginning and advanced crocheters alike. If you’re ready to chart your own crocheted course, Edie Eckman offers plenty of helpful design advice, including how to choose an appropriate border for each project and how to incorporate an element from the main stitch pattern into a new border design. She then explains, with the help of close-up photos, how the same pattern can have dramatically different results depending on the weight of the yarn. With each pattern diagrammed to approach in both rounds and rows, Every Which Way Crochet Borders is an inventive and invaluable resource.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781612127408"
          },
          {
            "type": "ISBN_10",
            "identifier": "1612127401"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 225,
        "printType": "BOOK",
        "categories": [
          "Crafts & Hobbies"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.5.0.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=lha6DQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=lha6DQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=lha6DQAAQBAJ&pg=PA9&dq=border&hl=&cd=20&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=lha6DQAAQBAJ&dq=border&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Every_Which_Way_Crochet_Borders.html?hl=&id=lha6DQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Every_Which_Way_Crochet_Borders-sample-pdf.acsm?id=lha6DQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=lha6DQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e. Many \u003cb\u003eborders\u003c/b\u003e have certain simple components in common. examples of these elements can be found on pages 32–39. These ele- ments may be an ... \u003cb\u003eBorder\u003c/b\u003e # 5 (. DesIgN CoNCepTs 9. Customizing. Your. \u003cb\u003eBorders\u003c/b\u003e. Customizing Your \u003cb\u003eBorders\u003c/b\u003e."
      }
    },
    {
      "kind": "books#volume",
      "id": "NJwkDQAAQBAJ",
      "etag": "QOIVNAc8qPs",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/NJwkDQAAQBAJ",
      "volumeInfo": {
        "title": "Language, Borders and Identity",
        "authors": [
          "Dominic Watt"
        ],
        "publisher": "Edinburgh University Press",
        "publishedDate": "2014-10-12",
        "description": "Identifying and examining political, socio-psychological and symbolic borders, Language, Borders and Identity encompasses a broad, geographically diverse spectrum of border contexts, taking a multi-disciplinary approach by combining sociolinguistics research with human geography, anthropology and social psychology.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780748669783"
          },
          {
            "type": "ISBN_10",
            "identifier": "0748669787"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 287,
        "printType": "BOOK",
        "categories": [
          "Language Arts & Disciplines"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.5.4.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=NJwkDQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=NJwkDQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=NJwkDQAAQBAJ&pg=PA135&dq=border&hl=&cd=21&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=NJwkDQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=NJwkDQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 109.97,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 87.98,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=NJwkDQAAQBAJ&rdid=book-NJwkDQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 109970000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 87980000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Language_Borders_and_Identity-sample-pdf.acsm?id=NJwkDQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=NJwkDQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e , this chapter has demonstrated the importance of the \u003cb\u003eborder\u003c/b\u003e in constraining perception . The data show that the perceptual constraints of proximity and cultural prominence discussed in earlier sections are clearly important to&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "pfFUEAAAQBAJ",
      "etag": "wCds/N9DM2k",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/pfFUEAAAQBAJ",
      "volumeInfo": {
        "title": "Create GUI Applications with Python & Qt5 (PySide2 Edition)",
        "subtitle": "The hands-on guide to making apps with Python",
        "authors": [
          "Martin Fitzpatrick"
        ],
        "publisher": "Martin Fitzpatrick",
        "publishedDate": "2020-12-23",
        "description": "Building desktop applications doesn't have to be difficult. Using Python & Qt5 you can create fully functional desktop apps in minutes. This is the 4th Edition of Create GUI Applications, updated for 2020 & PySide2 Starting from the very basics, this book takes you on a tour of the key features of PySide you can use to build real-life applications. Learn the fundamental building blocks of PySide applications — Widgets, Layouts & Signals and learn how PySide uses the event loop to handle and respond to user input. Design beautiful UIs with Qt Designer and customize the look and feel of your applications with Qt Style Sheets and custom widgets. Use Qt's MVC-like ModelViews framework to connect data sources to your widgets, including SQL databases, numpy and pandas data tables, to build-data driven application. Visualize data using matplotlib & PyQtGraph and connect with external data sources to build live dashboards. Learn how to use threads and processes to manage long-running tasks and communicate with external services. Parse data and visualize the output in logs and progress bars. The book includes usability and architectural tips to help you build maintainable and usable PySide2 applications from the start. Finally, once your application is ready to be released, discover how to package it up into professional-quality installers, ready to ship. The book includes - 665 pages of hands-on PySide exercises - 211 code examples to experiment with - Includes 4 example apps - Compatible with Python 3.4+ - Code free to reuse in your own projects",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9798586092007"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 821,
        "printType": "BOOK",
        "categories": [
          "Computers"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "2.3.3.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=pfFUEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=pfFUEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=pfFUEAAAQBAJ&pg=PA264&dq=border&hl=&cd=22&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=pfFUEAAAQBAJ&dq=border&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Create_GUI_Applications_with_Python_Qt5.html?hl=&id=pfFUEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true
        },
        "pdf": {
          "isAvailable": true
        },
        "webReaderLink": "http://play.google.com/books/reader?id=pfFUEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder Border\u003c/b\u003e Description \u003cb\u003eborder\u003c/b\u003e-color Box Colors (QPalette Foreground) Shorthand notation for setting the widget&#39;s \u003cb\u003eborder\u003c/b\u003e. Equivalent to specifying \u003cb\u003eborder\u003c/b\u003e-color, \u003cb\u003eborder\u003c/b\u003e-style, and/or \u003cb\u003eborder\u003c/b\u003e-width. Also \u003cb\u003eborder\u003c/b\u003e-top, \u003cb\u003eborder\u003c/b\u003e-right&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "8YLVlHBn0RAC",
      "etag": "ibe0AikNJkg",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/8YLVlHBn0RAC",
      "volumeInfo": {
        "title": "Speaking in Styles",
        "subtitle": "Fundamentals of CSS for Web Designers",
        "authors": [
          "Jason Cranford Teague"
        ],
        "publisher": "New Riders",
        "publishedDate": "2009-06-30",
        "description": "Speaking in Styles aims to help Web designers learn the \"language\" that will be used to take their vision from the static comp to the live Internet. Many designers think that CSS is code, and that it's too hard to learn. Jason takes an approach to CSS that breaks it down around common design tasks and helps the reader learn that they already think in styles--they just need to learn to speak the language. Jason helps Web designers find their voice, walks them through the grammar of CSS, shows them how to write their design specs in CSS, and how to prepare it for screen, printer or handheld devices. Along the way designers will learn to optimize their code, make it accessible, optimize for search engines, mix it up with Flash, and more.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780132104395"
          },
          {
            "type": "ISBN_10",
            "identifier": "0132104393"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 361,
        "printType": "BOOK",
        "categories": [
          "Computers"
        ],
        "averageRating": 1,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.9.9.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=8YLVlHBn0RAC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=8YLVlHBn0RAC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=8YLVlHBn0RAC&pg=PA152&dq=border&hl=&cd=23&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=8YLVlHBn0RAC&dq=border&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Speaking_in_Styles.html?hl=&id=8YLVlHBn0RAC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=8YLVlHBn0RAC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e is the rule around its box on the top , right , bottom , and left . A \u003cb\u003eborder\u003c/b\u003e can have any thickness and color , and you can select from a limited number of styles . Set the \u003cb\u003eborder\u003c/b\u003e on all four sides to be the same , or set each&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "Vt5OLD3vp4UC",
      "etag": "fHJEEFBSx3w",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Vt5OLD3vp4UC",
      "volumeInfo": {
        "title": "Russia and the Commonwealth of Independent States",
        "subtitle": "Documents, Data, and Analysis",
        "authors": [
          "Zbigniew Brzezinski",
          "Paige Bryan Sullivan",
          "Paige Sullivan",
          "Center for Strategic and International Studies (Washington, D.C.)"
        ],
        "publisher": "M.E. Sharpe",
        "publishedDate": "1997",
        "description": "A mammoth volume on the Commonwealth of Independent States (CIS), assembling major accords and protocols that form the institutional framework of the Commonwealth, key political statements by leaders of CIS member states, coverage of CIS responses to internal crises, and a detailed chronology of developments in the early years of the CIS's existence, plus color maps and statistics. Introductory notes to each group of documents supply historical background and highlight the inner dynamics of the CIS. An introduction places the dissolution of the USSR and the development of the CIS in a larger historical and geopolitical context. Includes contacts of CIS embassies and consulates in the US. Annotation copyright by Book News, Inc., Portland, OR",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "1563246376"
          },
          {
            "type": "ISBN_13",
            "identifier": "9781563246371"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 906,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "2.8.10.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=Vt5OLD3vp4UC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=Vt5OLD3vp4UC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=Vt5OLD3vp4UC&pg=PA529&dq=border&hl=&cd=24&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=Vt5OLD3vp4UC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=Vt5OLD3vp4UC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 202.77,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 162.22,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=Vt5OLD3vp4UC&rdid=book-Vt5OLD3vp4UC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 202770000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 162220000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Russia_and_the_Commonwealth_of_Independe-sample-epub.acsm?id=Vt5OLD3vp4UC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Russia_and_the_Commonwealth_of_Independe-sample-pdf.acsm?id=Vt5OLD3vp4UC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Vt5OLD3vp4UC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborder\u003c/b\u003e troops of 30 December 1991 , —proceeding from the need to implement mutually ac- ceptable decisions in the ... \u003cb\u003eBorder\u003c/b\u003e troops &quot; —formations of \u003cb\u003eborder\u003c/b\u003e troops of the Commonwealth and of states &#39; own \u003cb\u003eborder\u003c/b\u003e troops . 3. &quot; Own&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "i-EF_RADrH4C",
      "etag": "2igQfZ2Ahe0",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/i-EF_RADrH4C",
      "volumeInfo": {
        "title": "Man Cave Quilts",
        "authors": [
          "Rochelle Martin"
        ],
        "publisher": "Leisure Arts",
        "publishedDate": "2012",
        "description": "Man Cave Quilts includes 7 Masculine Designs.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781464704802"
          },
          {
            "type": "ISBN_10",
            "identifier": "1464704805"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 98,
        "printType": "BOOK",
        "categories": [
          "Crafts & Hobbies"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=i-EF_RADrH4C&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=i-EF_RADrH4C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=i-EF_RADrH4C&pg=PA11&dq=border&hl=&cd=25&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=i-EF_RADrH4C&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=i-EF_RADrH4C"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 14.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 14.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=i-EF_RADrH4C&rdid=book-i-EF_RADrH4C&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 14990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 14990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Man_Cave_Quilts-sample-pdf.acsm?id=i-EF_RADrH4C&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=i-EF_RADrH4C&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eborders\u003c/b\u003e to determined length. Matching centers and corners, sew side inner \u003cb\u003eborders\u003c/b\u003e to quilt top center. Press seam allowances outward. Measure width across center of quilt top center (including added \u003cb\u003eborders\u003c/b\u003e). Trim remaining inner \u003cb\u003eborder\u003c/b\u003e&nbsp;..."
      }
    }
  ]
}
","status":200,"url":"https://www.googleapis.com/books/v1/volumes?q=border&maxResults=25&key=AIzaSyB0h8Chg6lBoHUDHUbOHY83sceJP_O_Ga4"},"revalidate":31536000,"tags":[]}