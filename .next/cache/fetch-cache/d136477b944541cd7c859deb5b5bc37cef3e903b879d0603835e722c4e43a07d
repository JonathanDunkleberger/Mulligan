{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Sat, 23 Aug 2025 22:42:09 GMT","server":"ESF","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{
  "kind": "books#volumes",
  "totalItems": 1000000,
  "items": [
    {
      "kind": "books#volume",
      "id": "ptHZAAAAMAAJ",
      "etag": "t9JGHhwOuVE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/ptHZAAAAMAAJ",
      "volumeInfo": {
        "title": "The Lord of the Rings",
        "authors": [
          "j.r.r. tolkien",
          "John Ronald Reuel Tolkien"
        ],
        "publisher": "Mariner Books",
        "publishedDate": "2001",
        "description": "Contains the complete set of the six books of Lord of the Rings.",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "PSU:000045256417"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 1176,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 4.5,
        "ratingsCount": 11,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.7.1.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=ptHZAAAAMAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=ptHZAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=ptHZAAAAMAAJ&q=lord+of+the+ring&dq=lord+of+the+ring&hl=&cd=1&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=ptHZAAAAMAAJ&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Lord_of_the_Rings.html?hl=&id=ptHZAAAAMAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=ptHZAAAAMAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Contains the complete set of the six books of Lord of the Rings."
      }
    },
    {
      "kind": "books#volume",
      "id": "GuLZAAAAMAAJ",
      "etag": "D1is1IUBafw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/GuLZAAAAMAAJ",
      "volumeInfo": {
        "title": "The Lord of the Rings",
        "authors": [
          "John Ronald Reuel Tolkien"
        ],
        "publisher": "William Morrow",
        "publishedDate": "2004",
        "description": "In time for the golden anniversary of the arrival of part one of Tolkien's epic masterpiece on these shore comes a spectacular new edition of \"The Lord of the Rings.\" The text is fully correctedQunder the supervision of Christopher TolkienQto meet the author's exacting wishes, and includes two large-format fold-out maps, a ribbon placemarker, and exceptionally elegant packaging. 0-618-51765-0$100.00 / Houghton Mifflin",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "PSU:000062491532"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 1200,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 4.5,
        "ratingsCount": 29,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "5.7.2.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=GuLZAAAAMAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=GuLZAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=GuLZAAAAMAAJ&q=lord+of+the+ring&dq=lord+of+the+ring&hl=&cd=2&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=GuLZAAAAMAAJ&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Lord_of_the_Rings.html?hl=&id=GuLZAAAAMAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=GuLZAAAAMAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "&quot; The text is fully correctedQunder the supervision of Christopher TolkienQto meet the author&#39;s exacting wishes, and includes two large-format fold-out maps, a ribbon placemarker, and exceptionally elegant packaging. 0-618-51765-0$100.00 / ..."
      }
    },
    {
      "kind": "books#volume",
      "id": "xFr92V2k3PIC",
      "etag": "SnLZ+5cGSlY",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/xFr92V2k3PIC",
      "volumeInfo": {
        "title": "The Fellowship of the Ring (The Lord of the Rings, Book 1)",
        "authors": [
          "J. R. R. Tolkien"
        ],
        "publisher": "HarperCollins UK",
        "publishedDate": "2009-04-20",
        "description": "Darkness Will Bind Them... watch The Lord of the Rings: The Rings of Power season 2 on Prime Video",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780007322497"
          },
          {
            "type": "ISBN_10",
            "identifier": "0007322496"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 442,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 4.5,
        "ratingsCount": 13,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "2.21.23.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=xFr92V2k3PIC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=xFr92V2k3PIC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=xFr92V2k3PIC&printsec=frontcover&dq=lord+of+the+ring&hl=&cd=3&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=xFr92V2k3PIC&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Fellowship_of_the_Ring_The_Lord_of_t.html?hl=&id=xFr92V2k3PIC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Fellowship_of_the_Ring_The_Lord_of_t-sample-epub.acsm?id=xFr92V2k3PIC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=xFr92V2k3PIC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Darkness Will Bind Them... watch The Lord of the Rings: The Rings of Power season 2 on Prime Video"
      }
    },
    {
      "kind": "books#volume",
      "id": "aWZzLPhY4o0C",
      "etag": "5FBTmgSh5aM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/aWZzLPhY4o0C",
      "volumeInfo": {
        "title": "The Fellowship Of The Ring",
        "subtitle": "Being the First Part of The Lord of the Rings",
        "authors": [
          "J.R.R. Tolkien"
        ],
        "publisher": "HarperCollins",
        "publishedDate": "2012-02-15",
        "description": "Begin your journey into Middle-earth... The inspiration for the upcoming original series on Prime Video, The Lord of the Rings: The Rings of Power. The Fellowship of the Ring is the first part of J.R.R. Tolkien’s epic adventure The Lord of the Rings. One Ring to rule them all, One Ring to find them, One Ring to bring them all and in the darkness bind them. Sauron, the Dark Lord, has gathered to him all the Rings of Power—the means by which he intends to rule Middle-earth. All he lacks in his plans for dominion is the One Ring—the ring that rules them all—which has fallen into the hands of the hobbit, Bilbo Baggins. In a sleepy village in the Shire, young Frodo Baggins finds himself faced with an immense task, as his elderly cousin Bilbo entrusts the Ring to his care. Frodo must leave his home and make a perilous journey across Middle-earth to the Cracks of Doom, there to destroy the Ring and foil the Dark Lord in his evil purpose.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780547952017"
          },
          {
            "type": "ISBN_10",
            "identifier": "0547952015"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 647,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 4.5,
        "ratingsCount": 72,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "4.30.29.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=aWZzLPhY4o0C&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=aWZzLPhY4o0C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=aWZzLPhY4o0C&printsec=frontcover&dq=lord+of+the+ring&hl=&cd=4&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=aWZzLPhY4o0C&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=aWZzLPhY4o0C"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 11.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 11.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=aWZzLPhY4o0C&rdid=book-aWZzLPhY4o0C&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 11990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 11990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Fellowship_Of_The_Ring-sample-epub.acsm?id=aWZzLPhY4o0C&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=aWZzLPhY4o0C&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "The inspiration for the upcoming original series on Prime Video, The Lord of the Rings: The Rings of Power. The Fellowship of the Ring is the first part of J.R.R. Tolkien’s epic adventure The Lord of the Rings."
      }
    },
    {
      "kind": "books#volume",
      "id": "LRD9EAAAQBAJ",
      "etag": "Tsi7Hi/uCy8",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/LRD9EAAAQBAJ",
      "volumeInfo": {
        "title": "The Lord of the Rings. Illustrated",
        "subtitle": "The Fellowship of the Ring, The Two Towers, The Return of the King",
        "authors": [
          "J. R. R. Tolkien"
        ],
        "publisher": "Strelbytskyy Multimedia Publishing, Andrii Ponomarenko",
        "publishedDate": "2024-03-25",
        "description": "\"The Lord of the Rings: Illustrated\" is a captivating edition of J.R.R. Tolkien's epic fantasy trilogy, featuring \"The Fellowship of the Ring,\" \"The Two Towers,\" and \"The Return of the King,\" accompanied by stunning illustrations that bring Middle-earth to life in vivid detail. In \"The Fellowship of the Ring,\" readers are introduced to the peaceful land of the Shire and its unassuming protagonist, Frodo Baggins, who embarks on a perilous quest to destroy the One Ring and save Middle-earth from the dark lord Sauron. Joined by a diverse fellowship of elves, dwarves, men, and hobbits, Frodo and his companions journey through enchanted forests, treacherous mountains, and haunted ruins, facing countless dangers and adversaries along the way. \"The Two Towers\" continues the saga as Frodo and his loyal friend Samwise Gamgee venture into the heart of enemy territory, while their companions confront their own trials and challenges in the war-torn lands of Rohan and Gondor. As the forces of darkness gather and the fate of Middle-earth hangs in the balance, alliances are forged, battles are fought, and sacrifices are made in the struggle against evil. Finally, in \"The Return of the King,\" the epic climax unfolds as the armies of Middle-earth converge for the ultimate showdown between good and evil. With the fate of the world hanging in the balance, Frodo and Sam must overcome their own inner demons and confront the dark power of the One Ring in the fiery depths of Mount Doom. Illustrated with breathtaking artwork that captures the grandeur and beauty of Tolkien's mythical world, \"The Lord of the Rings: Illustrated\" is a must-have edition for fans of epic fantasy and literary adventure. With its timeless tale of courage, friendship, and the triumph of good over evil, Tolkien's masterpiece continues to captivate readers of all ages and inspire generations of storytellers.",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "PKEY:SMP2200000110725"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 1381,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=LRD9EAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=LRD9EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=LRD9EAAAQBAJ&printsec=frontcover&dq=lord+of+the+ring&hl=&cd=5&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=LRD9EAAAQBAJ&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Lord_of_the_Rings_Illustrated.html?hl=&id=LRD9EAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Lord_of_the_Rings_Illustrated-sample-epub.acsm?id=LRD9EAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Lord_of_the_Rings_Illustrated-sample-pdf.acsm?id=LRD9EAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=LRD9EAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "&quot;The Lord of the Rings: Illustrated&quot; is a captivating edition of J.R.R. Tolkien&#39;s epic fantasy trilogy, featuring &quot;The Fellowship of the Ring,&quot; &quot;The Two Towers,&quot; and &quot;The Return of the King,&quot; accompanied by stunning illustrations that bring ..."
      }
    },
    {
      "kind": "books#volume",
      "id": "rI3uzgEACAAJ",
      "etag": "3HGcIXmIapQ",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/rI3uzgEACAAJ",
      "volumeInfo": {
        "title": "The Lord of the Rings Omnibus Tie-In: The Fellowship of the Ring; The Two Towers; The Return of the King",
        "authors": [
          "J. R. R. Tolkien"
        ],
        "publisher": "William Morrow Paperbacks",
        "publishedDate": "2022-08-16",
        "description": "Begin your journey into Middle-earth. A New Legend Begins on Prime Video, in The Lord of the Rings: The Rings of Power. This single volume, paperback omnibus edition includes the three titles that comprise J.R.R. Tolkien's The Lord of the Rings: The Fellowship of the Ring, The Two Towers, and The Return of the King. Middle-earth, a world of magic and adventure. A land full of tales spanning thousands of years. Sauron, the Dark Lord, has gathered to him all the Rings of Power--the means by which he intends to rule Middle-earth. All he lacks in his plans for dominion is the One Ring--the ring that rules them all--which has fallen into the hands of the hobbit, Bilbo Baggins. In a sleepy village in the Shire, young Frodo Baggins finds himself faced with an immense task, as the Ring is entrusted to his care. He must leave his home and make a perilous journey across the realms of Middle-earth to the Crack of Doom, deep inside the territories of the Dark Lord. There he must destroy the Ring forever and foil the Dark Lord in his evil purpose.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0063271265"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780063271265"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 0,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=rI3uzgEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=rI3uzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=rI3uzgEACAAJ&dq=lord+of+the+ring&hl=&cd=6&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=rI3uzgEACAAJ&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Lord_of_the_Rings_Omnibus_Tie_In_The.html?hl=&id=rI3uzgEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=rI3uzgEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "This single volume, paperback omnibus edition includes the three titles that comprise J.R.R. Tolkien&#39;s The Lord of the Rings: The Fellowship of the Ring, The Two Towers, and The Return of the King."
      }
    },
    {
      "kind": "books#volume",
      "id": "JZ5UFcsMaKAC",
      "etag": "HOF3kCcSV6w",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/JZ5UFcsMaKAC",
      "volumeInfo": {
        "title": "The Fellowship of the Ring",
        "subtitle": "Being the First Part of the Lord of the Rings",
        "authors": [
          "John Ronald Reuel Tolkien"
        ],
        "publisher": "Mariner Books",
        "publishedDate": "2003-09-05",
        "description": "FIRST IN THE LORD OF THE RINGS TRILOGY.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0618346252"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780618346257"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 428,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 5,
        "ratingsCount": 3,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.2.2.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=JZ5UFcsMaKAC&dq=lord+of+the+ring&hl=&cd=7&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=JZ5UFcsMaKAC&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Fellowship_of_the_Ring.html?hl=&id=JZ5UFcsMaKAC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=JZ5UFcsMaKAC&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "FIRST IN THE LORD OF THE RINGS TRILOGY."
      }
    },
    {
      "kind": "books#volume",
      "id": "-22gzQEACAAJ",
      "etag": "kKdNGc/Y4xA",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/-22gzQEACAAJ",
      "volumeInfo": {
        "title": "The Return of the King",
        "subtitle": "The Lord of the Rings: Part Three",
        "authors": [
          "J.R.R. Tolkien"
        ],
        "publisher": "Del Rey",
        "publishedDate": "1986-07-12",
        "description": "The awesome conclusion to The Lord of the Rings—the greatest fantasy epic of all time—which began in The Fellowship of the Ring and The Two Towers. Nominated as one of America’s best-loved novels by PBS’s The Great American Read While the evil might of the Dark Lord Sauron swarms out to conquer all Middle-earth, Frodo and Sam struggle deep into Mordor, seat of Sauron’s power. To defeat the Dark Lord, the One Ring, ruler of the accursed Rings of Power, must be destroyed in the fires of Mount Doom. But the way is impossibly hard, and Frodo is weakening. Weighed down by the compulsion of the Ring, he begins finally to despair.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0345339738"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780345339737"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 0,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=-22gzQEACAAJ&dq=lord+of+the+ring&hl=&cd=8&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=-22gzQEACAAJ&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Return_of_the_King.html?hl=&id=-22gzQEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=-22gzQEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "The awesome conclusion to The Lord of the Rings—the greatest fantasy epic of all time—which began in The Fellowship of the Ring and The Two Towers."
      }
    },
    {
      "kind": "books#volume",
      "id": "xsOhPwAACAAJ",
      "etag": "uk38zZFI5LE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/xsOhPwAACAAJ",
      "volumeInfo": {
        "title": "The Two Towers",
        "authors": [
          "John Ronald Reuel Tolkien"
        ],
        "publishedDate": "2003",
        "description": "Frodo and his Companions of the Ring have been beset by danger during their quest to prevent the Ruling Ring from falling into the hands of the Dark Lord by destroying it in the Cracks of Doom. They lost the wizard Gandalf in a battle in the Mines of Moria, and Boromir, seduced by the power of the Ring, tried to seize it by force. While Frodo and Sam made their escape, the rest of the company was attacked by Orcs. Now they continue the journey alone down the great River Anduin…alone, that is, save for the mysterious creeping figure that follows wehrever they go.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "159413006X"
          },
          {
            "type": "ISBN_13",
            "identifier": "9781594130069"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 776,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=xsOhPwAACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=xsOhPwAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=xsOhPwAACAAJ&dq=lord+of+the+ring&hl=&cd=9&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=xsOhPwAACAAJ&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Two_Towers.html?hl=&id=xsOhPwAACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=xsOhPwAACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "&quot;Frodo and his companions of the ring have been beset by danger during their quest to prevent the ruling ring from falling into the hands of the Dark Lord by destroying it in the Cracks of Doom."
      }
    },
    {
      "kind": "books#volume",
      "id": "BsjyAAAAMAAJ",
      "etag": "T0HOFBkMAYM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/BsjyAAAAMAAJ",
      "volumeInfo": {
        "title": "The Power of the Ring",
        "subtitle": "The Spiritual Vision Behind The Lord of the Rings",
        "authors": [
          "Stratford Caldecott"
        ],
        "publisher": "The Crossroad Publishing Co.",
        "publishedDate": "2005",
        "description": "The Power of the Ring is the first book to show how Catholic themes of quest, devotion, and forgiveness are, as Tolkien said, at the very heart of The Lord of the Rings trilogy.",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "IND:30000096553213"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 168,
        "printType": "BOOK",
        "categories": [
          "Literary Criticism"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.2.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=BsjyAAAAMAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=BsjyAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=BsjyAAAAMAAJ&q=lord+of+the+ring&dq=lord+of+the+ring&hl=&cd=10&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=BsjyAAAAMAAJ&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Power_of_the_Ring.html?hl=&id=BsjyAAAAMAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=BsjyAAAAMAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "The Power of the Ring is the first book to show how Catholic themes of quest, devotion, and forgiveness are, as Tolkien said, at the very heart of The Lord of the Rings trilogy."
      }
    },
    {
      "kind": "books#volume",
      "id": "KJr9UGRh8JAC",
      "etag": "WT7sXO+rrx0",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/KJr9UGRh8JAC",
      "volumeInfo": {
        "title": "Lord of the Rings",
        "subtitle": "The Mythology of Power",
        "authors": [
          "Jane Chance"
        ],
        "publisher": "University Press of Kentucky",
        "publishedDate": "2001-10-26",
        "description": "\" With New Line Cinema's production of The Lord of the Rings film trilogy, the popularity of the works of J.R.R. Tolkien is unparalleled. Tolkien's books continue to be bestsellers decades after their original publication. An epic in league with those of Spenser and Malory, The Lord of the Rings trilogy, begun during Hitler's rise to power, celebrates the insignificant individual as hero in the modern world. Jane Chance's critical appraisal of Tolkien's heroic masterwork is the first to explore its \"mythology of power\"–that is, how power, politics, and language interact. Chance looks beyond the fantastic, self-contained world of Middle-earth to the twentieth-century parallels presented in the trilogy.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780813138015"
          },
          {
            "type": "ISBN_10",
            "identifier": "0813138019"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 126,
        "printType": "BOOK",
        "categories": [
          "Literary Criticism"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "2.4.4.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=KJr9UGRh8JAC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=KJr9UGRh8JAC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=KJr9UGRh8JAC&pg=PT80&dq=lord+of+the+ring&hl=&cd=11&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=KJr9UGRh8JAC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=KJr9UGRh8JAC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE_AND_RENTAL",
        "isEbook": true,
        "listPrice": {
          "amount": 25,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 25,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=KJr9UGRh8JAC&rdid=book-KJr9UGRh8JAC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 25000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 25000000,
              "currencyCode": "USD"
            },
            "giftable": true
          },
          {
            "finskyOfferType": 3,
            "listPrice": {
              "amountInMicros": 22500000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 20250000,
              "currencyCode": "USD"
            },
            "rentalDuration": {
              "unit": "DAY",
              "count": 180
            }
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true
        },
        "pdf": {
          "isAvailable": true
        },
        "webReaderLink": "http://play.google.com/books/reader?id=KJr9UGRh8JAC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eLord\u003c/b\u003e and Steward of the realm &quot; ( 3:31 ) . At the time that Pippin &quot; disobeys , &quot; the Steward has become quite mad ... \u003cb\u003eRing\u003c/b\u003e to Mount Doom after he believes his master is dead , and thus he saves Frodo ( and Middle - earth ) . And&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "m5OF2rFh1wgC",
      "etag": "q2No/xttzzs",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/m5OF2rFh1wgC",
      "volumeInfo": {
        "title": "The Lord of the Rings",
        "subtitle": "New Edition",
        "authors": [
          "Harold Bloom"
        ],
        "publisher": "Infobase Publishing",
        "publishedDate": "2008",
        "description": "Presents a collection of critical essays discussing Tolkien's epic fantasy.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781438113999"
          },
          {
            "type": "ISBN_10",
            "identifier": "1438113994"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 217,
        "printType": "BOOK",
        "categories": [
          "Literary Criticism"
        ],
        "averageRating": 3,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=m5OF2rFh1wgC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=m5OF2rFh1wgC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=m5OF2rFh1wgC&pg=PA67&dq=lord+of+the+ring&hl=&cd=12&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=m5OF2rFh1wgC&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Lord_of_the_Rings.html?hl=&id=m5OF2rFh1wgC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Lord_of_the_Rings-sample-epub.acsm?id=m5OF2rFh1wgC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Lord_of_the_Rings-sample-pdf.acsm?id=m5OF2rFh1wgC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=m5OF2rFh1wgC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eLords\u003c/b\u003e of Andúnië in the west of the land. Tar-Elendil&#39;s daughter&#39;s son, Valandil was the first of these \u003cb\u003eLords\u003c/b\u003e, from whom descended Amandil Last- \u003cb\u003eLord\u003c/b\u003e and his son Elendil the Tall, who escaping from the wrack of Númenor with nine ships&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "hTYmKQAACAAJ",
      "etag": "RwR4ziOnSq4",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/hTYmKQAACAAJ",
      "volumeInfo": {
        "title": "The Lord of the Rings Official Movie Guide",
        "authors": [
          "Brian Sibley"
        ],
        "publishedDate": "2001",
        "description": "The mythos, landscapes and characters that Tolkien created are nothing short of spectacular, and it has taken four decades for cinema technology to reach the necessary level of sophistication to bring them to life. Now, Peter Jackson has accomplished the extraordinary feat of making three motion pictures simultaneously to capture Tolkien's vision in its entirety. For the past several years, Peter Jackson and his team of dedicated filmmakers have been working day and night to bring J.R.R. Tolkien's masterpiece of epic adventure, The Lord of the Rings, to the screen. They have filmed all over the landscapes of New Zealand, and drawn on the skills of a small army of artists -- including digital wizards, medieval weapons experts, stone sculptors, linguists, costumers, makeup designers, blacksmiths and model builders -- together with a cast of internationally renowned actors and literally thousands of extras, to make this ambitious dream come true. And the boundaries of special effects have been pushed to, and beyond, their limits to make The Lord of the Rings Trilogy a ground-breaking and visually stunning cinematic experience. Designed as a celebration of the films, The Lord of the Rings Official Movie Guide is a lavishly illustrated behind-the-scenes guide which includes full-color photos of the cast, locations, sets, monsters and costumes, together with exclusive interviews with Peter Jackson and all the principal cast. It also features an entertaining overview of the conception, design and filming of the trilogy over the last five years, which will give the reader a privileged insight into the making of the most important movie trilogy of the decade.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0618154027"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780618154029"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 0,
        "printType": "BOOK",
        "categories": [
          "Lord of the rings, the fellowship of the ring (Motion picture)"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=hTYmKQAACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=hTYmKQAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=hTYmKQAACAAJ&dq=lord+of+the+ring&hl=&cd=13&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=hTYmKQAACAAJ&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Lord_of_the_Rings_Official_Movie_Gui.html?hl=&id=hTYmKQAACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=hTYmKQAACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Designed as a celebration of the films, The Lord of the Rings Official Movie Guide is a lavishly illustrated behind-the-scenes guide which includes full-color photos of the cast, locations, sets, monsters and costumes, together with ..."
      }
    },
    {
      "kind": "books#volume",
      "id": "I8mxughWAOEC",
      "etag": "ZTbLkoHxVVc",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/I8mxughWAOEC",
      "volumeInfo": {
        "title": "The Lord of the Rings",
        "subtitle": "Popular Culture in Global Context",
        "authors": [
          "Ernest Mathijs"
        ],
        "publisher": "Wallflower Press",
        "publishedDate": "2006",
        "description": "Bringing together leading scholars in the fields of media and film studies to explore the various strategies and implications underlying the global presence of 'Lord of the Rings', this book covers different national contexts and presents a lively and diverse combination of textual, historical and empirical study.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "1904764827"
          },
          {
            "type": "ISBN_13",
            "identifier": "9781904764823"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 368,
        "printType": "BOOK",
        "categories": [
          "Business & Economics"
        ],
        "averageRating": 5,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.11.8.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=I8mxughWAOEC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=I8mxughWAOEC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=I8mxughWAOEC&printsec=frontcover&dq=lord+of+the+ring&hl=&cd=14&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=I8mxughWAOEC&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Lord_of_the_Rings.html?hl=&id=I8mxughWAOEC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Lord_of_the_Rings-sample-pdf.acsm?id=I8mxughWAOEC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=I8mxughWAOEC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Bringing together leading scholars in the fields of media and film studies to explore the various strategies and implications underlying the global presence of &#39;Lord of the Rings&#39;, this book covers different national contexts and presents a ..."
      }
    },
    {
      "kind": "books#volume",
      "id": "vxRIEAAAQBAJ",
      "etag": "353RW8HEPpE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/vxRIEAAAQBAJ",
      "volumeInfo": {
        "title": "The Lord of the Rings Illustrated",
        "authors": [
          "J. R. R. Tolkien"
        ],
        "publisher": "HarperCollins",
        "publishedDate": "2021-11-02",
        "description": "For the first time ever, a very special edition of the J. R. R. Tolkien's classic masterpiece, The Lord of the Rings, gorgeously illustrated throughout in color by the author himself. Since it was first published in 1954, The Lord of the Rings has been a book people have treasured. Steeped in unrivaled magic and otherworldliness, Tolkien's sweeping fantasy and epic adventure has touched the hearts of young and old alike. More than 150 million copies of its many editions have been sold around the world, and occasional collectors’ editions become prized and valuable items of publishing. This one-volume, jacketed hardcover edition contains the complete text, fully corrected and reset, which is printed in red and black and features, for the very first time, thirty color illustrations, maps and sketches drawn by Tolkien himself as he composed this epic work. These include the pages from the Book of Mazarbul, marvelous facsimiles created by Tolkien to accompany the famous ‘Bridge of Khazad-dum’ chapter. Also appearing are two removable fold-out maps drawn by Christopher Tolkien revealing all the detail of Middle-earth.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780358623403"
          },
          {
            "type": "ISBN_10",
            "identifier": "0358623405"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 1240,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.2.2.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=vxRIEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=vxRIEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=vxRIEAAAQBAJ&printsec=frontcover&dq=lord+of+the+ring&hl=&cd=15&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=vxRIEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=vxRIEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 27.49,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 27.49,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=vxRIEAAAQBAJ&rdid=book-vxRIEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 27490000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 27490000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Lord_of_the_Rings_Illustrated-sample-epub.acsm?id=vxRIEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=vxRIEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "This one-volume, jacketed hardcover edition contains the complete text, fully corrected and reset, which is printed in red and black and features, for the very first time, thirty color illustrations, maps and sketches drawn by Tolkien ..."
      }
    },
    {
      "kind": "books#volume",
      "id": "Dw-NAgAAQBAJ",
      "etag": "wViT7HwdEF8",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Dw-NAgAAQBAJ",
      "volumeInfo": {
        "title": "The Lord of the Rings and Philosophy",
        "subtitle": "One Book to Rule Them All",
        "authors": [
          "Gregory Bassham",
          "Eric Bronson"
        ],
        "publisher": "Open Court",
        "publishedDate": "2013-11-13",
        "description": "The Lord of the Rings is intended to be applicable to the real world of relationships, religion, pleasure, pain, and politics. Tolkien himself said that his grand tale of wizards, orcs, hobbits, and elves was aimed at truth and good morals in the actual world. Analysis of the popular appeal of The Lord of the Rings (on websites and elsewhere) shows that Tolkien fans are hungry for discussion of the urgent moral and cosmological issues arising out of this fantastic epic story. Can political power be wielded for good, or must it always corrupt? Does technology destroy the truly human? Is it morally wrong to give up hope? Can we find meaning in chance events? In The Lord of the Rings and Philosophy, seventeen young philosophy professors, all of them ardent Tolkien fans and most of them contributors to the four earlier volumes in the Popular Culture and Philosophy series, address some of these important issues and show how clues to their solutions may be found in the imaginary world of Middle-earth. The book is divided into five sections, concerned with Power and the Ring, the Quest for Happiness, Good and Evil in Middle-earth, Time and Mortality, and the Relevance",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780812698060"
          },
          {
            "type": "ISBN_10",
            "identifier": "0812698061"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 256,
        "printType": "BOOK",
        "categories": [
          "Philosophy"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.6.6.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=Dw-NAgAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=Dw-NAgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=Dw-NAgAAQBAJ&pg=PA17&dq=lord+of+the+ring&hl=&cd=16&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=Dw-NAgAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=Dw-NAgAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=Dw-NAgAAQBAJ&rdid=book-Dw-NAgAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Lord_of_the_Rings_and_Philosophy-sample-epub.acsm?id=Dw-NAgAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Lord_of_the_Rings_and_Philosophy-sample-pdf.acsm?id=Dw-NAgAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Dw-NAgAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eRing\u003c/b\u003e is to his will and the harder it is for Frodo to go on . But when he reaches the Cracks of Doom , he is unable ... \u003cb\u003eLords\u003c/b\u003e and Ladies with all their wisdom . Their plans have gone wrong . I can&#39;t be their \u003cb\u003eRing\u003c/b\u003e - bearer . Not&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "-WSfszYqGhgC",
      "etag": "CAiMxkvL4Ck",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/-WSfszYqGhgC",
      "volumeInfo": {
        "title": "The Lord of the Rings Trilogy",
        "subtitle": "BookCaps Study Guide",
        "authors": [
          "BookCaps Study Guides Staff"
        ],
        "publisher": "BookCaps Study Guides",
        "publishedDate": "2011",
        "description": "J.R.R. Tolkien's \"The Lord of the Rings\" trilogy has been called one of the greatest fantasies of all time--but it is massive! There are hundreds of characters, plots, and settings. This study guide is a companion to the entire series. It's the perfect guide to someone who wants extra help keeping up with all the twist and characters, or who just wants a refresher while they read the series. The guide features an author biography, a plot overview, summary of major themes, summary of characters, and a summary of settings; it also has a chapter by chapter recap of the entire book. BookCap Study Guides do not contain text from the actual book, and are not meant to be purchased as alternatives to reading the book.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781610429894"
          },
          {
            "type": "ISBN_10",
            "identifier": "1610429893"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 199,
        "printType": "BOOK",
        "categories": [
          "Biography & Autobiography"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=-WSfszYqGhgC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=-WSfszYqGhgC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=-WSfszYqGhgC&pg=PT121&dq=lord+of+the+ring&hl=&cd=17&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=-WSfszYqGhgC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=-WSfszYqGhgC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 8.97,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 8.97,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=-WSfszYqGhgC&rdid=book--WSfszYqGhgC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 8970000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 8970000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Lord_of_the_Rings_Trilogy-sample-epub.acsm?id=-WSfszYqGhgC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Lord_of_the_Rings_Trilogy-sample-pdf.acsm?id=-WSfszYqGhgC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=-WSfszYqGhgC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eRing\u003c/b\u003e weighs more heavily on him the closer they draw to its Maker . Likewise , Gollum&#39;s attention seems to settle on ... \u003cb\u003elords\u003c/b\u003e outside of Mordor they find desolation unlike anything they&#39;d seen before . All looks to be burnt and&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "7t42EWzym-sC",
      "etag": "yCQfkkdAzXI",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/7t42EWzym-sC",
      "volumeInfo": {
        "title": "CliffsNotes on Tolkien's The Lord of the Rings & The Hobbit",
        "authors": [
          "Gene B Hardy"
        ],
        "publisher": "Houghton Mifflin Harcourt",
        "publishedDate": "2007-08-20",
        "description": "Join the journey through Middle-earth in the study guide of these two epic fantasies suggestive of life in medieval days, a classical battle between good and evil and the quest for a magical ring. This guide covers all four volumes of this unforgettable fantasy.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780544182592"
          },
          {
            "type": "ISBN_10",
            "identifier": "0544182596"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 49,
        "printType": "BOOK",
        "categories": [
          "Literary Criticism"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.10.11.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=7t42EWzym-sC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=7t42EWzym-sC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=7t42EWzym-sC&pg=PA15&dq=lord+of+the+ring&hl=&cd=18&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=7t42EWzym-sC&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/CliffsNotes_on_Tolkien_s_The_Lord_of_the.html?hl=&id=7t42EWzym-sC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/CliffsNotes_on_Tolkien_s_The_Lord_of_the-sample-epub.acsm?id=7t42EWzym-sC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/CliffsNotes_on_Tolkien_s_The_Lord_of_the-sample-pdf.acsm?id=7t42EWzym-sC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=7t42EWzym-sC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... ring itself to keep his promise, but he hopes somehow to regain possession of his &quot;precious&quot; during the journey. Gollum leads the hobbits across the Dead Marshes, where lie ... \u003cb\u003eLord of the Rings\u003c/b\u003e and The Hobbit © 1977 15 www.cliffs.com."
      }
    },
    {
      "kind": "books#volume",
      "id": "hper1VsSlTkC",
      "etag": "tOFfq5xQZl4",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/hper1VsSlTkC",
      "volumeInfo": {
        "title": "The Rough Guide to the Lord of the Rings",
        "authors": [
          "Angie Errigo",
          "Paul Simpson"
        ],
        "publisher": "Rough Guides",
        "publishedDate": "2003",
        "description": "A guide to the characters, places, landscapes, and artifacts of Middle-earth, profiles hobbits, men, elves, dwarves, wizards, and orcs.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "1843532751"
          },
          {
            "type": "ISBN_13",
            "identifier": "9781843532750"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 308,
        "printType": "BOOK",
        "categories": [
          "Literary Criticism"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.8.9.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=hper1VsSlTkC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=hper1VsSlTkC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=hper1VsSlTkC&pg=PA136&dq=lord+of+the+ring&hl=&cd=19&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=hper1VsSlTkC&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Rough_Guide_to_the_Lord_of_the_Rings.html?hl=&id=hper1VsSlTkC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Rough_Guide_to_the_Lord_of_the_Rings-sample-pdf.acsm?id=hper1VsSlTkC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=hper1VsSlTkC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... Ring . 1,600,000 the number of times The Fellowship Of The Ring trailer was downloaded within the first 24 hours of ... \u003cb\u003eLord Of The Rings\u003c/b\u003e every year . Jean Tang , writing for the American news and opinion. 136 LORDRINGS."
      }
    },
    {
      "kind": "books#volume",
      "id": "go5nFaiNcFMC",
      "etag": "7qGG6V7k6R0",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/go5nFaiNcFMC",
      "volumeInfo": {
        "title": "The Lord of the Rings' Metaphors",
        "publisher": "Lulu.com",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781897046975"
          },
          {
            "type": "ISBN_10",
            "identifier": "1897046979"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 224,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.3.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=go5nFaiNcFMC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=go5nFaiNcFMC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=go5nFaiNcFMC&pg=PA15&dq=lord+of+the+ring&hl=&cd=20&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=go5nFaiNcFMC&dq=lord+of+the+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Lord_of_the_Rings_Metaphors.html?hl=&id=go5nFaiNcFMC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Lord_of_the_Rings_Metaphors-sample-epub.acsm?id=go5nFaiNcFMC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Lord_of_the_Rings_Metaphors-sample-pdf.acsm?id=go5nFaiNcFMC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=go5nFaiNcFMC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eLord of the Rings\u003c/b\u003e had begun . The United States Government initiated its own atomic bomb program under the Army Corps of Engineers in June 1942 , to counter this threat . From that day on ... Lords of One Ring - the quest for power 15."
      }
    },
    {
      "kind": "books#volume",
      "id": "DdXxDwAAQBAJ",
      "etag": "XAPDPdxWI0g",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/DdXxDwAAQBAJ",
      "volumeInfo": {
        "title": "Finding God in The Lord of the Rings",
        "authors": [
          "Kurt Bruner",
          "Jim Ware"
        ],
        "publisher": "Tyndale House Publishers, Inc.",
        "publishedDate": "2021-03-02",
        "description": "The bestselling book now revised and updated with new content! Hailed as the most popular and best-loved series of the twentieth century, The Lord of the Rings trilogy is more than a great story; it’s a reflection of life’s epic quest for all of us. Examining the Christian themes in J. R. R. Tolkien’s masterwork, bestselling authors Kurt Bruner and Jim Ware reveal a rich tapestry of hope, friendship, redemption, and faith in the face of overwhelming odds. More than 200,000 copies sold Includes six new chapters and a discussion guide A helpful resource for personal study, devotions, or group discussion",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781496447500"
          },
          {
            "type": "ISBN_10",
            "identifier": "1496447506"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 161,
        "printType": "BOOK",
        "categories": [
          "Religion"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "2.3.3.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=DdXxDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=DdXxDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=DdXxDwAAQBAJ&pg=PA32&dq=lord+of+the+ring&hl=&cd=21&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=DdXxDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=DdXxDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 12.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 12.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=DdXxDwAAQBAJ&rdid=book-DdXxDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 12990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 12990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Finding_God_in_The_Lord_of_the_Rings-sample-epub.acsm?id=DdXxDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=DdXxDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eRing\u003c/b\u003e must not fall into their hands ! Take it and go ! &quot; And so , with the spoil of battle on his finger , lost to ... \u003cb\u003elords\u003c/b\u003e , and death and failure are the true paths to victory . It takes all our assumptions and expectations&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "0vxbEAAAQBAJ",
      "etag": "fZM3bsENvN4",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/0vxbEAAAQBAJ",
      "volumeInfo": {
        "title": "Smart Pop Explains Peter Jackson's The Lord of the Rings and The Hobbit Movies",
        "authors": [
          "The Editors of Smart Pop"
        ],
        "publisher": "BenBella Books",
        "publishedDate": "2022-08-30",
        "description": "Return to Middle-earth ahead of Amazon Prime's new series The Lord of the Rings: The Rings of Power If you’re feeling lost on the way to Mordor, let Smart Pop be your guide—literally, with this handy crash course into the cinematic world of Hobbits and Orcs and Elves (oh my!) It’s easy for new fans to get overwhelmed by the sprawling mythology and complexity of the six films that make up Peter Jackson’s epic trilogies. Unlike encyclopedias and guides that offer diehard J.R.R. Tolkien fans trivia, details, and deep dives into every on-screen moment, this first-of-its kind explainer is an easy, fun, and accessible introduction to the characters, plots, and interconnected stories that make up one of the greatest pop culture franchises of all time. Smart Pop has all of your burning questions covered: Who is Frodo? Why are there so many rings? When did Gandalf the Grey have time to change outfits and become Gandalf the White? Why does everyone love Gollum even though he’s a bad guy? And more! As the perfect and unauthorized resource to keep on hand when rewatching the films for the first—or tenth time, or as a primer for the upcoming live action series, Smart Pop Explains Peter Jackson’s The Lord of the Rings and The Hobbit Movies to you like no one could!",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781637741733"
          },
          {
            "type": "ISBN_10",
            "identifier": "1637741731"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 180,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "3.5.5.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=0vxbEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=0vxbEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=0vxbEAAAQBAJ&pg=PT23&dq=lord+of+the+ring&hl=&cd=22&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=0vxbEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=0vxbEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=0vxbEAAAQBAJ&rdid=book-0vxbEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Smart_Pop_Explains_Peter_Jackson_s_The_L-sample-epub.acsm?id=0vxbEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=0vxbEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eRing\u003c/b\u003e ? It sure ain&#39;t &quot; To have and to hold &quot; ! In what&#39;s described as the “ Black Speech of Mordor &quot; ( presumably ... \u003cb\u003elords\u003c/b\u003e , dwarf \u003cb\u003elords\u003c/b\u003e , and human kings had , was far more powerful . It contained some of Sauron&#39;s own essence&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "qHzDEAAAQBAJ",
      "etag": "4OsegDXaQEE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/qHzDEAAAQBAJ",
      "volumeInfo": {
        "title": "Unsung Heroes of The Lord of the Rings",
        "subtitle": "From the Page to the Screen",
        "authors": [
          "Lynnette Porter"
        ],
        "publisher": "Bloomsbury Publishing USA",
        "publishedDate": "2005-03-30",
        "description": "Most criticism of The Lord of the Rings trilogy emphasizes the most likely heroes in the tales: Aragorn, Frodo, Gandalf, and even Sam. From popular to scholarly literature, the women and smaller characters often go overlooked. But our notions of what makes a hero have altered since September 11, and sometimes the most unlikely people can come to embody all that we look up to and admire in a person. Here, Lynnette Porter examines what we mean when we talk about heroes, and for the first time illustrates the heroic qualities that can be found in the women and other beloved, though less-celebrated, characters in the The Lord of the Rings books and movies. She takes a critical look at the importance of literary and cinematic heroes in general, emphasizing the roles of Merry, Pippin, Galadriel, Eowyn, Arwen, Legolas, and Gimli, who can all be considered heroes despite their relatively smaller roles. She shows, ultimately, that our attraction to and celebration of heroes does not have to be limited to the leading man, but rather that women and youth often display essential characteristics of true heroes. Bringing together a discussion of both the books and the movies, Porter reveals for readers the heroic nature of several characters in The Lord of the Rings who have been ignored in terms of their status as heroes. Nevertheless, these female and youthful characters have received incredible popular acclaim and illustrate the shift in the way the Western movie-going public identifies and glorifies heroes. While other stars may have outshone the likes of Merry and Pippin, Arwen and Galadriel, Porter redirects the spotlight on these favorites of the books and movies to show us how the roles they play, the actions they take, and the behaviors they display are worthy of our praise and admiration. This unique and refreshing perspective adds dimension to our understanding of The Lord of the Rings phenomenon.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780313041945"
          },
          {
            "type": "ISBN_10",
            "identifier": "0313041946"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 240,
        "printType": "BOOK",
        "categories": [
          "Literary Criticism"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=qHzDEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=qHzDEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=qHzDEAAAQBAJ&pg=PA86&dq=lord+of+the+ring&hl=&cd=23&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=qHzDEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=qHzDEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 49.5,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 39.1,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=qHzDEAAAQBAJ&rdid=book-qHzDEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 49500000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 39100000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Unsung_Heroes_of_The_Lord_of_the_Rings-sample-pdf.acsm?id=qHzDEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=qHzDEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... Ring . Pippin&#39;s and Merry&#39;s close association with their respective rulers gives them a deeper under- standing of what it means to have responsibility for and power over others . 119 Again , the cousins serve as a ... \u003cb\u003eLord of the Rings\u003c/b\u003e."
      }
    },
    {
      "kind": "books#volume",
      "id": "BnCADwAAQBAJ",
      "etag": "PiK/QLcsHfY",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/BnCADwAAQBAJ",
      "volumeInfo": {
        "title": "Approaches to Teaching Tolkien's The Lord of the Rings and Other Works",
        "authors": [
          "Leslie A. Donovan"
        ],
        "publisher": "Modern Language Association",
        "publishedDate": "2015-10-01",
        "description": "A philologist and medieval scholar, J. R. R. Tolkien never intended to write immensely popular literature that would challenge traditional ideas about the nature of great literature and that was worthy of study in colleges across the world. He set out only to write a good story, the kind of story he and his friends would enjoy reading. In The Hobbit and in The Lord of the Rings, Tolkien created an entire world informed by his vast knowledge of mythology, languages, and medieval literature. In the 1960s, his books unexpectedly gained cult status with a new generation of young, countercultural readers. Today, the readership for Tolkien's absorbing secondary world--filled with monsters, magic, adventure, sacrifice, and heroism--continues to grow. Part 1 of this volume, \"Materials,\" introduces instructors to the rich array of resources available for teaching Tolkien, including editions and criticism of his fiction and scholarship, historical material on his life and times, audiovisual materials, and film adaptations of his fiction. The essays in part 2, \"Approaches,\" help instructors introduce students to critical debates around Tolkien's work, its sources, its influence, and its connection to ecology, religion, and science. Contributors draw on interdisciplinary approaches to outline strategies for teaching Tolkien in a wide variety of classroom contexts.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781603292078"
          },
          {
            "type": "ISBN_10",
            "identifier": "1603292071"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 403,
        "printType": "BOOK",
        "categories": [
          "Language Arts & Disciplines"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=BnCADwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=BnCADwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=BnCADwAAQBAJ&pg=PT150&dq=lord+of+the+ring&hl=&cd=24&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=BnCADwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=BnCADwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 37,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 29.6,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=BnCADwAAQBAJ&rdid=book-BnCADwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 37000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 29600000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Approaches_to_Teaching_Tolkien_s_The_Lor-sample-epub.acsm?id=BnCADwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Approaches_to_Teaching_Tolkien_s_The_Lor-sample-pdf.acsm?id=BnCADwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=BnCADwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003elord\u003c/b\u003e or thane: the comitatus fails, the heroic code fails, the glorious days of Beowulf himself come to an end in ... \u003cb\u003eRing\u003c/b\u003e is destroyed and the Shire saved, Frodo tells Sam, before they head to the Grey Havens, “I have been too&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "iaHLB_seHB4C",
      "etag": "bz2HXT4Tza4",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/iaHLB_seHB4C",
      "volumeInfo": {
        "title": "The Two Towers: Book Two of Lord of the Rings",
        "subtitle": "BookCaps Study Guide",
        "authors": [
          "BookCaps Study Guides Staff"
        ],
        "publisher": "BookCaps Study Guides",
        "publishedDate": "2011",
        "description": "J.R.R. Tolkien's \"The Lord of the Rings\" trilogy has been called one of the greatest fantasies of all time--but it is massive! There are hundreds of characters, plots, and settings. This study guide is a companion to the second book in the series: The Two Towers. It's the perfect guide to someone who wants extra help keeping up with all the twist and characters, or who just wants a refresher while reading the rest of the books in the series. The guide features an author biography, a plot overview, summary of major themes, summary of characters, and a summary of settings; it also has a chapter by chapter recap of the entire book. BookCap Study Guides do not contain text from the actual book, and are not meant to be purchased as alternatives to reading the book.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781610429887"
          },
          {
            "type": "ISBN_10",
            "identifier": "1610429885"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 75,
        "printType": "BOOK",
        "categories": [
          "Biography & Autobiography"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=iaHLB_seHB4C&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=iaHLB_seHB4C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=iaHLB_seHB4C&pg=PT57&dq=lord+of+the+ring&hl=&cd=25&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=iaHLB_seHB4C&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=iaHLB_seHB4C"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 3.97,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 3.97,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=iaHLB_seHB4C&rdid=book-iaHLB_seHB4C&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 3970000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 3970000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Two_Towers_Book_Two_of_Lord_of_the_R-sample-epub.acsm?id=iaHLB_seHB4C&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Two_Towers_Book_Two_of_Lord_of_the_R-sample-pdf.acsm?id=iaHLB_seHB4C&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=iaHLB_seHB4C&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eRing\u003c/b\u003e weighs more heavily on him the closer they draw to its Maker . Likewise , Gollum&#39;s attention seems to settle on ... \u003cb\u003elords\u003c/b\u003e outside of Mordor they find desolation unlike anything they&#39;d seen before . All looks to be burnt and&nbsp;..."
      }
    }
  ]
}
","status":200,"url":"https://www.googleapis.com/books/v1/volumes?q=lord+of+the+ring&maxResults=25&key=AIzaSyB0h8Chg6lBoHUDHUbOHY83sceJP_O_Ga4"},"revalidate":31536000,"tags":[]}