{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Sat, 23 Aug 2025 23:17:29 GMT","server":"ESF","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{
  "kind": "books#volumes",
  "totalItems": 1000000,
  "items": [
    {
      "kind": "books#volume",
      "id": "ynHADwAAQBAJ",
      "etag": "bJ8jgxpPIIk",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/ynHADwAAQBAJ",
      "volumeInfo": {
        "title": "The Art of Star Wars Jedi: Fallen Order Limited Edition",
        "authors": [
          "Lucasfilm Ltd",
          "Respawn Entertainment"
        ],
        "publisher": "Dark Horse Comics",
        "publishedDate": "2019-11-19",
        "description": "A full-color oversized hardcover volume that captures the development of the newest canonical and interactive addition to the Star Wars universe. A galaxy-spanning adventure awaits in Star Wars Jedi: Fallen Order, the new action-adventure videogame from Respawn Entertainment. Explore the artistic creation of Cal Kestis's quest to rebuild the Jedi Order as he learns the ways of the Force, travels to exotic worlds, and battles tyrannical foes. With detailed concept art of all-new characters, exciting weapons and equipment, and locales both familiar and new, this tome offers a behind-the-scenes look at the production of a hit game--all accompanied by intimate artists' commentary that reveals how this incredible universe is brought together. This limited edition also features a cover and slipcase inspired by ancient Jedi tomes, as well as an exclusive gallery-quality lithograph! Dark Horse Books, Lucasfilm Limited, and Respawn Entertainment are honored to present The Art of Star Wars Jedi: Fallen Order Limited Edition, guiding readers on Cal's odyssey. This uniquely designed work is sure to thrill dedicated Jedi acolytes and gamers alike.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781506717005"
          },
          {
            "type": "ISBN_10",
            "identifier": "1506717004"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 252,
        "printType": "BOOK",
        "categories": [
          "Art"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.3.3.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=ynHADwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=ynHADwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=ynHADwAAQBAJ&printsec=frontcover&dq=star+wars+fallen&hl=&cd=1&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=ynHADwAAQBAJ&dq=star+wars+fallen&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Art_of_Star_Wars_Jedi_Fallen_Order_L.html?hl=&id=ynHADwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Art_of_Star_Wars_Jedi_Fallen_Order_L-sample-pdf.acsm?id=ynHADwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=ynHADwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "This uniquely designed work is sure to thrill dedicated Jedi acolytes and gamers alike."
      }
    },
    {
      "kind": "books#volume",
      "id": "BHqWzQEACAAJ",
      "etag": "8jaNYJbLHxg",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/BHqWzQEACAAJ",
      "volumeInfo": {
        "title": "Star Wars Jedi Fallen Order-LATEST GUIDE",
        "subtitle": "Walkthrough, Strategy, Tips and Tricks and A Lot More!",
        "authors": [
          "Senadeta Klisturic"
        ],
        "publisher": "Independently Published",
        "publishedDate": "2020-06-19",
        "description": "Star Wars Jedi: Fallen Order Adds New Skins, New Game+ Mode, Challenges, and More! A lot of new content is on the way for Star Wars Jedi: Fallen Order fans. The book is full of information collected thanks to numerous hours of studying and playing the game and it is 100% correct. Use the chapters dedicated to different hidden and much needed Abilities as well as special Guides in your advantage.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9798655289918"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 110,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=BHqWzQEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=BHqWzQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=BHqWzQEACAAJ&dq=star+wars+fallen&hl=&cd=2&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=BHqWzQEACAAJ&dq=star+wars+fallen&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_Jedi_Fallen_Order_LATEST_GUIDE.html?hl=&id=BHqWzQEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=BHqWzQEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "A lot of new content is on the way for Star Wars Jedi: Fallen Order fans. The book is full of information collected thanks to numerous hours of studying and playing the game and it is 100% correct."
      }
    },
    {
      "kind": "books#volume",
      "id": "PiNgEQAAQBAJ",
      "etag": "6slqKCawhWY",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/PiNgEQAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Jedi Fallen Order Jedi Mastery Guide",
        "authors": [
          "Sebastian Hale"
        ],
        "publisher": "Shubham",
        "description": "Complete Cal Kestis’s training and rebuild the Jedi Order with the Star Wars Jedi Fallen Order Jedi Mastery Guide, taking you from Padawan to a full-fledged Jedi Knight. This guide follows Cal’s journey across Bogano, Zeffo, Kashyyyk, Dathomir, and beyond, detailing strategies to overcome Imperial forces and ancient guardians at every turn. You'll learn the fine art of lightsaber combat and Force power usage when to parry and riposte stormtroopers, how to strategically use Force Push, Pull, and Slow, and ways to deal with multiple enemies like Purge Troopers and Nightbrothers. Find out how to navigate the Metroidvania-style levels efficiently – we provide puzzle solutions for ancient tombs, shortcuts to open paths, and tips for finding every secret chest and Stim upgrade. Struggling against a challenging boss like the AT-ST, the Ninth Sister, or Taron Malicos? Our guides highlight their attack patterns and tell you when to strike for a hard-earned victory. Whether you're wall-running across Kashyyyk’s trees, customizing your lightsaber and BD-1, or unlocking new Jedi skills at meditation circles, this Jedi Mastery Guide is with you. With maps highlighting collectible Force Echoes and secrets on each planet, plus combat strategies straight from a Jedi battlemaster’s teachings, you'll complete Fallen Order feeling like a true Jedi.",
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 148,
        "printType": "BOOK",
        "categories": [
          "Games & Activities"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=PiNgEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=PiNgEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=PiNgEQAAQBAJ&pg=PT51&dq=star+wars+fallen&hl=&cd=3&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=PiNgEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=PiNgEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 0.19,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 0.19,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=PiNgEQAAQBAJ&rdid=book-PiNgEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 190000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 190000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Jedi_Fallen_Order_Jedi_Mastery-sample-epub.acsm?id=PiNgEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Jedi_Fallen_Order_Jedi_Mastery-sample-pdf.acsm?id=PiNgEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=PiNgEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eFallen\u003c/b\u003e Order is how exploration and engagement with the Force intertwine. Every secret discovered isn&#39;t just a collectible; it&#39;s a lesson. The Force is not a singular power but a complex web of connections and energies that players can&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "qSfPDwAAQBAJ",
      "etag": "tSl0vmpbYNk",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/qSfPDwAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Jedi: Fallen Order - Strategy Guide",
        "authors": [
          "GamerGuides.com"
        ],
        "publisher": "Gamer Guides",
        "description": "Join the Jedi Padawan Cal on an adventure through the galaxy and rebuild the Jedi Order to face of against the Empire, here you'll face new droids and adversaries as well as being able to collect fancy new outfits, different Lightsaber attachments and to top it all of you can give the Mantis cool paint jobs. The guide for Star Wars Jedi: Fallen Order will include all there is to see and do including a walkthrough featuring where to find all Chests, Stim Canisters, and Essence's to make Cal stronger. Including in depth guidance on how to beat every boss as well as how to conquer all Tombs. Version 1.1: - 100% Walkthrough - Puzzle Solutions - Best Skills to obtain - Secrets - Every Lightsaber Color, Upgrade and Customization Option - Trophy Guide Guide/Roadmap",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781631024337"
          },
          {
            "type": "ISBN_10",
            "identifier": "1631024337"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 294,
        "printType": "BOOK",
        "categories": [
          "Games & Activities"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.8.8.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=qSfPDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=qSfPDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=qSfPDwAAQBAJ&printsec=frontcover&dq=star+wars+fallen&hl=&cd=4&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=qSfPDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=qSfPDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 11.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 11.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=qSfPDwAAQBAJ&rdid=book-qSfPDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 11990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 11990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Jedi_Fallen_Order_Strategy_Gui-sample-epub.acsm?id=qSfPDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Jedi_Fallen_Order_Strategy_Gui-sample-pdf.acsm?id=qSfPDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=qSfPDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "The guide for Star Wars Jedi: Fallen Order will include all there is to see and do including a walkthrough featuring where to find all Chests, Stim Canisters, and Essence&#39;s to make Cal stronger."
      }
    },
    {
      "kind": "books#volume",
      "id": "1VGF0AEACAAJ",
      "etag": "vfAeYjbZzFM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/1VGF0AEACAAJ",
      "volumeInfo": {
        "title": "Star Wars Jedi fallen Order [Playstation 4].",
        "publishedDate": "2019",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "OCLC:1283735799"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 0,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "language": "de",
        "previewLink": "http://books.google.com/books?id=1VGF0AEACAAJ&dq=star+wars+fallen&hl=&cd=5&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=1VGF0AEACAAJ&dq=star+wars+fallen&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_Jedi_fallen_Order_Playstation.html?hl=&id=1VGF0AEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=1VGF0AEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "pcrRDwAAQBAJ",
      "etag": "gOH2UCIXdE8",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/pcrRDwAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars",
        "subtitle": "Jedi Fallen Order - Dark Temple",
        "authors": [
          "Matthew Rosenberg"
        ],
        "publisher": "Marvel Entertainment",
        "publishedDate": "2020-09-16",
        "description": "Collects Star Wars: Jedi Fallen Order - Dark Temple (2019) #1-5. Leading into Star Wars Jedi: Fallen Order, the third-person action-adventure Star Wars title from Lucasfilm and Star Wars: Jedi Fallen Order - Dark Temple (2019) #1-5. Respawn Entertainment, DARK TEMPLE follows Jedi Master Eno Cordova and his impulsive Padawan, Cere Junda, on their most dangerous mission yet! The Jedi Council has sent them to the remote planet Ontotho to oversee the peaceful excavation of a recently discovered temple. But Cordova and Junda soon learn that what surrounds the temple may be even more dangerous than the mysteries within it! Clandestine local resistance forces and ruthless corporate security troops wage a war for the fate of Ontotho — and the Jedi are caught in the middle! Who are the deadly Tomb Guardians, and what are they protecting? What secrets lie deep within the hidden temple? The race is on to find out!",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781302520823"
          },
          {
            "type": "ISBN_10",
            "identifier": "1302520822"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 117,
        "printType": "BOOK",
        "categories": [
          "Comics & Graphic Novels"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "2.3.3.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": true,
          "imageBubbleVersion": "13a7744773538ec9_A"
        },
        "comicsContent": true,
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=pcrRDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=pcrRDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=pcrRDwAAQBAJ&printsec=frontcover&dq=star+wars+fallen&hl=&cd=6&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=pcrRDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=pcrRDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 8.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 8.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=pcrRDwAAQBAJ&rdid=book-pcrRDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 8990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 8990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars-sample-pdf.acsm?id=pcrRDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=pcrRDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Collects Star Wars: Jedi Fallen Order - Dark Temple (2019) #1-5. Leading into Star Wars Jedi: Fallen Order, the third-person action-adventure Star Wars title from Lucasfilm and Star Wars: Jedi Fallen Order - Dark Temple (2019) #1-5."
      }
    },
    {
      "kind": "books#volume",
      "id": "scIgzgEACAAJ",
      "etag": "V8c3/iY/rXY",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/scIgzgEACAAJ",
      "volumeInfo": {
        "title": "Star Wars Jedi Fallen Order Guide - Walkthrough - Tips & Hints - And More!",
        "authors": [
          "Aso 4"
        ],
        "publishedDate": "2020-12-29",
        "description": "Informal manual for the Star Wars Jedi: Fallen Order game contains a total arrangement of data important to maximize the game. Our reading material was isolated into three enormous parts. The first of them is the game guide, which offers helpful hints toward the start, examines the subjects of battle, investigation and character improvement, just as answers to regularly posed inquiries (FAQ). You can learn, in addition to other things, how to secure new Force aptitudes, what occurs after the demise of the hero, how to mend the character, how to for all time increment the wellbeing and Force bars, or how to rapidly progress to more significant levels of involvement.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9798587878747"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 370,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=scIgzgEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=scIgzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=scIgzgEACAAJ&dq=star+wars+fallen&hl=&cd=7&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=scIgzgEACAAJ&dq=star+wars+fallen&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_Jedi_Fallen_Order_Guide_Walkth.html?hl=&id=scIgzgEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=scIgzgEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "The first of them is the game guide, which offers helpful hints toward the start, examines the subjects of battle, investigation and character improvement, just as answers to regularly posed inquiries (FAQ)."
      }
    },
    {
      "kind": "books#volume",
      "id": "Urb6EAAAQBAJ",
      "etag": "NK9qh/QgUEo",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Urb6EAAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars The Rise and Fall of the Galactic Empire",
        "authors": [
          "Chris Kempshall"
        ],
        "publisher": "Penguin",
        "publishedDate": "2024-07-09",
        "description": "Uncover a history of galactic evil. \"So this is how liberty dies—with thunderous applause.\" —Senator Padmé Amidala When Sheev Palpatine declared the birth of his new Empire, he expected it would stand for thousands of years. Instead, it lasted only 24. This is the story of how a tyrannical regime rose from the ashes of democracy, ruled the galaxy with an iron fist, and then collapsed into dust. It is a story of war and heroes. It is a story of propaganda and the power of fascism. But most of all, it is a story of normal people trying to live their lives in the face of brutal dictatorship. From the barbarity of Darth Vader's campaigns to the horrors of the Tarkin Initiative, this book offers new insights into the dark entity at the core of the Star Wars saga, with chapters covering economic strategy and political organisation, propaganda, crime and punishment, military tactics, and warfare, giving even the most expert Star Wars fans a fresh perspective on the Galactic Empire. © AND TM 2023 LUCASFILM LTD.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780593957608"
          },
          {
            "type": "ISBN_10",
            "identifier": "0593957601"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 416,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=Urb6EAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=Urb6EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=Urb6EAAAQBAJ&pg=PT400&dq=star+wars+fallen&hl=&cd=8&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=Urb6EAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=Urb6EAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 12.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 12.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=Urb6EAAAQBAJ&rdid=book-Urb6EAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 12990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 12990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_The_Rise_and_Fall_of_the_Galac-sample-epub.acsm?id=Urb6EAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_The_Rise_and_Fall_of_the_Galac-sample-pdf.acsm?id=Urb6EAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Urb6EAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003efallen\u003c/b\u003e Empire meant that tactical innovation in battle beyond that which Imperial forces had attempted was seen as almost 19 heretical . However , if the shadow of Imperial doctrine was cast upon the \u003cb\u003ewar\u003c/b\u003e , it was nothing compared with&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "MwSVzQEACAAJ",
      "etag": "4dY3Scil7z8",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/MwSVzQEACAAJ",
      "volumeInfo": {
        "title": "Star Wars : Jedi Fallen Order",
        "subtitle": "The Dark Temple",
        "publisher": "Panini Comics",
        "publishedDate": "2020-06-10",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "2809487847"
          },
          {
            "type": "ISBN_13",
            "identifier": "9782809487848"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 168,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "language": "fr",
        "previewLink": "http://books.google.com/books?id=MwSVzQEACAAJ&dq=star+wars+fallen&hl=&cd=9&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=MwSVzQEACAAJ&dq=star+wars+fallen&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_Jedi_Fallen_Order.html?hl=&id=MwSVzQEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=MwSVzQEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "Q_V3EAAAQBAJ",
      "etag": "Azhwc2VACao",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Q_V3EAAAQBAJ",
      "volumeInfo": {
        "title": "Level Up 2023: An AFK Book",
        "authors": [
          "Scholastic"
        ],
        "publisher": "Scholastic Inc.",
        "publishedDate": "2022-09-20",
        "description": "Check out the ultimate annual video game guide from Scholastic AFK! Level Up 2023 is full of the latest information on the hottest games of the last year, how they were developed, and how to beat them. Get ready for another awesome year of gaming with this ultimate guide to all your favorite games, including a definitive list of the biggest games of the past year and hottest new ones coming in 2023! Level Up 2023 is the most comprehensive guide to all the best games, tech, and streamers, featuring a bunch of the year's greatest gaming moments.This complete guide is packed with secrets, stats, tips, and tricks for all your favorite games. All games featured in AFK's Level Up 2023 are rated T for Teen or younger -- perfect for young gamers.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781338890471"
          },
          {
            "type": "ISBN_10",
            "identifier": "1338890476"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 227,
        "printType": "BOOK",
        "categories": [
          "Juvenile Nonfiction"
        ],
        "averageRating": 5,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "2.4.3.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=Q_V3EAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=Q_V3EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=Q_V3EAAAQBAJ&pg=PA81&dq=star+wars+fallen&hl=&cd=10&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=Q_V3EAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=Q_V3EAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=Q_V3EAAAQBAJ&rdid=book-Q_V3EAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Level_Up_2023_An_AFK_Book-sample-epub.acsm?id=Q_V3EAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Level_Up_2023_An_AFK_Book-sample-pdf.acsm?id=Q_V3EAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Q_V3EAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Scholastic. \u003cb\u003eSTAR WARS\u003c/b\u003e : \u003cb\u003eFALLEN\u003c/b\u003e ORDER 2 □ \u003cb\u003eStar Wars\u003c/b\u003e : \u003cb\u003eFallen\u003c/b\u003e Order was both a massive hit and the best Star Wars game in years . No surprises , then , that it&#39;s getting a sequel , featuring young Jedi Cal Kestis as he battles to escape&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "PbAeEAAAQBAJ",
      "etag": "bNB13fRKSX0",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/PbAeEAAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars: The Lightsaber Collection",
        "subtitle": "Lightsabers from the Skywalker Saga, The Clone Wars, Star Wars Rebels and more (Star Wars gift, Lightsaber book)",
        "authors": [
          "Daniel Wallace"
        ],
        "publisher": "Insight Editions",
        "publishedDate": "2020-10-20",
        "description": "\"Wallace’s strong grasp of the mythos of this universe will satisfy the die-hard Star Wars fan and serve as a fine introduction to those taking a first-time dive into one of pop culture’s most important creations.\" –The Washington Post Star Wars: The Lightsaber Collection is a comprehensive visual guide exploring the iconic and legendary lightsabers found within the Star Wars galaxy, featuring fan-favorite hilts from the Skywalker saga, Star Wars: The Clone Wars, Star Wars Rebels, comics, novels, and video games. • Own the definitive lightsaber guide. This book features the hilts of characters such as Darth Vader, Darth Maul, Yoda, Obi-Wan Kenobi, Mace Windu, Luke Skywalker, Leia Organa, Kylo Ren, Rey, Ahsoka Tano, and more. Learn about the creation and history of lightsabers from all of Star Wars, including Darth Maul’s double-bladed saber and the Darksaber. • Discover never before seen art and illustrations. Featuring photo-realistic renders of lightsabers from Star Wars animation and comics, including Ezra Bridger’s blaster-saber hybrid, the Grand Inquisitor’s spinning blades, and a new lightsaber from The High Republic, this book is a must-have for Star Wars fans. PRAISE FOR STAR WARS: THE LIGHTSABER COLLECTION \"This book is a bonanza for fans, cosplayers, and prop builders who always wanted to get an up close and personal look at lightsabers seen in the Star Wars saga.\" – SyFy Wire \"With the holidays approaching, this would make an excellent gift for any Star Wars fan in your home and extended family. It’s one of the most exquisite books I’ve had the honor of reviewing\" – WookieRadio \"Each and every page in this book is absolutely beautiful!\" – Anakin and His Angel \"It’s one of the most beautiful books I’ve had the pleasure of reviewing\" – SWNN",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781683839781"
          },
          {
            "type": "ISBN_10",
            "identifier": "1683839781"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 132,
        "printType": "BOOK",
        "categories": [
          "Art"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=PbAeEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=PbAeEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=PbAeEAAAQBAJ&pg=PA136&dq=star+wars+fallen&hl=&cd=11&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=PbAeEAAAQBAJ&dq=star+wars+fallen&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_The_Lightsaber_Collection.html?hl=&id=PbAeEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=PbAeEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Lightsabers from the Skywalker Saga, The Clone Wars, \u003cb\u003eStar Wars\u003c/b\u003e Rebels and more (\u003cb\u003eStar Wars\u003c/b\u003e gift, Lightsaber book) Daniel Wallace. CAL. KESTIS. CAL. KESTIS. The video game \u003cb\u003eStar Wars\u003c/b\u003e Jedi: \u003cb\u003eFallen\u003c/b\u003e Order stars Cal Kestis, a Jedi Padawan who&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "58WyDwAAQBAJ",
      "etag": "3qyeive1pnE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/58WyDwAAQBAJ",
      "volumeInfo": {
        "title": "Shadow Fall (Star Wars)",
        "subtitle": "An Alphabet Squadron Novel",
        "authors": [
          "Alexander Freed"
        ],
        "publisher": "Random House Worlds",
        "publishedDate": "2020-06-23",
        "description": "Alphabet Squadron’s hunt for the deadliest TIE fighters in the galaxy continues in this Star Wars adventure! News of the New Republic’s victory still reverberates through the galaxy. In its wake, the capital ships of the newly legitimized galactic government journey to the farthest stars, seeking out and crushing the remnants of imperial tyranny. But some old ghosts are harder to banish than others. And none are more dangerous than Shadow Wing. Yrica Quell’s ragtag Alphabet Squadron still leads the search for Shadow Wing, but they’re no closer to their goal—and the pressure to find their quarry before it’s too late has begun to shake them apart. Determined to finish the fight once and for all, Quell works with New Republic Intelligence’s contentious Caern Adan and the legendary General Hera Syndulla to prepare the riskiest gambit of her starfighting career—a trap for Shadow Wing that could finish the chase once and for all. But in the darkness, their enemy has evolved. Soran Keize, last of the Imperial aces, has stepped into the power vacuum at the head of Shadow Wing, reinvigorating the faltering unit in their hour of need. Once adrift in the aftershocks of the war, Keize has found meaning again, leading the lost soldiers of his unit through to safety. The only thing standing in his way? The most mismatched squadron in the New Republic Navy, led by his former mentee: the traitor Yrica Quell.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781984820051"
          },
          {
            "type": "ISBN_10",
            "identifier": "1984820052"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 380,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 5,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.6.7.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=58WyDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=58WyDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=58WyDwAAQBAJ&pg=PT129&dq=star+wars+fallen&hl=&cd=12&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=58WyDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=58WyDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 8.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 8.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=58WyDwAAQBAJ&rdid=book-58WyDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 8990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 8990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Shadow_Fall_Star_Wars-sample-epub.acsm?id=58WyDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=58WyDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar\u003c/b\u003e Destroyer&#39;s bridge and hangar - but he was already in his flight suit and the rest of his squadron was in place ... \u003cb\u003efallen\u003c/b\u003e Empire than to his unit . Soran Keize hadn&#39;t come to Cerberon to reclaim it for the Galactic Emperor or&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "xWxLEQAAQBAJ",
      "etag": "R0jxVVMzTUo",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/xWxLEQAAQBAJ",
      "volumeInfo": {
        "title": "Fallen Titans",
        "authors": [
          "Emily Williams",
          "AI"
        ],
        "publisher": "Publifye AS",
        "publishedDate": "2025-02-26",
        "description": "Fallen Titans examines the vital role of titans in shaping ancient cosmologies and religious beliefs, moving beyond the simple narrative of their defeat. It reveals how these powerful beings were integral in forming the universe, with their downfall often leading to new pantheons and belief systems. The book uniquely argues that titan myths symbolize significant shifts in cosmic power, demonstrating humanity's evolving understanding of divinity. For instance, the titanomachy, or war against the titans, is a foundational myth that provides insights into ancient moral frameworks and societal anxieties about power. The book's approach is comparative, drawing from Greek, Norse, and Near Eastern traditions to analyze the titans' roles in creation myths and their battles with subsequent generations of gods. It dissects the symbolic meaning of these conflicts and their impact on cosmic geography, revealing the rise of new divine orders and the establishment of moral codes. The book progresses through three sections, first introducing titans across different mythologies, then focusing on their battles, and finally exploring their lasting legacy in religious and philosophical traditions.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9788235225207"
          },
          {
            "type": "ISBN_10",
            "identifier": "8235225204"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 147,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.3.3.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=xWxLEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=xWxLEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=xWxLEQAAQBAJ&pg=PT111&dq=star+wars+fallen&hl=&cd=13&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=xWxLEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=xWxLEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 3.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 3.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=xWxLEQAAQBAJ&rdid=book-xWxLEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 3990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 3990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Fallen_Titans-sample-epub.acsm?id=xWxLEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Fallen_Titans-sample-pdf.acsm?id=xWxLEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=xWxLEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003efall\u003c/b\u003e of empires often draw inspiration from the themes and imagery associated with the Titans. The conflicts in franchises like \u003cb\u003eStar Wars\u003c/b\u003e or Lord of the Rings, while not explicitly referencing Titans, echo the grand scale and moral&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "VLMrAwAAQBAJ",
      "etag": "COMurhr+AEw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/VLMrAwAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars: The Rise and Fall of Darth Vader",
        "authors": [
          "Ryder Windham"
        ],
        "publisher": "Disney Electronic Content",
        "publishedDate": "2014-05-04",
        "description": "This is the legendary story of Anakin Skywalker as it's never been told before - through his eyes... From rise to fall, from light to dark, and back again.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781484717875"
          },
          {
            "type": "ISBN_10",
            "identifier": "1484717872"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 182,
        "printType": "BOOK",
        "categories": [
          "Juvenile Fiction"
        ],
        "averageRating": 5,
        "ratingsCount": 2,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.13.14.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=VLMrAwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=VLMrAwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=VLMrAwAAQBAJ&pg=PT24&dq=star+wars+fallen&hl=&cd=14&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=VLMrAwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=VLMrAwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 10.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 10.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=VLMrAwAAQBAJ&rdid=book-VLMrAwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 10990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 10990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_The_Rise_and_Fall_of_Darth_Vad-sample-epub.acsm?id=VLMrAwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=VLMrAwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003ewar\u003c/b\u003e droid ? &quot; &quot; I don&#39;t think so , &quot; Anakin said as he looked around , hoping to find some other droid parts . &quot; The metal&#39;s pretty thin - Oh , WOW ! &quot; His gaze had \u003cb\u003efallen\u003c/b\u003e on what appeared to be the decapitated head&#39;s skeletal body&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "SM20zQEACAAJ",
      "etag": "FGaLLx1qiUE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/SM20zQEACAAJ",
      "volumeInfo": {
        "title": "Star Wars Jedi - Fallen order",
        "subtitle": "XBOX ONE",
        "publishedDate": "2019",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "OCLC:1176150585"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "language": "de",
        "previewLink": "http://books.google.com/books?id=SM20zQEACAAJ&dq=star+wars+fallen&hl=&cd=15&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=SM20zQEACAAJ&dq=star+wars+fallen&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_Jedi_Fallen_order.html?hl=&id=SM20zQEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=SM20zQEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "6XVLzQEACAAJ",
      "etag": "c3xgnOEPQDA",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/6XVLzQEACAAJ",
      "volumeInfo": {
        "title": "Star Wars Jedi Fallen Order Notebook",
        "subtitle": "120 Empty Pages With Lines Size 6 X 9",
        "authors": [
          "Crazy Books"
        ],
        "publishedDate": "2020-01-10",
        "description": "Star Wars Jedi Fallen Order notebook 120 Empty Pages With Lines Size 6 X 9 you can find more in my store",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "1658588223"
          },
          {
            "type": "ISBN_13",
            "identifier": "9781658588225"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 122,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=6XVLzQEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=6XVLzQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=6XVLzQEACAAJ&dq=star+wars+fallen&hl=&cd=16&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=6XVLzQEACAAJ&dq=star+wars+fallen&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_Jedi_Fallen_Order_Notebook.html?hl=&id=6XVLzQEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=6XVLzQEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Star Wars Jedi Fallen Order notebook 120 Empty Pages With Lines Size 6 X 9 you can find more in my store"
      }
    },
    {
      "kind": "books#volume",
      "id": "Yh6mEAAAQBAJ",
      "etag": "cdQeHXcr/pI",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Yh6mEAAAQBAJ",
      "volumeInfo": {
        "title": "Level Up 2024: An AFK Book",
        "authors": [
          "Catalysed Productions"
        ],
        "publisher": "Scholastic Inc.",
        "publishedDate": "2023-09-05",
        "description": "Get ready for the ultimate annual video game guide from Scholastic AFK! Level Up 2024 is brimming with tips, tricks, and info on the years hottest games! Get set for crazy year of gaming with this mega guide to all the year's best games, not to mention a sneak peak at what's coming in 2024! Level Up 2024 is your one-stop-shop guide to all the best games, consoles, and hidden gems - you absolutely won't want to miss it! All games featured in AFK's Level Up 2024 are rated T for Teen or younger -- perfect for young gamers.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781339017419"
          },
          {
            "type": "ISBN_10",
            "identifier": "1339017415"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 210,
        "printType": "BOOK",
        "categories": [
          "Juvenile Nonfiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.4.3.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=Yh6mEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=Yh6mEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=Yh6mEAAAQBAJ&pg=PA18&dq=star+wars+fallen&hl=&cd=17&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=Yh6mEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=Yh6mEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=Yh6mEAAAQBAJ&rdid=book-Yh6mEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Level_Up_2024_An_AFK_Book-sample-epub.acsm?id=Yh6mEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Level_Up_2024_An_AFK_Book-sample-pdf.acsm?id=Yh6mEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Yh6mEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eFallen\u003c/b\u003e Order , Cal Kestis has become part of the \u003cb\u003eStar Wars\u003c/b\u003e canon , appearing in the novels \u003cb\u003eStar Wars\u003c/b\u003e : Brotherhood and \u003cb\u003eStar Wars\u003c/b\u003e Jedi : Battle Scars . Battle Scars picks up Cal&#39;s story between \u003cb\u003eFallen\u003c/b\u003e Order and Survivor . \u003cb\u003eSTAR WARS\u003c/b\u003e JEDI :&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "DbQwDwAAQBAJ",
      "etag": "8XFvyqbOYfM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/DbQwDwAAQBAJ",
      "volumeInfo": {
        "title": "Hymns for the Fallen",
        "subtitle": "Combat Movie Music and Sound After Vietnam",
        "authors": [
          "Todd Decker"
        ],
        "publisher": "Univ of California Press",
        "publishedDate": "2017-02-28",
        "description": "\"This book describes in detail how music and sound function as a constituent part of the prestige combat film's larger work of memorialization in the cultural realm of commercial cinema. As Rikke Schubart and Anne Gjelsvik note, historians must deal with 'the complexity of history, war, heroism, patriotism, memory, and the process of their representation.' Hymns for the Fallen traces an expressive sonic continuity in this 'process of representation' for serious war films. The three elements of the soundtrack--dialogue, sound effects, music--are treated in detail in the chapters which follow, although music proves to be of particular interest.\"--Site de l'éditeur.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780520282339"
          },
          {
            "type": "ISBN_10",
            "identifier": "0520282337"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 314,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=DbQwDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=DbQwDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=DbQwDwAAQBAJ&pg=PA244&dq=star+wars+fallen&hl=&cd=18&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=DbQwDwAAQBAJ&dq=star+wars+fallen&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Hymns_for_the_Fallen.html?hl=&id=DbQwDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Hymns_for_the_Fallen-sample-pdf.acsm?id=DbQwDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=DbQwDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003efall\u003c/b\u003e into two types: those with internal cadence points marking the moment of narrative closure (such as \u003cb\u003eStar Wars\u003c/b\u003e) and those without. Finally, the shift from narrative to credits can be marked in the score by two pieces of music&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "N9AEEQAAQBAJ",
      "etag": "siBjWcA3CZU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/N9AEEQAAQBAJ",
      "volumeInfo": {
        "title": "The 21st Century in 100 Games",
        "authors": [
          "Aditya Deshbandhu"
        ],
        "publisher": "Taylor & Francis",
        "publishedDate": "2024-06-20",
        "description": "The 21st Century in 100 Games is an interactive public history of the contemporary world. It creates a ludological retelling of the 21st century through 100 games that were announced, launched, and played from the turn of the century. The book analyzes them and then uses the games as a means of entry to examine both key events in the 21st century and the evolution of the gaming industry. Adopting a tri-pronged perspective — the reviewer, the academic, and an industry observer — it studies games as ludo-narratological artefacts and resituates games in a societal context by examining how they affect and are engaged with by players, reviewers, the gaming community, and the larger gaming industry. This book will be a must read for readers interested in video games, new media, digital culture (s), culture studies, and history.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781040044353"
          },
          {
            "type": "ISBN_10",
            "identifier": "1040044352"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 142,
        "printType": "BOOK",
        "categories": [
          "Games & Activities"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=N9AEEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=N9AEEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=N9AEEQAAQBAJ&pg=RA2-PT5&dq=star+wars+fallen&hl=&cd=19&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=N9AEEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=N9AEEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 46.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 37.12,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=N9AEEQAAQBAJ&rdid=book-N9AEEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 46990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 37120000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_21st_Century_in_100_Games-sample-epub.acsm?id=N9AEEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_21st_Century_in_100_Games-sample-pdf.acsm?id=N9AEEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=N9AEEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eFallen\u003c/b\u003e Order stands out from the many, many \u003cb\u003eStar Wars\u003c/b\u003e games that have been built because it allows the players to experience what it means to be a Jedi just like Rocksteady allows its players to be the Batman. \u003cb\u003eFallen\u003c/b\u003e Order&#39;s ability to&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "8DIGEQAAQBAJ",
      "etag": "kLqyFDREPg8",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/8DIGEQAAQBAJ",
      "volumeInfo": {
        "title": "A Guide to Movie Based Video Games, 2001 Onwards",
        "authors": [
          "Christopher Carton"
        ],
        "publisher": "White Owl",
        "publishedDate": "2024-08-30",
        "description": "Play Along with the Film! When gaming moved from the 16-bit era and into the exciting realm of 3D gameplay, Hollywood properties continued their journey into the interactive medium. Popular home and handheld consoles played host to ambitious titles that sought to bridge the gap between movies and video games, providing fans with scenarios that both replicated and went beyond their favorite stories. Gathered in this book are some of the biggest video games that originated from movies; some being direct adaptations and others that expanded existing universes. With 20 chapters covering over 450 games - including every Lego movie video game and franchises such as Star Wars, Aliens, Disney, Pixar and The Lord of the Rings - A Guide to Movie Based Video Games: 2001-2023 gives readers a chance to revisit and discover the ups and downs of licensed titles across two action-packed decades. Load up the reels, press start, and immerse yourself in timeless adventures!",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781399048279"
          },
          {
            "type": "ISBN_10",
            "identifier": "1399048279"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 472,
        "printType": "BOOK",
        "categories": [
          "Games & Activities"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.3.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=8DIGEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=8DIGEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=8DIGEQAAQBAJ&pg=PT46&dq=star+wars+fallen&hl=&cd=20&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=8DIGEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=8DIGEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 36.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 36.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=8DIGEQAAQBAJ&rdid=book-8DIGEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 36990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 36990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/A_Guide_to_Movie_Based_Video_Games_2001-sample-epub.acsm?id=8DIGEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/A_Guide_to_Movie_Based_Video_Games_2001-sample-pdf.acsm?id=8DIGEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=8DIGEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e kingdom for 2019&#39;s \u003cb\u003eFallen\u003c/b\u003e Order, a return to form for the single-player, Force and lightsaber-fuelled combat that was a huge part of \u003cb\u003eStar Wars\u003c/b\u003e gaming ... \u003cb\u003eStar Wars\u003c/b\u003e Jedi: \u003cb\u003eFallen\u003c/b\u003e Order \u003cb\u003eSTAR WARS\u003c/b\u003e: SQUADRONS Developer Publisher."
      }
    },
    {
      "kind": "books#volume",
      "id": "H9ZhEQAAQBAJ",
      "etag": "CUCKQ4ghvwM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/H9ZhEQAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Jedi Fallen Order Official Strategy Guide",
        "authors": [
          "Sebastian Hale"
        ],
        "publisher": "Shubham",
        "description": "Star Wars Jedi: Fallen Order Official Strategy Guide helps players explore ancient tombs, defeat Inquisitors, and reconnect with the Force. Learn precise lightsaber techniques, parry windows, and platforming solutions. Includes full maps, collectible locations, and skill tree advice for Cal Kestis’ evolution from padawan to Jedi Knight. Perfect for lore-seekers and completionists alike.",
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 148,
        "printType": "BOOK",
        "categories": [
          "Games & Activities"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=H9ZhEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=H9ZhEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=H9ZhEQAAQBAJ&printsec=frontcover&dq=star+wars+fallen&hl=&cd=21&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=H9ZhEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=H9ZhEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 0.09,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 0.09,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=H9ZhEQAAQBAJ&rdid=book-H9ZhEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 90000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 90000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Jedi_Fallen_Order_Official_Str-sample-epub.acsm?id=H9ZhEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Jedi_Fallen_Order_Official_Str-sample-pdf.acsm?id=H9ZhEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=H9ZhEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Star Wars Jedi: Fallen Order Official Strategy Guide helps players explore ancient tombs, defeat Inquisitors, and reconnect with the Force."
      }
    },
    {
      "kind": "books#volume",
      "id": "38_BzAEACAAJ",
      "etag": "nR0dUl3nFms",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/38_BzAEACAAJ",
      "volumeInfo": {
        "title": "Star Wars Jedi: Fallen Order - Unofficial Game Guide, Tips, Tricks and Hints",
        "authors": [
          "Anton Loire"
        ],
        "publishedDate": "2019-11-26",
        "description": "Before buying, please note that this is not an official Star Wars Jedi: Fallen Order Game Guide. This is a collection of Tips, Tricks and Hints that we found in the game.Star Wars - Jedi: Fallen Order is a story-driven game that unfolds in the Star Wars universe. The game takes place between episodes 3 and 4 of the movie saga, and tells how one of the surviving members of the Jedi Order, named Kal Kestis, is trying to hide from the wrath of the galactic Empire, which is gaining strength. Fallen Order is a completely solitary adventure in which there is no place for loot boxes, multiplayer and cooperative modes, as well as various \"service\" mechanics. The gameplay is similar to the mix of the Dark Souls series, Star Wars style and the open world in the spirit of metrovances.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "1711936731"
          },
          {
            "type": "ISBN_13",
            "identifier": "9781711936734"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 46,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=38_BzAEACAAJ&dq=star+wars+fallen&hl=&cd=22&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=38_BzAEACAAJ&dq=star+wars+fallen&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_Jedi_Fallen_Order_Unofficial_G.html?hl=&id=38_BzAEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=38_BzAEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Before buying, please note that this is not an official Star Wars Jedi: Fallen Order Game Guide."
      }
    },
    {
      "kind": "books#volume",
      "id": "EaADEQAAQBAJ",
      "etag": "if5CIsa8lMw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/EaADEQAAQBAJ",
      "volumeInfo": {
        "title": "50 Years of Boss Fights",
        "subtitle": "Video Game Legends",
        "authors": [
          "Daryl Baxter"
        ],
        "publisher": "White Owl",
        "publishedDate": "2024-08-30",
        "description": "50 Years of Boss Fights celebrates a fading art in modern games. Author Daryl Baxter has written about 51 bosses that have made the greatest impact, ever since the first boss debuted in 1974. Full of interviews and insights from the developers who helped made the bosses as memorable as they are, includes those who have worked on Mario 64, DOOM, Bioshock, Star Wars, Half Life and many more. Some explained how they came to be, what was scrapped, and, ultimately, if they were happy with them, looking back. The book goes into detail about the first ever boss from the start, called the Golden Dragon in dnd, which first debuted in 1974. Heralded as the first ever boss in a video game, Daryl spoke to its creators about how it came to be, and how they feel about creating a standard in games. The book sheds light on what was scrapped in other bosses, and how some bosses were so illegal, they had to be updated in rapid fashion to avoid a potential lawsuit. Full of photos that showcase how the bosses work and how to beat them, it’s a 50-year record of the best, the most challenging, and the most memorable that you may or may not have beaten so far. It’s 70,000 words that celebrate the past 50 years of bosses, while giving insight by the developers who helped make them possible.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781399013604"
          },
          {
            "type": "ISBN_10",
            "identifier": "1399013602"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 186,
        "printType": "BOOK",
        "categories": [
          "Games & Activities"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=EaADEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=EaADEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=EaADEQAAQBAJ&pg=PA76&dq=star+wars+fallen&hl=&cd=23&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=EaADEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=EaADEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 14.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 14.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=EaADEQAAQBAJ&rdid=book-EaADEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 14990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 14990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/50_Years_of_Boss_Fights-sample-pdf.acsm?id=EaADEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=EaADEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e that had been absent for years . Games such as Dark Forces and Obi - Wan were distant memories by the time we reached the PlayStation 4 and Xbox One consoles . And after a brace of ... \u003cb\u003eStar Wars\u003c/b\u003e Jedi: \u003cb\u003eFallen\u003c/b\u003e Order (2019)"
      }
    },
    {
      "kind": "books#volume",
      "id": "Hzx8zwEACAAJ",
      "etag": "f0mKYuSF5tw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Hzx8zwEACAAJ",
      "volumeInfo": {
        "title": "Star Wars Jedi - Fallen order",
        "subtitle": "PlayStation 5",
        "publishedDate": "2021",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "OCLC:1346354399"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 0,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "language": "de",
        "previewLink": "http://books.google.com/books?id=Hzx8zwEACAAJ&dq=star+wars+fallen&hl=&cd=24&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=Hzx8zwEACAAJ&dq=star+wars+fallen&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_Jedi_Fallen_order.html?hl=&id=Hzx8zwEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Hzx8zwEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "5uQdDAAAQBAJ",
      "etag": "TmunFI/1U5I",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/5uQdDAAAQBAJ",
      "volumeInfo": {
        "title": "EGods",
        "subtitle": "Faith Versus Fantasy in Computer Gaming",
        "authors": [
          "William Sims Bainbridge"
        ],
        "publisher": "Oxford University Press",
        "publishedDate": "2013-04-04",
        "description": "William Bainbridge contends that the worlds of massively multiplayer online roleplaying games provide a new perspective on the human quest, one that combines the arts and simulates most aspects of real life. The quests in gameworlds also provide meaning for human action, in terms of narratives about achieving goals by overcoming obstacles.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780199935819"
          },
          {
            "type": "ISBN_10",
            "identifier": "0199935815"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 337,
        "printType": "BOOK",
        "categories": [
          "Computers"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.3.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=5uQdDAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=5uQdDAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=5uQdDAAAQBAJ&pg=PA19&dq=star+wars+fallen&hl=&cd=25&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=5uQdDAAAQBAJ&dq=star+wars+fallen&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/EGods.html?hl=&id=5uQdDAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/EGods-sample-pdf.acsm?id=5uQdDAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=5uQdDAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e Galaxies ( in which I invested 618 hours ) , Lord of the Rings Online ( 479 hours ) , Tabula Rasa ( 305 ... \u003cb\u003eFallen\u003c/b\u003e Angel ( 46 hours ) , and Guild Wars ( 44 hours ) . Other MMOs described here lack timers , but I estimate&nbsp;..."
      }
    }
  ]
}
","status":200,"url":"https://www.googleapis.com/books/v1/volumes?q=star+wars+fallen&maxResults=25&key=AIzaSyB0h8Chg6lBoHUDHUbOHY83sceJP_O_Ga4"},"revalidate":31536000,"tags":[]}