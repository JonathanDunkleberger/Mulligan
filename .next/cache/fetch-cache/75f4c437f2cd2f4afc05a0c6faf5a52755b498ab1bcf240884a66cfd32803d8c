{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Sat, 23 Aug 2025 23:17:27 GMT","server":"ESF","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{
  "kind": "books#volumes",
  "totalItems": 1000000,
  "items": [
    {
      "kind": "books#volume",
      "id": "8znCBwAAQBAJ",
      "etag": "AtLxnpcOa/U",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/8znCBwAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars",
        "subtitle": "Episode IV - A New Hope",
        "authors": [
          "Roy Thomas"
        ],
        "publisher": "Marvel Entertainment",
        "publishedDate": "2015-05-06",
        "description": "The originalÿcomicÿadaptation of theÿgreatest space-fantasy filmÿof all is remastered for the modern age with all-new coloring byÿChris Sotomayor! Weeks beforeÿGeorge Lucas' firstÿStar Warsÿfilm hit theatres,ÿMarvel gave fans their first look atÿLuke Skywalker, boldly asking: \"Will he savethe galaxy, or destroy it?\" You may know the answer, but that doesn't spoil the fun of seeingÿStar Wars: Episode IV \u0097 A New Hopeÿlike never before including scenes that never made the silver screen! WhenPrincessÿLeiaÿis takenÿprisoner, Luke,ÿObi-Wan Kenobi,ÿHan Solo,Chewbacca,ÿC-3POÿandÿR2-D2ÿride to theÿrescueÿand take onÿDarth Vaderin his awesomeÿDeath Star. It's six against a galaxy, one that's far, far away and a long time ago!ÿMay the Force be with you, in the mighty Marvel manner! CollectingÿStar Wars (1977) #1\u00966.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781302480417"
          },
          {
            "type": "ISBN_10",
            "identifier": "1302480413"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 135,
        "printType": "BOOK",
        "categories": [
          "Comics & Graphic Novels"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.5.4.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": true,
          "imageBubbleVersion": "7888cc1df6f80d32"
        },
        "comicsContent": true,
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=8znCBwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=8znCBwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=8znCBwAAQBAJ&pg=PT26&dq=star+war&hl=&cd=1&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=8znCBwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=8znCBwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=8znCBwAAQBAJ&rdid=book-8znCBwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars-sample-pdf.acsm?id=8znCBwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=8znCBwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... War . This story has no relationship to Earth time and space . It occurs in other solar systems in another galaxy and could be happening in the future , the past , or even the present . Young Luke ... \u003cb\u003eSTAR WARS\u003c/b\u003e The Movie and the Comic."
      }
    },
    {
      "kind": "books#volume",
      "id": "GdAyEAAAQBAJ",
      "etag": "3AQGvEzmcSU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/GdAyEAAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Year By Year New Edition",
        "authors": [
          "Kristin Baver",
          "Pablo Hidalgo",
          "Daniel Wallace",
          "Ryder Windham"
        ],
        "publisher": "Penguin",
        "publishedDate": "2021-11-02",
        "description": "Discover everything you've ever wanted to know about Star Wars in this complete history of the most famous franchise in movie history. Painstakingly researched and superbly illustrated, Star WarsTM Year By Year: A Visual History, New Edition presents a unique Star Wars timeline-the full history of the amazing Star Wars phenomenon as you've never seen it before. This stunning visual journey features trivia and cultural cornerstones from director George Lucas' early life through to the iconic movie stills, comic books, novels, toys, video games, and theme parks that have spawned from five decades of seminal film making. Fully updated and expanded, this edition encompasses all nine episodes of the original, prequel, and sequel trilogies, along with the standalone movies Rogue One and Solo, and the acclaimed television series, The Mandalorian. Produced in full collaboration with Lucasfilm and written by renowned Star Wars experts, Star Wars Year by Year: A Visual History, New Edition is ideal for Star Wars fanatics and newbies alike. © & TM 2021 Lucasfilm Ltd.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780744055665"
          },
          {
            "type": "ISBN_10",
            "identifier": "0744055660"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 386,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.6.5.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=GdAyEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=GdAyEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=GdAyEAAAQBAJ&pg=PA55&dq=star+war&hl=&cd=2&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=GdAyEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=GdAyEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 14.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 14.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=GdAyEAAAQBAJ&rdid=book-GdAyEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 14990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 14990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Year_By_Year_New_Edition-sample-epub.acsm?id=GdAyEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Year_By_Year_New_Edition-sample-pdf.acsm?id=GdAyEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=GdAyEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e Digest Given the success of the film , the \u003cb\u003eStar Wars\u003c/b\u003e story is released in digest form . The story is adapted from The Adventures of Luke Skywalker , written by George Lucas . Also in 1977 ... 350 31 FEB C 02-931 THE MARVEL&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "72Z2EAAAQBAJ",
      "etag": "S0IgVH78oS0",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/72Z2EAAAQBAJ",
      "volumeInfo": {
        "title": "The History and Politics of Star Wars",
        "subtitle": "Death Stars and Democracy",
        "authors": [
          "Chris Kempshall"
        ],
        "publisher": "Taylor & Francis",
        "publishedDate": "2022-08-11",
        "description": "This book provides the first detailed and comprehensive examination of all the materials making up the Star Wars franchise relating to the portrayal and representation of real-world history and politics. Drawing on a variety of sources, including films, published interviews with directors and actors, novels, comics, and computer games, this volume explores the ways in which historical and contemporary events have been repurposed within Star Wars. It focuses on key themes such as fascism and the Galactic Empire, the failures of democracy, the portrayal of warfare, the morality of the Jedi, and the representations of sex, gender, and race. Through these themes, this study highlights the impacts of the fall of the Soviet Union, the War on Terror, and the failures of the United Nations upon the ‘galaxy far, far away’. By analysing and understanding these events and their portrayal within Star Wars, it shows how the most popular media franchise in existence aims to speak about wider contemporary events and issues. The History and Politics of Star Wars is useful for upper-level undergraduates, postgraduates, and scholars of a variety of disciplines such as transmedia studies, science fiction, cultural studies, and world history and politics in the twentieth and twenty-first centuries.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781351382700"
          },
          {
            "type": "ISBN_10",
            "identifier": "1351382705"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 205,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=72Z2EAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=72Z2EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=72Z2EAAAQBAJ&pg=PT182&dq=star+war&hl=&cd=3&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=72Z2EAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=72Z2EAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 54.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 43.44,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=72Z2EAAAQBAJ&rdid=book-72Z2EAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 54990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 43440000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_History_and_Politics_of_Star_Wars-sample-epub.acsm?id=72Z2EAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_History_and_Politics_of_Star_Wars-sample-pdf.acsm?id=72Z2EAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=72Z2EAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... War seems to tap into many of the existing foundations of \u003cb\u003eStar Wars&#39;s\u003c/b\u003e heritage.8 It would come as no surprise therefore to see notable signs of Kabul&#39;s fall appear within the galaxy in the coming years. Similarly, the movement for&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "PB57P_dOF7EC",
      "etag": "apiwsgjgytc",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/PB57P_dOF7EC",
      "volumeInfo": {
        "title": "Finding the Force of the Star Wars Franchise",
        "subtitle": "Fans, Merchandise, & Critics",
        "authors": [
          "Matthew Kapell",
          "John Shelton Lawrence"
        ],
        "publisher": "Peter Lang",
        "publishedDate": "2006",
        "description": "Textbook",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0820463337"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780820463339"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 332,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.6.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=PB57P_dOF7EC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=PB57P_dOF7EC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=PB57P_dOF7EC&pg=PA8&dq=star+war&hl=&cd=4&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=PB57P_dOF7EC&dq=star+war&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Finding_the_Force_of_the_Star_Wars_Franc.html?hl=&id=PB57P_dOF7EC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Finding_the_Force_of_the_Star_Wars_Franc-sample-pdf.acsm?id=PB57P_dOF7EC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=PB57P_dOF7EC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e franchise - if for no other reason than to strike back at an auteur who eschews populist rhetoric . But the success and the influence count too as lightning arrestors for critics . In other ways , the mythic system of \u003cb\u003eStar Wars\u003c/b\u003e&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "qa3JEAAAQBAJ",
      "etag": "l5dpj8tCs8Y",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/qa3JEAAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars: Essays Exploring a Galaxy Far, Far Away",
        "authors": [
          "Emily Strand",
          "Amy H. Sturgis"
        ],
        "publisher": "Vernon Press",
        "publishedDate": "2023-09-12",
        "description": "'Star Wars' is a global phenomenon that in 2022 celebrated its 45th year of transmedia storytelling, and it has never been more successful than it is today. More 'Star Wars' works than ever are currently available or in simultaneous development, including live-action and animated series, novels, comics, and merchandise, as well as the feature films for which the franchise is best known. 'Star Wars' fandom is worldwide, time-tested, and growing; academic interest in the franchise, both inside and outside of the classroom, is high. This accessible and multidisciplinary anthology covers topics across the full history of the franchise. With a range of essays by authors whose disciplines run from culture and religious studies to film, feminism, and philology, 'Star Wars: Essays Exploring a Galaxy Far, Far Away' speaks to academics in the field, students in the classroom, and anyone looking to broaden their understanding and deepen their appreciation for 'Star Wars'.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781648897559"
          },
          {
            "type": "ISBN_10",
            "identifier": "164889755X"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 252,
        "printType": "BOOK",
        "categories": [
          "Art"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=qa3JEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=qa3JEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=qa3JEAAAQBAJ&pg=PA23&dq=star+war&hl=&cd=5&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=qa3JEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=qa3JEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 97,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 97,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=qa3JEAAAQBAJ&rdid=book-qa3JEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 97000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 97000000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Essays_Exploring_a_Galaxy_Far-sample-pdf.acsm?id=qa3JEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=qa3JEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e and History, edited by Nancy R. Reagin and Janice Liedl, 229-254. Hoboken, NJ: John Wiley &amp; Sons, 2013. Frankel, Valerie. \u003cb\u003eStar Wars\u003c/b\u003e Meets the Eras of Feminism: Weighing All the Galaxy&#39;s Women Great and Small. Lanham, MD&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "_HpQDwAAQBAJ",
      "etag": "0UjfC1z1a6A",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/_HpQDwAAQBAJ",
      "volumeInfo": {
        "title": "The Star Wars Phenomenon in Britain",
        "subtitle": "The Blockbuster Impact and the Galaxy of Merchandise, 1977-1983",
        "authors": [
          "Craig Stevens"
        ],
        "publisher": "McFarland",
        "publishedDate": "2018-03-19",
        "description": "Among the top-grossing Hollywood blockbusters of all time, Star Wars launched one of the most successful movie and licensing franchises in history. Yet much of the film's backstory was set in Britain, where the original trilogy was made and where early efforts at tie-in merchandising were spearheaded. The author provides a detailed account of the saga's British connection, including personal recollections of fans in the UK, exclusive interviews with staff members of Palitoy who took on the challenge of producing millions of toys, and the story of how a group of writers from the underground press in London combined with Marvel comics to produce the first Star Wars expanded universe.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781476666082"
          },
          {
            "type": "ISBN_10",
            "identifier": "1476666083"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 360,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=_HpQDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=_HpQDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=_HpQDwAAQBAJ&pg=PA256&dq=star+war&hl=&cd=6&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=_HpQDwAAQBAJ&dq=star+war&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Star_Wars_Phenomenon_in_Britain.html?hl=&id=_HpQDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Star_Wars_Phenomenon_in_Britain-sample-pdf.acsm?id=_HpQDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=_HpQDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e stars axed ! &quot; revealed that Revenge of the Jedi would be the last \u003cb\u003eStar Wars\u003c/b\u003e film to feature the main cast . Another story reported on the profits made by Alec Guinness and the other cast members under the heading &quot; Making a&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "0vYYEQAAQBAJ",
      "etag": "S4MCnXP6Gug",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/0vYYEQAAQBAJ",
      "volumeInfo": {
        "title": "The Star Wars Radio Dramas",
        "subtitle": "Brian Daley and the Serialization That Saved NPR",
        "authors": [
          "Maria Jose Tenuto",
          "John Tenuto"
        ],
        "publisher": "McFarland",
        "publishedDate": "2024-07-29",
        "description": "By 1977 National Public Radio (NPR) was in trouble, plagued by too little funding and small audiences. The phenomenal success of its adaptation of Star Wars as a radio drama in 1981 gave NPR the needed ratings, publicity, and boost in donations that kept it afloat at exactly the time it was threatened the most. Most importantly, Star Wars brought a new audience to NPR. As it did in theaters, where George Lucas's films redefined movie making, so too did NPR's Star Wars forever change the artistic world of radio drama. That a radio network, dependent exclusively on audio, would find a lifeline in one of the most visually dynamic movies ever released is the stuff of irony. Utilizing new interviews with creatives such as Anthony Daniels (C-3PO), Ann Sachs (Princess Leia), Perry King (Han Solo), and director John Madden, and archival research, this book details how an unlikely alliance of academics, radio executives, Lucasfilm employees, actors, and behind-the-scenes artists banded together, despite the obstacles, to create a unique and consequential work. It is also the story of how writer Brian Daley was the fulcrum who made it all possible.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781476695631"
          },
          {
            "type": "ISBN_10",
            "identifier": "1476695636"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 214,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=0vYYEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=0vYYEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=0vYYEQAAQBAJ&pg=PA195&dq=star+war&hl=&cd=7&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=0vYYEQAAQBAJ&dq=star+war&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Star_Wars_Radio_Dramas.html?hl=&id=0vYYEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Star_Wars_Radio_Dramas-sample-pdf.acsm?id=0vYYEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=0vYYEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e 44-47 ; on Daniels , Anthony 61 , 80 ; death 142–145 ; Del Rey , original novels 37–40 , 118–119 ; editing the script during recording 80-81 ; education 34-35 , 37 ; experience with radio programs 49 ; experience with&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "pAjYCgAAQBAJ",
      "etag": "sj1tNjr7eeM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/pAjYCgAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars FAQ",
        "subtitle": "Everything Left to Know About the Trilogy That Changed the Movies",
        "authors": [
          "Mark Clark"
        ],
        "publisher": "Hal Leonard Corporation",
        "publishedDate": "2015-08-01",
        "description": "(FAQ). From the books and movies that inspired George Lucas to imagine the Star Wars universe, to early screenplay drafts that were never filmed, to short biographies of many people who made key contributions to the movies' success, Star Wars FAQ explores every aspect of the original Star Wars trilogy ( Star Wars , The Empire Strikes Back , and Return of the Jedi ). Along the way, it unearths underreported stories and illuminating minutiae often skimmed over or completely ignored in other histories of the legendary film series. Highlights include details about the Star Wars Holiday Special debacle, the Ewok TV movies, the rise of Star Wars fiction and its importance in the revival of the franchise, and the wave of Star Wars imitators and parodies that flooded theaters and TV screens in the late 1970s and early 1980s along with dozens of rare publicity stills and photographs of vintage memorabilia. Offering an original analysis of the series' enduring appeal and cultural impact, Star Wars FAQ tells a story as thrilling and action-packed as the movies themselves, with bold characters facing apparently insurmountable odds, full of frantic chases, narrow escapes, daring victories, and tragic setbacks, culminating in an unlikely triumph that changed the course of the galaxy or at least of Hollywood.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781495046087"
          },
          {
            "type": "ISBN_10",
            "identifier": "1495046087"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 400,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.3.3.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=pAjYCgAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=pAjYCgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=pAjYCgAAQBAJ&pg=PT79&dq=star+war&hl=&cd=8&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=pAjYCgAAQBAJ&dq=star+war&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_FAQ.html?hl=&id=pAjYCgAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_FAQ-sample-epub.acsm?id=pAjYCgAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_FAQ-sample-pdf.acsm?id=pAjYCgAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=pAjYCgAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e made for no more than $7.5 million, but Lucas (who had invested nearly a half-million dollars of his own money in \u003cb\u003eStar Wars\u003c/b\u003e) insisted that was impossible. Producer Alan Ladd Jr., who had championed \u003cb\u003eStar Wars\u003c/b\u003e from the beginning&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "gUJ-EQAAQBAJ",
      "etag": "SEMyzbHxm3g",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/gUJ-EQAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Multiverse",
        "authors": [
          "Carmelo Esterrich"
        ],
        "publisher": "Rutgers University Press",
        "publishedDate": "2021-08-13",
        "description": "Drawing from a full range of Star Wars media, including comics, television, children's books, and fan films, Carmelo Esterrich explores how these stories set in a galaxy far far away reflect issues that hit closer to home on such topics as authoritarianism, colonialism, xenophobia, sexuality, and gender norms.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781978815254"
          },
          {
            "type": "ISBN_10",
            "identifier": "1978815255"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 177,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.0.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=gUJ-EQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=gUJ-EQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=gUJ-EQAAQBAJ&pg=PA154&dq=star+war&hl=&cd=9&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=gUJ-EQAAQBAJ&dq=star+war&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_Multiverse.html?hl=&id=gUJ-EQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Multiverse-sample-pdf.acsm?id=gUJ-EQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=gUJ-EQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... war, 9, 88, 89, 90, 91, 92, 93, 94 Jedi Academy (novel trilogy), 13 Jedi Apprentice (junior novel series), 13, 14 ... \u003cb\u003eStar Wars\u003c/b\u003e Uncut, 125 Kessel, 13, 87 Knights of Ren, 119 Knights of the Old Republic (game), 30, 126 Kryze, Satine&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "q1-CDwAAQBAJ",
      "etag": "pWj5CnOLtGo",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/q1-CDwAAQBAJ",
      "volumeInfo": {
        "title": "The Science of Star Wars",
        "subtitle": "The Scientific Facts Behind the Force, Space Travel, and More!",
        "authors": [
          "Mark Brake",
          "Jon Chase"
        ],
        "publisher": "Simon and Schuster",
        "publishedDate": "2016-11-15",
        "description": "Discover the science behind the most popular sci-fi franchise of all time! Capturing the imagination and hearts of crowds worldwide, Star Wars is a fantastic feat of science fiction and fantasy. The Science of Star Wars addresses 50 topics that span the movies’ universe such as battle technology, alien life, space travel, etc. You’ll find fascinating explorations of the physics of Star Wars, its plausibility, and more. The perfect Star Wars gift for fans of the saga, this book addresses many unanswered, burning questions, including: How long before we get a Star Wars speeder off the ground? What exactly is the Force? How could Kylo Ren stop a blaster shot in mid-air? How could we live on a gas giant like Bespin, or a desert planet like Tatooine? Nature versus nurture: How does it play out in the making of Jedi? How much would it cost to build the Death Star? And much more! We marvel at the variety of creatures and technology and the mystery behind the force. But how much of the Star Wars world is rooted in reality? Could we see some of the extraordinary inventions materialize in our world? This uncomplicated, entertaining read makes it easy to understand how advanced physics concepts, such as wormholes and Einstein’s theory of relativity, apply to the Star Wars universe. The Science of Star Wars explains to non-technical readers how physics and fantasy might merge to allow for the possibility of interstellar travel; communication with foreign but intelligent lifeforms; human-like robots; alien planets fit for human life; weapons and spacecraft such as laser guns, light sabers, and the Millennium Falcon; and Force-like psychokinetic powers. In the 21st Century, we’re on the edge of developing much of the technology from “a long time ago, in a galaxy far, far away”… These fantasies aren’t as impossible as you might think! Written for every fan of George Lucas’s films, you don’t need to be a Jedi or an astrophysicist at NASA to appreciate all of Mark Brake and Jon Chase’s fun and informative analysis of this classic series in The Science of Star Wars. Prepare your mind to make the jump to light speed and find out about the facts behind one of our favorite modern epics!",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781944686291"
          },
          {
            "type": "ISBN_10",
            "identifier": "1944686290"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 330,
        "printType": "BOOK",
        "categories": [
          "Young Adult Nonfiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.3.3.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=q1-CDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=q1-CDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=q1-CDwAAQBAJ&pg=PT156&dq=star+war&hl=&cd=10&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=q1-CDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=q1-CDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 10.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 10.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=q1-CDwAAQBAJ&rdid=book-q1-CDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 10990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 10990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Science_of_Star_Wars-sample-epub.acsm?id=q1-CDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=q1-CDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e galaxy , in which up to twenty million species may swim , simply means that the average lifetime of an alien civilization in \u003cb\u003eStar Wars\u003c/b\u003e is twenty million years . That doesn&#39;t seem excessive , in a universe clocking in at 13,000&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "-pIvEAAAQBAJ",
      "etag": "L+ibz+H+s3I",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/-pIvEAAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Legends Epic Collection",
        "subtitle": "The Old Republic Vol. 4",
        "authors": [
          "John Jackson Miller"
        ],
        "publisher": "Marvel Entertainment",
        "publishedDate": "2021-05-26",
        "description": "Collects Star Wars: The Old Republic (2010) #1-6, Star Wars: The Old Republic - The Lost Suns (2011) #1-5, Star Wars: Lost Tribe of the Sith - Spiral (2012) #1-5; material from Star Wars Tales (1999) #17, Star Wars Visionaries (2005). The Sith Empire has returned to the galaxy! Determined to crush the Republic that sent them into exile, the Sith launch an attack on the galaxy’s Outer Rim — with their sights set on the Core Worlds, the heart of galactic unity. The Sith’s Dark Council claims to want peace — but both sides have unleashed spies that could turn the tide of war! And on a frozen world, a lost tribe of Sith cut off from the galaxy is about to have its fate!",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781302938130"
          },
          {
            "type": "ISBN_10",
            "identifier": "1302938134"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 459,
        "printType": "BOOK",
        "categories": [
          "Comics & Graphic Novels"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": true,
          "imageBubbleVersion": "09016ffb245402da_A"
        },
        "comicsContent": true,
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=-pIvEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=-pIvEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=-pIvEAAAQBAJ&pg=PT458&dq=star+war&hl=&cd=11&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=-pIvEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=-pIvEAAAQBAJ",
        "seriesInfo": {
          "kind": "books#volume_series_info",
          "shortSeriesBookTitle": "The Old Republic Vol. 4",
          "bookDisplayNumber": "4",
          "volumeSeries": [
            {
              "seriesId": "lEwrGwAAABC-VM",
              "seriesBookType": "COLLECTED_EDITION",
              "orderNumber": 4,
              "issue": [
                {
                  "issueDisplayNumber": "1"
                },
                {
                  "issueDisplayNumber": "2"
                },
                {
                  "issueDisplayNumber": "3"
                },
                {
                  "issueDisplayNumber": "4"
                },
                {
                  "issueDisplayNumber": "5"
                },
                {
                  "issueDisplayNumber": "6"
                },
                {
                  "issueDisplayNumber": "17"
                }
              ]
            }
          ]
        }
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=-pIvEAAAQBAJ&rdid=book--pIvEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Legends_Epic_Collection-sample-pdf.acsm?id=-pIvEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=-pIvEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... war ! And on a frozen world , a lost tribe of Sith cut off from the galaxy is about to have its fate changed forever ... \u003cb\u003eSTAR WARS\u003c/b\u003e : THE OLD REPUBLIC # 1-6 , \u003cb\u003eSTAR WARS\u003c/b\u003e : THE OLD REPUBLIC THE LOST SUNS # 1-5 , \u003cb\u003eSTAR WARS\u003c/b\u003e : LOST TRIBE&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "GiY1DQAAQBAJ",
      "etag": "IDAKYjCqS7Y",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/GiY1DQAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Legends Epic Collection",
        "subtitle": "The Original Marvel Years Vol. 1",
        "authors": [
          "Various"
        ],
        "publisher": "Marvel Entertainment",
        "publishedDate": "2016-10-26",
        "description": "May the Force be with you, in the mighty Marvel manner! The classic original Star Wars comic-book series begins with an action-packed adaptation of Episode IV A New Hope, then continues the story of Luke Skywalker and his rebel friends as they fight on against the Empire in the dark shadow of Darth Vader! New planets and new perils await - like the Cloud Riders, the Behemoth and the space pirate Crimson Jack. Han and Chewie need six allies to make eight against a world - and one of them will be cult hero Jaxxon! Luke and the droids end up trapped on a Doomworld! And the Big Game will pit rebel against rebel! COLLECTING: STAR WARS (1977) 1-23; MATERIAL FROM PIZZAZZ 1-16.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781302493912"
          },
          {
            "type": "ISBN_10",
            "identifier": "1302493914"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 509,
        "printType": "BOOK",
        "categories": [
          "Comics & Graphic Novels"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.3.3.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": true,
          "imageBubbleVersion": "d92275ad91b3de2b"
        },
        "comicsContent": true,
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=GiY1DQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=GiY1DQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=GiY1DQAAQBAJ&pg=PT502&dq=star+war&hl=&cd=12&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=GiY1DQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=GiY1DQAAQBAJ",
        "seriesInfo": {
          "kind": "books#volume_series_info",
          "shortSeriesBookTitle": "The Original Marvel Years Vol. 1",
          "bookDisplayNumber": "1",
          "volumeSeries": [
            {
              "seriesId": "ZE0rGwAAABBOVM",
              "seriesBookType": "COLLECTED_EDITION",
              "orderNumber": 1
            }
          ]
        }
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 29.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 29.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=GiY1DQAAQBAJ&rdid=book-GiY1DQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 29990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 29990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Legends_Epic_Collection-sample-pdf.acsm?id=GiY1DQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=GiY1DQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "The Original Marvel Years Vol. 1 Various. Luok \u003cb\u003eSTAR WARS\u003c/b\u003e TIME IS AN ALL BUT MEANINGLESS CONCEPT IN THE VAST SEA OF ... WAR - FLEET AGAINST THEM . HAVE ! AND THAT&#39;S NOT ALL-- Issue # ។ COK \u003cb\u003eSTAR WARS\u003c/b\u003e OH , DON&#39;T BE SUCH A WORRY&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "Y_CsmOvHzHAC",
      "etag": "90wQhVRMGlU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Y_CsmOvHzHAC",
      "volumeInfo": {
        "title": "Annihilation: Star Wars Legends (The Old Republic)",
        "authors": [
          "Drew Karpyshyn"
        ],
        "publisher": "Random House Worlds",
        "publishedDate": "2012-11-13",
        "description": "NEW YORK TIMES BESTSELLER • Join Republic spy Theron Shan as he faces off against the Sith Empire itself in this epic installment of The Old Republic. Light side, dark side—these are just empty words. . . . There are only two sides I care about: us and them. Republic or Empire! The Sith Empire is in flux. The Emperor is missing, presumed dead, and an ambitious Sith lord’s attempt to seize the throne has ended fatally. Still, Darth Karrid, commander of the fearsome Imperial battle cruiser Ascendant Spear, continues her relentless efforts to achieve total Sith domination of the galaxy. But Karrid’s ruthless determination is more than matched by the steely resolve of Theron Shan, whose unfinished business with the Empire could change the course of the war for good. Though the son of a Jedi master, Theron does not wield the Force—but, like his renowned mother, he has the spirit of rebellion in his blood. As a top covert agent for the Republic, he struck a crucial blow against the Empire by exposing and destroying a Sith superweapon arsenal—which makes him the ideal operative for a daring and dangerous mission to end Ascendant Spear’s reign of terror. Joined by hot-headed smuggler Teff’ith, with whom he has an inexplicable bond, and wise Jedi warrior Gnost-Dural, Darth Karrid’s former master, Theron must match wits and weapons with a battle-tested crew of the most cold-blooded disciples of the Dark Side. But time is running brutally short. And if they don’t seize their one chance to succeed, they will surely have countless opportunities to die.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780345535672"
          },
          {
            "type": "ISBN_10",
            "identifier": "0345535677"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 341,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "3.11.11.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=Y_CsmOvHzHAC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=Y_CsmOvHzHAC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=Y_CsmOvHzHAC&pg=PT367&dq=star+war&hl=&cd=13&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=Y_CsmOvHzHAC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=Y_CsmOvHzHAC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 8.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 8.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=Y_CsmOvHzHAC&rdid=book-Y_CsmOvHzHAC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 8990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 8990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Annihilation_Star_Wars_Legends_The_Old_R-sample-epub.acsm?id=Y_CsmOvHzHAC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Y_CsmOvHzHAC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Drew Karpyshyn. Introduction. to. the. REBELLION. Era. (0–5. YEARS. AFTER. STAR. WARS: A. NEW. HOPE). This is the period of the classic \u003cb\u003eStar Wars\u003c/b\u003e movie trilogy—A New Hope, The Empire Strikes Back, and Return of the Jedi—in which a ragtag&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "BFGSCwAAQBAJ",
      "etag": "MczQHOd+5fk",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/BFGSCwAAQBAJ",
      "volumeInfo": {
        "title": "The Old Republic Series: Star Wars Legends 4-Book Bundle",
        "subtitle": "Fatal Alliance, Deceived, Revan, Annihilation",
        "authors": [
          "Sean Williams",
          "Paul S. Kemp",
          "Drew Karpyshyn"
        ],
        "publisher": "Del Rey",
        "publishedDate": "2016-03-15",
        "description": "Not just an epic videogame from BioWare and LucasArts, Star Wars: The Old Republic™ spawned a New York Times bestselling series of novels—which are now together in one electrifying ebook bundle. Fatal Alliance, Deceived, Revan, and Annihilation tell four daringly original stories of Jedi and Sith that embody this unique, beloved era in Star Wars Legends storytelling. . . . FATAL ALLIANCE by Sean Williams From across the galaxy they’ve come: a Jedi Padawan, an ex-trooper drummed out of the Republic’s elite Blackstar Squad, and a mysterious Mandalorian. An extraordinary auction has drawn them all together, in quest of a prize whose value may be the wealth of a world itself. None intend to leave empty-handed. All have secrets, desires, and schemes. And nothing could ever unite them as allies—except the truth about the deadly danger of the object they covet. But can Sith and Jedi, Republic and Empire, join as one against the certain doom of the galaxy? DECEIVED by Paul S. Kemp A Sith warrior to rival the most sinister of the Order’s Dark Lords, Darth Malgus brought down the Jedi Temple on Coruscant in a brutal assault that shocked the galaxy. But if war crowned him the darkest of Sith heroes, peace will transform him into something far more heinous—something Malgus would never want to be but cannot stop becoming, any more than he can stop the rogue Jedi fast approaching. Her name is Aryn Leneer—and the lone Jedi Knight that Malgus cut down in the fierce battle for the Jedi Temple was her Master. REVAN by Drew Karpyshyn Hero, traitor, conqueror, villain, savior—Revan has been all of these. He left Coruscant a Jedi, on a mission to defeat the Mandalorians. He returned a Sith disciple, bent on destroying the Republic. The Jedi Council gave Revan his life back, but the price of redemption was the loss of his memories. All that’s left are nightmares—and deep, abiding fear. One thing he’s certain of: Something very dark is plotting against the Republic. With no idea how to identify the threat, let alone stop it, Revan may be doomed to fail. But only death can stop him from trying. ANNIHILATION by Drew Karpyshyn After his triumphant destruction of a Sith superweapon arsenal, covert agent Theron Shan is recruited for an even more dangerous mission. A power struggle has the Empire in flux, but Darth Karrid remains bent on total domination, using a fearsome Imperial cruiser in her reign of terror. Now, joined by a hotheaded smuggler and Karrid’s former Jedi Master, Theron must match wits and weapons with a crew of the most cold-blooded dark side disciples. And if they don’t seize their one chance to succeed, they will have countless opportunities to die.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781101968765"
          },
          {
            "type": "ISBN_10",
            "identifier": "1101968761"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 1440,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.3.3.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=BFGSCwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=BFGSCwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=BFGSCwAAQBAJ&pg=PT1553&dq=star+war&hl=&cd=14&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=BFGSCwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=BFGSCwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 24.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 24.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=BFGSCwAAQBAJ&rdid=book-BFGSCwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 24990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 24990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Old_Republic_Series_Star_Wars_Legend-sample-epub.acsm?id=BFGSCwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=BFGSCwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... STAR. WARS: A. NEW. HOPE). This is the period of the classic \u003cb\u003eStar Wars\u003c/b\u003e movie trilogy—A New Hope, The Empire Strikes Back, and Return of the Jedi—in which a ragtag band of Rebels battles the Empire, and Luke Skywalker learns the ways of the&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "6jI5DwAAQBAJ",
      "etag": "rev5Ojr37LU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/6jI5DwAAQBAJ",
      "volumeInfo": {
        "title": "Chaos War",
        "subtitle": "Avengers",
        "authors": [
          "Marvel Comics"
        ],
        "publisher": "Marvel Entertainment",
        "publishedDate": "2016-06-16",
        "description": "Collects Chaos War: Dead Avengers #1-3, Chaos War: Ares #1, Chaos War: Thor #1-2 And Material From X-Men: Curse Of The Mutants Spotlight. The Vision. Captain Mar-Vell. Yellowjacket. Deathcry. Swordsman. Dr. Druid. All lost their lives in the line of duty - or in disgrace. When Earth's Mightiest Heroes are themselves laid low in the carnage of the CHAOS WAR, and the graves give up their dead, these six find themselves mysteriously returned to reassemble against the Chaos King's most fearsome ally - one of the Avengers' greatest foes! It's a final chance at redemption and a second life - and an opportunity to prove, once and for all, that they're worthy of the name Avengers. Plus: Ares defeated Chaos King once before, but now the God of War is dead and armed only with his love for his lost son. How can he stop the living oblivion Chaos King has become, even with the help of Zeus and Hera? And at what price comes defeat? And in the midst of the epic battle raging through CHAOS WAR, Thor squares off against a foe who may be the most powerful he's ever faced: the alien god known only as Glory! This powerhouse has his sites set on helping Chaos King destroy all reality, so what hope does a simple Thunder God have of stopping him?",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781302490201"
          },
          {
            "type": "ISBN_10",
            "identifier": "1302490206"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 491,
        "printType": "BOOK",
        "categories": [
          "Comics & Graphic Novels"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.2.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": true,
          "imageBubbleVersion": "48e0e20214ab12d4_A"
        },
        "comicsContent": true,
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=6jI5DwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=6jI5DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=6jI5DwAAQBAJ&pg=PT4&dq=star+war&hl=&cd=15&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=6jI5DwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=6jI5DwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 10.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 10.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=6jI5DwAAQBAJ&rdid=book-6jI5DwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 10990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 10990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Chaos_War-sample-pdf.acsm?id=6jI5DwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=6jI5DwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eSTAR WARS\u003c/b\u003e: SPLINTER OF THE MIND&#39;S EYE #2, FEBRUARY 1996 \u003cb\u003eSTAR WARS\u003c/b\u003e: SPLINTER OF THE MIND&#39;S EYE #3, APRIL 1996 \u003cb\u003eSTAR WARS\u003c/b\u003e: SPLINTER OF THE MIND&#39;S EYE #4, JUNE 1996 \u003cb\u003eSTAR WARS\u003c/b\u003e: SHADOW STALKER, SEPTEMBER 1997 \u003cb\u003eSTAR WARS\u003c/b\u003e: REBEL HEIST #1&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "zLH1OYuf97wC",
      "etag": "pEiYZllUeH8",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/zLH1OYuf97wC",
      "volumeInfo": {
        "title": "Postcolonial America",
        "authors": [
          "C. Richard King"
        ],
        "publisher": "University of Illinois Press",
        "publishedDate": "2000",
        "description": "Scholars from a wide array of disciplines describe and debate postcolonialism as it applies to America in this authoritative and timely collection. Investigating topics such as law and public policy, immigration and tourism, narratives and discourses, race relations, and virtual communities, Postcolonial America clarifies and challenges prevailing conceptualizations of postcolonialism and accepted understandings of American culture. Advancing multiple, even conflicted visions of postcolonial America, this important volume interrogates postcolonial theory and traces the emergence and significance of postcolonial practices and precepts in the United States. Contributors discuss how the unique status of the United States as the colony that became a superpower has shaped its sense of itself. They assess the global networks of inequality that have displaced neocolonial systems of conquest, exploitation, and occupation. They also examine how individuals and groups use music, the Internet, and other media to reconfigure, reinvent, and resist postcoloniality in American culture. Candidly facing the inherent contradictions of \"the American experience,\" this collection demonstrates the patterns, connections, and histories characteristic of postcoloniality in America and initiates important discussions about how these conditions might be changed.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0252068521"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780252068522"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 380,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.5.5.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=zLH1OYuf97wC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=zLH1OYuf97wC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=zLH1OYuf97wC&pg=PA32&dq=star+war&hl=&cd=16&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=zLH1OYuf97wC&dq=star+war&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Postcolonial_America.html?hl=&id=zLH1OYuf97wC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Postcolonial_America-sample-pdf.acsm?id=zLH1OYuf97wC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=zLH1OYuf97wC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... war enabled the United States to act out the Manichaean battle be- tween God and the Devil , good and evil , as the ... \u003cb\u003eStar Wars\u003c/b\u003e for his Manichaean descrip- tion of the USSR as the Evil Empire . Around the same time , Reagan&#39;s&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "Pw6cDwAAQBAJ",
      "etag": "MAsT1KZdkCs",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Pw6cDwAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars",
        "subtitle": "Age Of Rebellion - Heroes",
        "authors": [
          "Greg Pak",
          "Marc Guggenheim",
          "Jon Adams"
        ],
        "publisher": "Marvel Entertainment",
        "publishedDate": "2019-08-07",
        "description": "Collects Star Wars: Age Of Rebellion - Han Solo, Lando Calrissian, Luke Skywalker And Princess Leia, and material from Star Wars: Age Of Rebellion Special. The Age of Star Wars - an epic series of adventures uniting your favorite characters from all eras - reaches the heroic icons of the Original Trilogy! Han Solo is ready to take his reward and return to life as a scoundrel - until a certain kid he knows asks for one last favor! Former smuggler Lando Calrissian's dream of a life of leisure and luxury depends on one final scam! Luke Skywalker faces his first temptation - will he give in to the dark side? Leia takes on the identity of bounty hunter Boushh to rescue Han from Jabba the Hutt - but first, she must prove herself to Bossk! Plus: Jedi Master Yoda! And ace pilots Biggs Darklighter and Jek Porkins!",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781302514563"
          },
          {
            "type": "ISBN_10",
            "identifier": "1302514563"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 133,
        "printType": "BOOK",
        "categories": [
          "Comics & Graphic Novels"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.2.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": true,
          "imageBubbleVersion": "d736abbc4fb92a83_A"
        },
        "comicsContent": true,
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=Pw6cDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=Pw6cDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=Pw6cDwAAQBAJ&pg=PT27&dq=star+war&hl=&cd=17&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=Pw6cDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=Pw6cDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 6.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 6.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=Pw6cDwAAQBAJ&rdid=book-Pw6cDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 6990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 6990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars-sample-pdf.acsm?id=Pw6cDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Pw6cDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Age Of Rebellion - Heroes Greg Pak, Marc Guggenheim, Jon Adams. \u003cb\u003eSTAR WARS\u003c/b\u003e AGE OF REBELLION \u003cb\u003eSTAR WARS\u003c/b\u003e AGE OF REBELLION HAN SOLO LLL TERRY For. AGE OF REBELLION Princess Leia – Our Princess , Our Hero By Bria LaVorgna Han Solo traveled the&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "pzvTCwAAQBAJ",
      "etag": "BO95ti3zKgk",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/pzvTCwAAQBAJ",
      "volumeInfo": {
        "title": "The Rise of the Empire: Star Wars",
        "subtitle": "Featuring the novels Star Wars: Tarkin, Star Wars: A New Dawn, and 3 all-new short stories",
        "authors": [
          "James Luceno",
          "John Jackson Miller"
        ],
        "publisher": "Random House Worlds",
        "publishedDate": "2015-10-06",
        "description": "Witness the rise of the Empire with these two thrilling Star Wars novels—plus exclusive short stories by Melissa Scott, John Jackson Miller, and Jason Fry! TARKIN “Compelling . . . The villains of Star Wars are as much fun as the good guys.”—New York Daily News Under Governor Wilhuff Tarkin’s guidance, an ultimate weapon of unparalleled destruction—the so-called Death Star—moves ever closer to becoming a terrifying reality. Until then, insurgency remains a genuine threat. Guerrilla attacks by an elusive band of freedom fighters must be countered with swift and brutal action—a mission the Emperor entrusts to his most formidable agents: Darth Vader, the fearsome new Sith enforcer, and Tarkin, whose tactical cunning and cold-blooded efficiency will pave the way for the Empire’s supremacy—and its enemies’ extinction. A NEW DAWN Foreword by Dave Filoni “A story with pacing and dialogue that feels like classic Star Wars.”—Nerdist Ever since the Jedi were marked for death, Kanan Jarrus has devoted himself to staying alive rather than serving the Force. So when he discovers a conflict brewing between Imperial forces and desperate revolutionaries, he’s not about to get caught in the crossfire. Then the brutal death of a friend forces him to choose between bowing down to fear or standing up to fight. But Jarrus won’t be fighting alone. Soon he is joined by Hera Syndulla—a mysterious agent provocateur with motives of her own—in challenging the Empire for the sake of a world and its people.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781101965030"
          },
          {
            "type": "ISBN_10",
            "identifier": "1101965037"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 722,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.3.2.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=pzvTCwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=pzvTCwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=pzvTCwAAQBAJ&pg=PA686&dq=star+war&hl=&cd=18&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=pzvTCwAAQBAJ&dq=star+war&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Rise_of_the_Empire_Star_Wars.html?hl=&id=pzvTCwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=pzvTCwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Featuring the novels \u003cb\u003eStar Wars\u003c/b\u003e: Tarkin, \u003cb\u003eStar Wars\u003c/b\u003e: A New Dawn, and 3 all-new short stories James Luceno, John Jackson Miller. matter anymore . The thrum beneath her feet rose again , and a mo- ment later , the stars elongated into&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "V4ZcDwAAQBAJ",
      "etag": "1wdbRO77XGM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/V4ZcDwAAQBAJ",
      "volumeInfo": {
        "title": "Damaged Magazine 04",
        "subtitle": "English",
        "publisher": "AK-INTERACTIVE, S.L.",
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 76,
        "printType": "BOOK",
        "categories": [
          "Art"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=V4ZcDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=V4ZcDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=V4ZcDwAAQBAJ&pg=PA58&dq=star+war&hl=&cd=19&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=V4ZcDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=V4ZcDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 3.57,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 3.57,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=V4ZcDwAAQBAJ&rdid=book-V4ZcDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 3570000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 3570000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Damaged_Magazine_04-sample-pdf.acsm?id=V4ZcDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=V4ZcDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... WARS \u003cb\u003eSTAR WARS STAR WARS STAR WARS STAR WARS\u003c/b\u003e AR WARS \u003cb\u003eSTAR WARS STAR WARS STAR WARS STAR WARS\u003c/b\u003e WARS \u003cb\u003eSTAR WARS STAR WARS STAR WARS STAR WARS\u003c/b\u003e AR WThis custom Spedder belongs to REY , a scrap \u003cb\u003eSTAR WARS\u003c/b\u003e WAR dealer . The machine is perfect for&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "vBnJ3rEvzLYC",
      "etag": "3slJOO4tmhk",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/vBnJ3rEvzLYC",
      "volumeInfo": {
        "title": "Space and Spatial Analysis in Archaeology",
        "authors": [
          "University of Calgary. Archaeological Association. Conference",
          "Elizabeth C. Robertson"
        ],
        "publisher": "UNM Press",
        "publishedDate": "2006",
        "description": "The archaeology of space and place is examined in this selection of papers from the 34th annual Chacmool Archaeological Conference.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0826340229"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780826340221"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 434,
        "printType": "BOOK",
        "categories": [
          "Mathematics"
        ],
        "averageRating": 5,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.6.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=vBnJ3rEvzLYC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=vBnJ3rEvzLYC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=vBnJ3rEvzLYC&pg=PA360&dq=star+war&hl=&cd=20&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=vBnJ3rEvzLYC&dq=star+war&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Space_and_Spatial_Analysis_in_Archaeolog.html?hl=&id=vBnJ3rEvzLYC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Space_and_Spatial_Analysis_in_Archaeolog-sample-pdf.acsm?id=vBnJ3rEvzLYC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=vBnJ3rEvzLYC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar war\u003c/b\u003e &quot; defeat of Naranjo on December 24 , A.D. 631 , Naranjo Hieroglyphic Stairway ( redrawn by author after Martin and Grube 2000 : 106 ) . and careful strategizing such as this might also have included the selection of appropriate&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "s5HiDwAAQBAJ",
      "etag": "cIDTtTnKcBs",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/s5HiDwAAQBAJ",
      "volumeInfo": {
        "title": "Resist and Persist",
        "subtitle": "Essays on Social Revolution in 21st Century Narratives",
        "authors": [
          "Amanda Firestone",
          "Leisa A. Clark"
        ],
        "publisher": "McFarland",
        "publishedDate": "2020-05-25",
        "description": "To many, the world appears to be in a state of dangerous change. News and fictional media alike report that these are dark times, and narratives of social resistance imbue many facets of Western culture. The new essays making up this collection examine different events and themes of the 2010s that readily acknowledge the struggling state of things. Crucially, these essays look to the resistance and political activism of communities that seek to make long-reaching and institutional changes in the world through a diverse group of media texts. They scrutinize how a society relates to injustices and how individuals enact a desire for change. The authors analyze a broad range of works such as texts as Awake: A Dream from Standing Rock, Black Panther, The Death of Stalin, Get Out, Jessica Jones, Hamilton, The Shape of Water, and Star Wars: The Last Jedi. By digging into these and other works, as well as historic events, the contributors explicate the soul-deep necessity of pushing back against injustice, whether personal or cultural.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781476676678"
          },
          {
            "type": "ISBN_10",
            "identifier": "1476676674"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 213,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=s5HiDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=s5HiDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=s5HiDwAAQBAJ&pg=PA196&dq=star+war&hl=&cd=21&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=s5HiDwAAQBAJ&dq=star+war&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Resist_and_Persist.html?hl=&id=s5HiDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Resist_and_Persist-sample-pdf.acsm?id=s5HiDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=s5HiDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e : The Last Jedi Takes a Side in the Class War . ” The Intercept , 24 Dec. 2017. https://theintercept.com/2017/12/24/\u003cb\u003estar\u003c/b\u003e-\u003cb\u003ewars\u003c/b\u003e-last-jedi-class-politics/ . Bloch , Ernst . The Principle of Hope [ 1959 ] . Basil Blackwell&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "dntoT_MdGWsC",
      "etag": "rLL0LhVInIE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/dntoT_MdGWsC",
      "volumeInfo": {
        "title": "Ancient Mesoamerican Warfare",
        "authors": [
          "M. Kathryn Brown",
          "Travis W. Stanton"
        ],
        "publisher": "Bloomsbury Publishing PLC",
        "publishedDate": "2003",
        "description": "Collection of articles providing new research on warfare in ancient Maya and other Mesoamerican societies based on archaeological, ethnohistorical, and linguistic evidence",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "075910283X"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780759102835"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 388,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "7.13.13.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=dntoT_MdGWsC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=dntoT_MdGWsC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=dntoT_MdGWsC&pg=PA173&dq=star+war&hl=&cd=22&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=dntoT_MdGWsC&dq=star+war&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Ancient_Mesoamerican_Warfare.html?hl=&id=dntoT_MdGWsC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Ancient_Mesoamerican_Warfare-sample-pdf.acsm?id=dntoT_MdGWsC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=dntoT_MdGWsC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar\u003c/b\u003e - \u003cb\u003ewar\u003c/b\u003e 9.6.10.14.15 25 Yaxchilan Lacanha Capture 9.9.13.4.4 42 Caracol Naranjo Hubi 9.9.14.3.5 42 Caracol Naranjo Hubi 9.9.18.16.3 42 Caracol Naranjo \u003cb\u003eStar\u003c/b\u003e - \u003cb\u003ewar\u003c/b\u003e 9.10.3.2.12 42 Caracol Naranjo \u003cb\u003eStar\u003c/b\u003e - \u003cb\u003ewar\u003c/b\u003e 9.11.1.16.3 153 Palenque&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "pDMRdxLocsUC",
      "etag": "WeAL+jJM5Ds",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/pDMRdxLocsUC",
      "volumeInfo": {
        "title": "Star Wars and Philosophy",
        "subtitle": "More Powerful Than You Can Possibly Imagine",
        "authors": [
          "Kevin S. Decker"
        ],
        "publisher": "ReadHowYouWant.com",
        "publishedDate": "2010-10",
        "description": "Sensed a disturbance in The Force lately? This is whats been setting your midi-chlorians tingling. Seventeen Jedi adepts got together to probe the deeper reaches of the Star Wars epic. A hazardous quest philosophy is more risky than not letting a ...",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781459601017"
          },
          {
            "type": "ISBN_10",
            "identifier": "1459601017"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 386,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.3.4.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=pDMRdxLocsUC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=pDMRdxLocsUC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=pDMRdxLocsUC&pg=PP6&dq=star+war&hl=&cd=23&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=pDMRdxLocsUC&dq=star+war&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_and_Philosophy.html?hl=&id=pDMRdxLocsUC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_and_Philosophy-sample-pdf.acsm?id=pDMRdxLocsUC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=pDMRdxLocsUC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... “A Wretched Hive of Scum and Villainy”: \u003cb\u003eStar Wars\u003c/b\u003e and the Problem of Evil........................................................ 106 7: “Be Mindful of the Living Force”: Environmental Ethics in \u003cb\u003eStar War\u003c/b\u003e...................."
      }
    },
    {
      "kind": "books#volume",
      "id": "E8BLDwAAQBAJ",
      "etag": "xAmv21KiOjE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/E8BLDwAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Lost Stars, Vol. 1 (manga)",
        "authors": [
          "Claudia Gray"
        ],
        "publisher": "Yen Press LLC",
        "publishedDate": "2018-05-08",
        "description": "The Empire can be seductive, particularly if you’re an aspiring young pilot... Sharing a love of ships and an admiration for the Empire, childhood friends Thane Kyrell and Ciena Ree enroll in the Imperial Academy in the hopes of realizing their dream of joining the fleet. The more they learn, however, the more their loyalties—to the Empire and to each other—are put to the test. Will Thane and Ciena’s friendship—or even they themselves—survive the trials ahead?",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781975382285"
          },
          {
            "type": "ISBN_10",
            "identifier": "1975382285"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 260,
        "printType": "BOOK",
        "categories": [
          "Comics & Graphic Novels"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "2.5.3.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=E8BLDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=E8BLDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=E8BLDwAAQBAJ&pg=PA57&dq=star+war&hl=&cd=24&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=E8BLDwAAQBAJ&dq=star+war&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_Lost_Stars_Vol_1_manga.html?hl=&id=E8BLDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Lost_Stars_Vol_1_manga-sample-epub.acsm?id=E8BLDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Lost_Stars_Vol_1_manga-sample-pdf.acsm?id=E8BLDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=E8BLDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... WAR ト・スターズ S - T LOST R WARS ロスト・ス ST STARS. \u003cb\u003eSTAR WARS\u003c/b\u003e."
      }
    },
    {
      "kind": "books#volume",
      "id": "pByKDwAAQBAJ",
      "etag": "vYlMEC0uO1E",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/pByKDwAAQBAJ",
      "volumeInfo": {
        "title": "The Best of Star Wars Insider Volume 4",
        "authors": [
          "Jonathan Wilkins"
        ],
        "publisher": "Titan Comics",
        "publishedDate": "2016-11-22",
        "description": "Explore the galaxy far, far away. Four decades after the original Star Wars was released, changing cinema forever, the saga continues with all-new movies, books, comics, video games, and TV spin-offs. This collection of interviews and behind-the-scenes features includes: Daisy Ridley on playing Rey in The Force Awakens, an exploration of rare prototype toys that never made it into stores, and Mark Hamill’s thoughts on working with Sir Alec Guinness. “The Best of Star Wars Insider proves we don’t know all there is to know about Star Wars.” – New York Journal of Books",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781785855986"
          },
          {
            "type": "ISBN_10",
            "identifier": "1785855980"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 178,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=pByKDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=pByKDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=pByKDwAAQBAJ&pg=PA64&dq=star+war&hl=&cd=25&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=pByKDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=pByKDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=pByKDwAAQBAJ&rdid=book-pByKDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Best_of_Star_Wars_Insider_Volume_4-sample-pdf.acsm?id=pByKDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=pByKDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Jonathan Wilkins. C Hooks STAR JE BLIC ARS TS LIC FRONT ! WARS WIS HORS 15 00111 DARK HORSE : INTO THE FUTURE AS ... WAR THE NOOSE TIGHTENS , THE REPUBLIC CLOSES IN ! STARWARS KNIGHTS REPUBLIC OF THE OLD HORSK 19 \u003cb\u003eSTAR WAR\u003c/b\u003e 00511 A&nbsp;..."
      }
    }
  ]
}
","status":200,"url":"https://www.googleapis.com/books/v1/volumes?q=star+war&maxResults=25&key=AIzaSyB0h8Chg6lBoHUDHUbOHY83sceJP_O_Ga4"},"revalidate":31536000,"tags":[]}