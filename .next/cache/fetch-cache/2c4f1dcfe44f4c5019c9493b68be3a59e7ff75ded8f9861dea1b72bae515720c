{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Sat, 23 Aug 2025 22:42:11 GMT","server":"ESF","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{
  "kind": "books#volumes",
  "totalItems": 1000000,
  "items": [
    {
      "kind": "books#volume",
      "id": "dlxcEAAAQBAJ",
      "etag": "nb7aY67YSc8",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/dlxcEAAAQBAJ",
      "volumeInfo": {
        "title": "The Overture of ELDEN RING",
        "authors": [
          "Famitsu editorial Famitsu editorial department",
          "Dengeki Games editorial department"
        ],
        "publisher": "Yen Press LLC",
        "publishedDate": "2022-02-03",
        "description": "Jump into the world of ELDEN RING, the much-anticipated release by FromSoftware, before it comes out in this primer packed with info you won’t find anywhere else! Covering the network test that happened in November 2021, it goes into greater detail about the game’s depth, scale, gameplay, and the gorgeous landscapes that players can explore. To top it all off, ELDEN RING director Hidetaka Miyazaki talks about the ELDEN RING’s development process and design choices the team faced in an exclusive interview! What’s more, the dark fantasy games developed by FromSoftware, such as Dark Souls and Bloodborne, are featured as well, with images of enemies and locales from the hit games! With tons of details ahead of the game’s release, this book is a must-have for any fans who can’t wait to get their hands on ELDEN RING!",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781975348229"
          },
          {
            "type": "ISBN_10",
            "identifier": "1975348222"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 130,
        "printType": "BOOK",
        "categories": [
          "Comics & Graphic Novels"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.3.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=dlxcEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=dlxcEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=dlxcEAAAQBAJ&printsec=frontcover&dq=elden+ring&hl=&cd=1&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=dlxcEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=dlxcEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=dlxcEAAAQBAJ&rdid=book-dlxcEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Overture_of_ELDEN_RING-sample-epub.acsm?id=dlxcEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Overture_of_ELDEN_RING-sample-pdf.acsm?id=dlxcEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=dlxcEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "With tons of details ahead of the game’s release, this book is a must-have for any fans who can’t wait to get their hands on ELDEN RING!"
      }
    },
    {
      "kind": "books#volume",
      "id": "sjejEAAAQBAJ",
      "etag": "QXrm37HjwO8",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/sjejEAAAQBAJ",
      "volumeInfo": {
        "title": "Elden Ring. Capítulo 9",
        "subtitle": "Camino al Árbol Áureo",
        "authors": [
          "Nikiichi Tobita",
          "From Software Inc"
        ],
        "publisher": "Panini",
        "publishedDate": "2022-12-20",
        "description": "¡El manga de comedia basado en el RPG de acción \"Elden Ring\" está aquí! Un hombre sin luz, Aseo, ha sido arrojado a Necrolimbo, una tierra intermedia hundida en la pobreza extrema. Frente a la dureza de las tierras intermedias, una chica misteriosa, Melina, se acerca al desmotivado Aseo para ofrecerle un trato: seguir la guía de la Gracia y dirigirse hacia el Árbol Áureo. Durante el camino de Aseo, le aguardan, uno tras otro, personajes con muy expresivas personalidades. Parches, el vagabundo Blaidd, el semilobo, Margit, el augurio caído, Godric, el injertado y Ranni, la bruja. ¡¿Podrá Aseo, que viaja desesperadamente por Necrolimbo, llegar a su destino inmediato, el Castillo del Velo Tormentoso?!",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9786076365984"
          },
          {
            "type": "ISBN_10",
            "identifier": "6076365986"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 18,
        "printType": "BOOK",
        "categories": [
          "Antiques & Collectibles"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.2.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=sjejEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=sjejEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "es",
        "previewLink": "http://books.google.com/books?id=sjejEAAAQBAJ&pg=PP3&dq=elden+ring&hl=&cd=2&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=sjejEAAAQBAJ&dq=elden+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Elden_Ring_Cap%C3%ADtulo_9.html?hl=&id=sjejEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Elden_Ring_Cap%C3%ADtulo_9-sample-epub.acsm?id=sjejEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Elden_Ring_Cap%C3%ADtulo_9-sample-pdf.acsm?id=sjejEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=sjejEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Camino al Árbol Áureo Nikiichi Tobita, From Software Inc. \u003cb\u003eELDEN RING\u003c/b\u003e CAMINO AL ÁRBOL ÁUREO EPISODIO NUEVE : LA PREMONICIÓN DEL ALIADO ... ¿ QUÉ ES ? ९९९ e ツ SONRISA RETORCIDA BIEN , ¡ ACEP- TA ESTO , POR FA- VOR ! GOSTOC , GUARDIAN&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "IYlbEQAAQBAJ",
      "etag": "Otkq0O90XSE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/IYlbEQAAQBAJ",
      "volumeInfo": {
        "title": "Le monument Elden Ring",
        "subtitle": "Le grand oeuvre de FromSoftware",
        "authors": [
          "Sylvain Romieu"
        ],
        "publisher": "Third Editions",
        "publishedDate": "2025-05-05",
        "description": "À bien des égards, le succès éclatant d’Elden Ring s’inscrit dans la droite lignée de celui des Dark Souls, confirmant la montée en puissance spectaculaire du studio FromSoftware depuis le renouveau apporté par Demon’s Souls en 2009. La réussite d’Elden Ring se veut pourtant plus spectaculaire encore. En transposant la formule des Souls dans un monde ouvert tout en conjuguant l’esprit créatif de George R. R. Martin à celui de Hidetaka Miyazaki, l’aventure en Entre-terre tutoie les sommets de la dark fantasy et du jeu vidéo. Coauteur des essais acclamés \"Dark Souls. Par-delà la mort\", Sylvain Romieu livre ici un décryptage complet d’Elden Ring et de son DLC Shadow of the Erdtree. Des coulisses de la création aux analyses transversales du game design, en passant par une reconstruction minutieuse du lore : le chef-d’œuvre de FromSoftware vous dévoilera toute son insondable richesse. À PROPOS DE L'AUTEUR Curieux de nature, rêveur contre nature, râleur chronique, mais également voyageur de passion, du réel à l’irréel Sylvain Romieu explore aussi bien le monde que les univers virtuels, toujours à la recherche de découvertes enrichissantes ou de cultures hétéroclites. Développeur de métier, il a cependant attrapé sa modeste plume voilà quelques années, afin de décortiquer au mieux les atouts et la richesse du monde merveilleusement créatif du jeu vidéo. Il écrit sur le site Chroniques ludiques, notamment sur le sujet des RPG, son genre de prédilection.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9782377844814"
          },
          {
            "type": "ISBN_10",
            "identifier": "2377844812"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 396,
        "printType": "BOOK",
        "categories": [
          "Games & Activities"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=IYlbEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=IYlbEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "fr",
        "previewLink": "http://books.google.com/books?id=IYlbEQAAQBAJ&pg=PT379&dq=elden+ring&hl=&cd=3&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=IYlbEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=IYlbEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 14.13,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 14.13,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=IYlbEQAAQBAJ&rdid=book-IYlbEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 14130000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 14130000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true
        },
        "pdf": {
          "isAvailable": true
        },
        "webReaderLink": "http://play.google.com/books/reader?id=IYlbEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eELDEN RING\u003c/b\u003e Shadow of the Erdtree | Story Trailer ». YouTube, 21/05/2024. Disponible sur : &lt;https://www.youtube.com/watch?v=6uT8wGtB3yQ&gt; BANDAI NAMCO EUROPE. « \u003cb\u003eELDEN RING\u003c/b\u003e – Story Trailer ». YouTube, 10/12/2021. Disponible sur : &lt;https&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "ovz2zgEACAAJ",
      "etag": "fnPmbFpzO6k",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/ovz2zgEACAAJ",
      "volumeInfo": {
        "title": "Elden Ring Complete Guide & Walkthrough",
        "subtitle": "The Official Strategy Guide",
        "authors": [
          "Herdis Kruse Dalsgaard Mork"
        ],
        "publisher": "Independently Published",
        "publishedDate": "2022-02-25",
        "description": "Elden Ring is the latest RPG developed by FromSoftware for PlayStation 5, PS4, and other platforms. Following on from popular titles like Demon's Souls, Dark Souls, Bloodborne, and Sekiro: Shadows Die Twice, it builds on the formula with a fully open world setting. These sorts of games are known for their hard difficulty, and Elden Ring is no different. In this Elden Ring guide, which includes an Elden Ring walkthrough, we're going to share our tips and tricks to help you survive The Lands Between. We will also cover boss fight strategies, including Margit, the Fell Omen and Rennala, Queen of the Full Moon. Our Elden Ring walkthrough will guide you through the main areas in the game like Stormveil Castle and the Academy of Raya Lucaria. This page will also offer some useful tips and tricks like how to replenish flasks and how multiplayer works. Finally, we will explain the best starting class for all playstyles and what the very best starting Keepsake is. Please be aware this guide contains Elden Ring spoilers, so browse carefully if you wish to keep the game's surprises a mystery. This guide is a work in progress, so be sure to check back later for even more information and guidance. Many of the linked pages below are also being worked on continuously to provide even better help.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9798423227814"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 96,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=ovz2zgEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=ovz2zgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=ovz2zgEACAAJ&dq=elden+ring&hl=&cd=4&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=ovz2zgEACAAJ&dq=elden+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Elden_Ring_Complete_Guide_Walkthrough.html?hl=&id=ovz2zgEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=ovz2zgEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Please be aware this guide contains Elden Ring spoilers, so browse carefully if you wish to keep the game&#39;s surprises a mystery. This guide is a work in progress, so be sure to check back later for even more information and guidance."
      }
    },
    {
      "kind": "books#volume",
      "id": "GA64EAAAQBAJ",
      "etag": "4AbU/+GXAME",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/GA64EAAAQBAJ",
      "volumeInfo": {
        "title": "Double Edge Magazine New World",
        "authors": [
          "Derrick E Carey"
        ],
        "publisher": "Team Double Edge Publishing Company",
        "publishedDate": "2023-04-07",
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 23,
        "printType": "BOOK",
        "categories": [
          "Antiques & Collectibles"
        ],
        "maturityRating": "MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=GA64EAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=GA64EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=GA64EAAAQBAJ&pg=PP4&dq=elden+ring&hl=&cd=5&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=GA64EAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=GA64EAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 0,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 0,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=GA64EAAAQBAJ&rdid=book-GA64EAAAQBAJ&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Double_Edge_Magazine_New_World-sample-pdf.acsm?id=GA64EAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=GA64EAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Derrick E Carey. ELDEN. RING. \u003cb\u003eElden Ring\u003c/b\u003e takes place in the realm of the Lands Between , sometime after the destruction of the titular \u003cb\u003eElden Ring\u003c/b\u003e and the scattering of its shards , the Great Runes . Once graced by the Ring and the Erdtree&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "ESh2EQAAQBAJ",
      "etag": "I4+/LWiVd30",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/ESh2EQAAQBAJ",
      "volumeInfo": {
        "title": "Music, Sound and Identity in Video Games",
        "authors": [
          "Lidia López Gómez"
        ],
        "publisher": "Springer Nature",
        "publishedDate": "2025-08-01",
        "description": "This book offers a comprehensive overview of how video game sound and music represent cultures, spaces and personal identifications. Focusing on the concept of identity, the volume brings together issues as diverse as belonging to an ethnic or cultural group, identifying with certain sexualities or being able to deduce the historical or geographical context of a game. This volume explores whether the musical and sound identities linked to video games are based on clichés and stereotyped arrangements that span cultures and times. It includes case studies that analyse the mechanisms used by game producers, composers and sound designers to “characterise” and represent different identities to broad audiences of potential players, as well as how the players perceive these sonic inputs. The book is organized into three main sections, covering topics as the representation of historical periods, musical stereotypes of cultures from different geographic locations, representations of identity in fictional spaces and sonic depictions gender.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9783031875076"
          },
          {
            "type": "ISBN_10",
            "identifier": "3031875079"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 297,
        "printType": "BOOK",
        "categories": [
          "Music"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.3.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=ESh2EQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=ESh2EQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=ESh2EQAAQBAJ&pg=PA158&dq=elden+ring&hl=&cd=6&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=ESh2EQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=ESh2EQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE_AND_RENTAL",
        "isEbook": true,
        "listPrice": {
          "amount": 159,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 127.2,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=ESh2EQAAQBAJ&rdid=book-ESh2EQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 159000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 127200000,
              "currencyCode": "USD"
            },
            "giftable": true
          },
          {
            "finskyOfferType": 3,
            "listPrice": {
              "amountInMicros": 55650000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 48420000,
              "currencyCode": "USD"
            },
            "rentalDuration": {
              "unit": "DAY",
              "count": 90
            }
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Music_Sound_and_Identity_in_Video_Games-sample-epub.acsm?id=ESh2EQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Music_Sound_and_Identity_in_Video_Games-sample-pdf.acsm?id=ESh2EQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=ESh2EQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e.1 If its predecessor , Dark Souls 3 , released in 2015 , sold almost 10 million copies until 2022 and won multiple Game of The Year awards , then the same feat is observable in \u003cb\u003eElden Ring\u003c/b\u003e , however , in just one month.2 The&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "PcVi0AEACAAJ",
      "etag": "4OnTvJRlQQU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/PcVi0AEACAAJ",
      "volumeInfo": {
        "title": "Elden Ring Complete Guide and Walkthrough [New Updated]",
        "subtitle": "Tips and Tricks to Get Started",
        "authors": [
          "Benjamin N Bach"
        ],
        "publisher": "Independently Published",
        "publishedDate": "2023-12-21",
        "description": "Welcome to our Elden Ring Complete Guide and Walkthrough [New updated] ★★★★★ Elden Ring tips are arguably more important than those for most games given how brutal From Software games can be, and with the game out now, you'll likely be looking for some right off the bat. Despite being more approachable, Elden Ring is really no exception to this--especially because The Lands Between is an open world with danger around every corner. As you first boot up Elden Ring, you will be greeted with a myriad of choices and challenges, and it may leave you wondering about your best way forward. Lucky for you, we've compiled a list of tips that can help you get off on the right foot in your adventure through The Lands Between.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9798872531340"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 0,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=PcVi0AEACAAJ&dq=elden+ring&hl=&cd=7&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=PcVi0AEACAAJ&dq=elden+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Elden_Ring_Complete_Guide_and_Walkthroug.html?hl=&id=PcVi0AEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=PcVi0AEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Welcome to our Elden Ring Complete Guide and Walkthrough [New updated] ★★★★★ Elden Ring tips are arguably more important than those for most games given how brutal From Software games can be, and with the game out now, you&#39;ll ..."
      }
    },
    {
      "kind": "books#volume",
      "id": "_n2eEAAAQBAJ",
      "etag": "7q9bbSe3GMg",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/_n2eEAAAQBAJ",
      "volumeInfo": {
        "title": "Game Design Tools",
        "subtitle": "Cognitive, Psychological, and Practical Approaches",
        "authors": [
          "Diego Ricchiuti"
        ],
        "publisher": "CRC Press",
        "publishedDate": "2022-12-30",
        "description": "This book provides a series of transdisciplinary tools to help game designers improve their design pipeline and design output. Using approaches from psychology, anthropology, and sociology, it offers practical tools for all the main aspects of game design from conception through to testing. Drawing on game design theory, the book looks at the relationship between game design and other disciplines to create a toolbox of modern tools for game designers. It covers archetypes, praxeology, behavioural game design, and emotional game design. Covering a wide breadth of content, the book includes chapters on: Documentation Production Evaluation Analysis and Marketing tools This book will be of great interest to students on game design courses, as well as early-career game designers and those looking to break into the industry. It will also be of interest to more experienced game designers looking for new game design tools.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781000828238"
          },
          {
            "type": "ISBN_10",
            "identifier": "1000828239"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 276,
        "printType": "BOOK",
        "categories": [
          "Computers"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=_n2eEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=_n2eEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=_n2eEAAAQBAJ&pg=PT251&dq=elden+ring&hl=&cd=8&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=_n2eEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=_n2eEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 58.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 47.19,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=_n2eEAAAQBAJ&rdid=book-_n2eEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 58990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 47190000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Game_Design_Tools-sample-epub.acsm?id=_n2eEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Game_Design_Tools-sample-pdf.acsm?id=_n2eEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=_n2eEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e V1 : blocking an attack triggers a timer called counter window , if you attack the normal attack animation triggers , but the damage is different . Version 2 is the minimum viable product - or MVP - meaning the first version&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "XG8VEQAAQBAJ",
      "etag": "sVpoJ6j/4C0",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/XG8VEQAAQBAJ",
      "volumeInfo": {
        "title": "Elden Ring: The Road to the Erdtree, Vol. 4",
        "publisher": "Yen Press LLC",
        "publishedDate": "2024-10-15",
        "description": "Aseo the Tarnished arrives at the Grand Library deep inside the Academy of Raya Lucaria, where Rennala, Queen of the Full Moon and the Carian Knight Moongrum await. And for the decisive match to attain a great rune, the one who holds the key to the battle is...that “bluntstone” sorcerer!?",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9798855405514"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 164,
        "printType": "BOOK",
        "categories": [
          "Comics & Graphic Novels"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": true,
          "containsImageBubbles": true,
          "epubBubbleVersion": "3f8fb39662d15fd7_A",
          "imageBubbleVersion": "3f8fb39662d15fd7_A"
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=XG8VEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=XG8VEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=XG8VEQAAQBAJ&printsec=frontcover&dq=elden+ring&hl=&cd=9&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=XG8VEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=XG8VEQAAQBAJ",
        "seriesInfo": {
          "kind": "books#volume_series_info",
          "bookDisplayNumber": "4",
          "volumeSeries": [
            {
              "seriesId": "J6jcGwAAABD6sM",
              "seriesBookType": "COLLECTED_EDITION",
              "orderNumber": 4
            }
          ]
        }
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 6.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 6.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=XG8VEQAAQBAJ&rdid=book-XG8VEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 6990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 6990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Elden_Ring_The_Road_to_the_Erdtree_Vol_4-sample-epub.acsm?id=XG8VEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Elden_Ring_The_Road_to_the_Erdtree_Vol_4-sample-pdf.acsm?id=XG8VEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=XG8VEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Soon, he’s caught up in another frenzied fight...with a conclusion nobody could ever see coming! New friends, familiar faces, action, adventure, and cats(?)—all await Aseo as he starts on a quest for treasures galore!"
      }
    },
    {
      "kind": "books#volume",
      "id": "UGbdEAAAQBAJ",
      "etag": "zgLGxjy7mxk",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/UGbdEAAAQBAJ",
      "volumeInfo": {
        "title": "Traveling through Video Games",
        "authors": [
          "Tom van Nuenen"
        ],
        "publisher": "Taylor & Francis",
        "publishedDate": "2023-10-30",
        "description": "This book unlocks an understanding of video games as virtual travel. It explains how video game design increasingly takes cues from the promotional language of tourism, and how this connection raises issues of power and commodification. Bridging the disciplinary gap between game and tourism studies, the book offers a comprehensive account of touristic gazing in games such as The Legend of Zelda: Breath of the Wild, Minecraft, and Microsoft Flight Simulator 2020. Traveling through video games involves a mythological promise of open-ended opportunity, summarized in the slogan you can go there. Van Nuenen discusses the scale of game worlds, the elusive nature of freedom and control, and the pivotal role of work in creating a sense of belonging. The logic of tourism is fundamentally consumptive—but through design choices, players can also be invited to approach their travels more critically. This is the difference between moving through a game world, and being moved by it. This interdisciplinary and innovative study will interest students and scholars of digital media studies, game studies, tourism and technology, and the Digital Humanities.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781003827177"
          },
          {
            "type": "ISBN_10",
            "identifier": "1003827179"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 98,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=UGbdEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=UGbdEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=UGbdEAAAQBAJ&pg=PT23&dq=elden+ring&hl=&cd=10&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=UGbdEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=UGbdEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 26.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 14.57,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=UGbdEAAAQBAJ&rdid=book-UGbdEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 26990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 14570000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Traveling_through_Video_Games-sample-epub.acsm?id=UGbdEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Traveling_through_Video_Games-sample-pdf.acsm?id=UGbdEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=UGbdEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e , this capacity is not necessarily tied to a sense of agency . This is largely due to the imperviousness of \u003cb\u003eElden Ring&#39;s\u003c/b\u003e landscape , which is designed to be actively intimidating . The game makes a concentrated effort to hide&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "nodTEQAAQBAJ",
      "etag": "VjY/YEw3eyc",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/nodTEQAAQBAJ",
      "volumeInfo": {
        "title": "Urban Undergrounds",
        "subtitle": "Contemporary Literary and Cultural Perspectives",
        "authors": [
          "Patricia García",
          "David Pike"
        ],
        "publisher": "Taylor & Francis",
        "publishedDate": "2025-05-20",
        "description": "Research in urban development in the social sciences has increasingly emphasized the importance of underground infrastructure for envisaging sustainable cities and for critiquing the economies of extraction. Urban Undergrounds: Contemporary Literary and Cultural Perspectives demonstrates the urgency of integrating a below-ground perspective into the emerging field of the Urban Humanities. The collection is divided into three thematic sections that cluster and revisit different sets of well-known motifs in Underground Studies: “Displaced”, “Buried” and “Wasted”. It showcases the intermedial nature of underground-focused analyses in literature, extending from literary texts to a wider range of cultural forms, including films, graphic novels and videogames. The contributors build on recent scholarship that has expanded the field into new interdisciplinary areas, including intersections with memory studies, ecocriticism and decolonial perspectives. Urban Undergrounds also explores lesser-studied subterranes, including those of Warsaw, Athens, Mexico City, Johannesburg and Santiago de Chile. The book’s substantial introduction offers a guiding theoretical and methodological framework for future scholars working with underground perspectives in literary and cultural studies. This thought-provoking and illuminating collection is a valuable resource for students and scholars in the areas of Literary Urban Studies, Underground Studies and Geocriticism, and more broadly in the Urban Humanities and Spatial Humanities.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781040340707"
          },
          {
            "type": "ISBN_10",
            "identifier": "1040340709"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 203,
        "printType": "BOOK",
        "categories": [
          "Literary Criticism"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=nodTEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=nodTEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=nodTEQAAQBAJ&pg=PA134&dq=elden+ring&hl=&cd=11&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=nodTEQAAQBAJ&dq=elden+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Urban_Undergrounds.html?hl=&id=nodTEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Urban_Undergrounds-sample-pdf.acsm?id=nodTEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=nodTEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eELDEN RING\u003c/b\u003e [ ... ] This was news to me . [ ... ] \u003cb\u003eELDEN RING\u003c/b\u003e is exciting enough , no need to make up stuff &quot; ( 2022b ) . Although somewhat fringe , this fan theory highlights how some players perceive and interpret the game with the&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "5l1YEQAAQBAJ",
      "etag": "CC+g52u13/o",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/5l1YEQAAQBAJ",
      "volumeInfo": {
        "title": "VGC: The 2025 Guide to Video Games",
        "authors": [
          "1981 Media Ltd"
        ],
        "publisher": "White Owl",
        "publishedDate": "2025-05-30",
        "description": "Relive 2024's gaming highs, lows, and industry upheavals with this expertly curated year-in-review. There’s no such thing as a quiet year in video games, and 2024 has been no different. For players, a steady stream of high-profile game releases has meant there’s always been something new to play regardless of what console, handheld, PC or mobile device they were using. Meanwhile, behind the scenes 2024 has been one of the most turbulent years in the history of the games industry, with widespread job losses, studio cuts, acquisitions and other controversies. Video Games Chronicle, the expert source for video game news, has covered 2024’s goings-on every step of the way, and this book summarises the entire year in one handy volume. Designed like an old-school games magazine, this book presents the VGC website’s best coverage of 2024 in a more traditional format. Our News section takes you through all the major stories that took place throughout the year, allowing you to relive every moment (for better or worse). Our Reviews section contains every notable VGC game review from 2024, ‘remastered’ and presented to you in physical form (we’re big on preservation, you see). Our Features section offers some of our best long-form articles from the past year. Finally, our Previews section takes a look at some of the games coming in 2025. The world of online games media is a fast-moving one, and news and reviews usually arrive at breakneck speed then disappear from our consciousness to be replaced with the latest stories. With this book, we hope to provide a more permanent summary of the year, while also harking back to the days of the games magazines we loved so much.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781036125905"
          },
          {
            "type": "ISBN_10",
            "identifier": "1036125904"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 202,
        "printType": "BOOK",
        "categories": [
          "Games & Activities"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=5l1YEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=5l1YEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=5l1YEQAAQBAJ&pg=PA103&dq=elden+ring&hl=&cd=12&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=5l1YEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=5l1YEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=5l1YEQAAQBAJ&rdid=book-5l1YEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/VGC_The_2025_Guide_to_Video_Games-sample-pdf.acsm?id=5l1YEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=5l1YEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e : Shadow of the Erdtree | 103 The Last of Us Part 2 Remastered | 117. Shadow of the Erdtree feels like the best of \u003cb\u003eElden Ring\u003c/b\u003e condensed into a more concise package . While the main game had some fluff towards the end , and&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "QvoFEQAAQBAJ",
      "etag": "yE0J6P1XL60",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/QvoFEQAAQBAJ",
      "volumeInfo": {
        "title": "Digital Games eBook",
        "authors": [
          "GURMEET SINGH DANG"
        ],
        "publisher": "GURMEETWEB TECHNICAL LABS",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9789359750071"
          },
          {
            "type": "ISBN_10",
            "identifier": "9359750077"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 1394,
        "printType": "BOOK",
        "categories": [
          "Games & Activities"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.1.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=QvoFEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=QvoFEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=QvoFEQAAQBAJ&pg=PA251&dq=elden+ring&hl=&cd=13&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=QvoFEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=QvoFEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=QvoFEQAAQBAJ&rdid=book-QvoFEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true
        },
        "webReaderLink": "http://play.google.com/books/reader?id=QvoFEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e” to the long-awaited sequel “Doom Eternal”, there are tons of titles to look forward to. Here is a list of some of the most highly-anticipated Windows games of 2025. 1. \u003cb\u003eElden Ring\u003c/b\u003e – Developed by the renowned creator of the&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "X80zEQAAQBAJ",
      "etag": "kI4bfWJe5qM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/X80zEQAAQBAJ",
      "volumeInfo": {
        "title": "The Aesthetics of Collective Agency",
        "subtitle": "Corporations, Communities and Crowds in the Twenty-First Century",
        "authors": [
          "Simone Knewitz",
          "Stefanie Mueller"
        ],
        "publisher": "transcript Verlag",
        "publishedDate": "2024-10-30",
        "description": "Twenty-first-century Western culture is characterized by profound transformations in its forms of collective organization. While traditional institutions of Western liberal democracies still wield significant political power, new forms of collective agency – most visible in progressive social protest movements, but also in the global rise of populism – have increasingly put pressure on established systems of collective organization. The contributors to this volume explore the social, political, and aesthetic forms that collective agency takes in the twenty-first century across a variety of media, including social platforms such as TikTok, multiplayer video games, and contemporary lyric poetry.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9783839468159"
          },
          {
            "type": "ISBN_10",
            "identifier": "3839468159"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 271,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.1.0.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=X80zEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=X80zEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=X80zEQAAQBAJ&pg=PA163&dq=elden+ring&hl=&cd=14&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=X80zEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=X80zEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 0,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 0,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=X80zEQAAQBAJ&rdid=book-X80zEQAAQBAJ&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Aesthetics_of_Collective_Agency-sample-pdf.acsm?id=X80zEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=X80zEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e feature synchronous multiplayer as well , in which players can share the game world with other players . Like everything else in FromSoftware games , this synchronous multiplayer does not follow the conventions of most&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "4dsHEQAAQBAJ",
      "etag": "tWT7/ww6aoI",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/4dsHEQAAQBAJ",
      "volumeInfo": {
        "title": "Medievalisms in a Global Age",
        "authors": [
          "Robert Squillace",
          "Angela Jane Weisl"
        ],
        "publisher": "Boydell & Brewer",
        "publishedDate": "2024-07-09",
        "description": "Discusses contemporary medievalism in studies ranging from Brazil to West Africa, from Manila to New York. Across the world, revivals of medieval practices, images, and tales flourish as never before. The essays collected here, informed by approaches from Global Studies and the critical discourse on the concept of a \"Global Middle Ages\", explore the many facets of contemporary medievalism: post-colonial responses to the enforced dissemination of Western medievalisms, attempts to retrieve pre-modern cultural traditions that were interrupted by colonialism, the tentative forging of a global \"medieval\" imaginary from the world's repository of magical tales and figures, and the deployment across borders of medieval imagery for political purposes. The volume is divided into two sections, dealing with \"Local Spaces\" and \"Global Geographies\". The contributions in the first consider a variety of medievalisms tied to particular places across a broad geography, but as part of a larger transnational medievalist dynamic. Those in the second focus on explicitly globalist medievalist phenomena whether concerning the projection of a particular medievalist trope across borders or the integration of \"medieval\" pasts from different parts of the globe in a contemporary incarnation of medievalism. A wide range of topics are addressed, from Japanese manga and Arthurian tales to The O-Trilogy of Maurice Gee, Camus, and Dungeons and Dragons.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781843847038"
          },
          {
            "type": "ISBN_10",
            "identifier": "1843847035"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 283,
        "printType": "BOOK",
        "categories": [
          "Literary Criticism"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.0.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=4dsHEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=4dsHEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=4dsHEQAAQBAJ&pg=PA146&dq=elden+ring&hl=&cd=15&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=4dsHEQAAQBAJ&dq=elden+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Medievalisms_in_a_Global_Age.html?hl=&id=4dsHEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Medievalisms_in_a_Global_Age-sample-pdf.acsm?id=4dsHEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=4dsHEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e (2022), introduces a racialised variation on peasant oppression and revolt with its so-called “Misbegot- ten”. A humanoid species with animal features such as tails, wings and scales, the Misbegotten stand out as particularly&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "W9PQEAAAQBAJ",
      "etag": "kRqUhhhHesg",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/W9PQEAAAQBAJ",
      "volumeInfo": {
        "title": "An Introduction to Fantasy",
        "authors": [
          "Matthew Sangster"
        ],
        "publisher": "Cambridge University Press",
        "publishedDate": "2023-09-07",
        "description": "A vibrant introduction to Fantasy that explores its uses, processes, traditions, manifestations across media, stakeholders and communities.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781009429917"
          },
          {
            "type": "ISBN_10",
            "identifier": "1009429914"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 481,
        "printType": "BOOK",
        "categories": [
          "Literary Criticism"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=W9PQEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=W9PQEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=W9PQEAAAQBAJ&pg=PA368&dq=elden+ring&hl=&cd=16&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=W9PQEAAAQBAJ&dq=elden+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/An_Introduction_to_Fantasy.html?hl=&id=W9PQEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/An_Introduction_to_Fantasy-sample-pdf.acsm?id=W9PQEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=W9PQEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e (2022) sets its customisable, largely silent protagonist a relatively conventional video game challenge: overcome decadent demigods, take possession of the titular \u003cb\u003eElden Ring\u003c/b\u003e and use it to determine the future of the world. Elden&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "3-iKEAAAQBAJ",
      "etag": "9gIknLn2f0Y",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/3-iKEAAAQBAJ",
      "volumeInfo": {
        "title": "Playful Materialities",
        "subtitle": "The Stuff That Games Are Made Of",
        "authors": [
          "Benjamin Beil",
          "Gundolf S. Freyermuth",
          "Hanns Christian Schmidt",
          "Raven Rusch"
        ],
        "publisher": "transcript Verlag",
        "publishedDate": "2022-08-01",
        "description": "Game culture and material culture have always been closely linked. Analog forms of rule-based play (ludus) would hardly be conceivable without dice, cards, and game boards. In the act of free play (paidia), children as well as adults transform simple objects into multifaceted toys in an almost magical way. Even digital play is suffused with material culture: Games are not only mediated by technical interfaces, which we access via hardware and tangible peripherals. They are also subject to material hybridization, paratextual framing, and processes of de-, and re-materialization.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9783839462003"
          },
          {
            "type": "ISBN_10",
            "identifier": "3839462002"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 405,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=3-iKEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=3-iKEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=3-iKEAAAQBAJ&pg=PA273&dq=elden+ring&hl=&cd=17&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=3-iKEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=3-iKEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 0,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 0,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=3-iKEAAAQBAJ&rdid=book-3-iKEAAAQBAJ&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Playful_Materialities-sample-pdf.acsm?id=3-iKEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=3-iKEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e Lord Let Me Solo Her Kills Malenia 1,000 Times,” Kotaku (2022), https://kotaku.com/\u003cb\u003eelden\u003c/b\u003e-\u003cb\u003ering\u003c/b\u003e-let-me-solo-her-klein- tsuboi-1000-malenia-yo-1848911945. For other important preconditions about player&#39;s performability and the&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "km3mEAAAQBAJ",
      "etag": "dat/GDr1Qio",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/km3mEAAAQBAJ",
      "volumeInfo": {
        "title": "Video Game Encyclopedia",
        "authors": [
          "Arnold Ringstad"
        ],
        "publisher": "ABDO",
        "publishedDate": "2023-12-15",
        "description": "This title introduces readers to some of the most popular and influential video games of all time. Readers will learn about iconic characters, renowned game developers, and how the world of video games has changed from the 1950s to today. Features include a glossary, additional resources, and an index. Aligned to Common Core Standards and correlated to state standards. Encyclopedias is an imprint of Abdo Reference, a division of ABDO.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9798384910954"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 195,
        "printType": "BOOK",
        "categories": [
          "Juvenile Nonfiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=km3mEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=km3mEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=km3mEAAAQBAJ&pg=PA187&dq=elden+ring&hl=&cd=18&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=km3mEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=km3mEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 52.79,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 52.79,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=km3mEAAAQBAJ&rdid=book-km3mEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 52790000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 52790000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Video_Game_Encyclopedia-sample-pdf.acsm?id=km3mEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=km3mEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e appealed to newcomers too. The open-world freedom meant that players don&#39;t get stuck if they can&#39;t beat a ... \u003cb\u003eElden Ring\u003c/b\u003e director Hidetaka Miyazaki, right, accepted a major British award for \u003cb\u003eElden Ring\u003c/b\u003e in early 2023&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "LATlEAAAQBAJ",
      "etag": "GXsDje1NQJM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/LATlEAAAQBAJ",
      "volumeInfo": {
        "title": "Practical Archaeogaming",
        "authors": [
          "Andrew Reinhard"
        ],
        "publisher": "Berghahn Books",
        "publishedDate": "2024-05-03",
        "description": "As a sequel to Archaeogaming: an Introduction to Archaeology in and of Video Games, the author focuses on the practical and applied side of the discipline, collecting recent digital fieldwork together in one place for the first time to share new methods in treating interactive digital built environments as sites for archaeological investigation. Fully executed examples of practical and applied archaeogaming include the necessity of a rapid archaeology of digital built environments, the creation of a Harris matrix for software stratigraphy, the ethnographic work behind a human civilization trapped in an unstable digital landscape, how to conduct photogrammetry and GIS mapping in procedurally generated space, and how to transform digital artifacts into printed three-dimensional objects. Additionally, the results of the 2014 Atari excavation in Alamogordo, New Mexico are summarized for the first time.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781805395355"
          },
          {
            "type": "ISBN_10",
            "identifier": "1805395351"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 242,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.2.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=LATlEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=LATlEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=LATlEAAAQBAJ&pg=PA20&dq=elden+ring&hl=&cd=19&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=LATlEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=LATlEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 34.95,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 19.22,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=LATlEAAAQBAJ&rdid=book-LATlEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 34950000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 19220000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Practical_Archaeogaming-sample-pdf.acsm?id=LATlEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=LATlEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e? 2. What do the messages and bloodstains indicate about player ex- perience of \u003cb\u003eElden Ring\u003c/b\u003e? 3. How do these messages or bloodstains inform us about the meta- game of \u003cb\u003eElden Ring\u003c/b\u003e? 4. How are the results of this study applicable&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "hKd_EQAAQBAJ",
      "etag": "K9L/PUrQ204",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/hKd_EQAAQBAJ",
      "volumeInfo": {
        "title": "The Power of Consumer Creativity",
        "subtitle": "Transforming Consumption and Markets",
        "authors": [
          "Marie Taillard",
          "Chloe Preece"
        ],
        "publisher": "Springer Nature",
        "publishedDate": "2025-09-22",
        "description": "This edited book explores the many dimensions of consumption as a creative act using the seven C's of creativity framework. Leading scholars from marketing and consumer research illustrate how acts of consumption are infused with novel thinking, cultural expression, and personal meaning across cutting-edge topics including vintage retail, gaming, biohacking, parenting and degrowth. By highlighting the generative potential of consumer creativity, this collection offers a compelling argument for recognising creativity as a fundamental and pervasive human capability rather than a rare talent. It is essential reading for researchers, students, and practitioners seeking to understand the evolving intersections of creativity, consumption, and market transformation.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9783031962479"
          },
          {
            "type": "ISBN_10",
            "identifier": "3031962478"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 205,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=hKd_EQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=hKd_EQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=hKd_EQAAQBAJ&pg=PA154&dq=elden+ring&hl=&cd=20&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=hKd_EQAAQBAJ&dq=elden+ring&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Power_of_Consumer_Creativity.html?hl=&id=hKd_EQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Power_of_Consumer_Creativity-sample-epub.acsm?id=hKd_EQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Power_of_Consumer_Creativity-sample-pdf.acsm?id=hKd_EQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=hKd_EQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e is “ to BONK ” , which is a fan concept referring to a character built around strength - related attri- butes , such as heavy armor and wielding big , heavy - hitting weapons . Figure 7.3 showcases an example of a &quot; bonk&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "KCunEAAAQBAJ",
      "etag": "s6BMCnZO4bc",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/KCunEAAAQBAJ",
      "volumeInfo": {
        "title": "Collaborative Worldbuilding for Video Games",
        "authors": [
          "Kaitlin Tremblay"
        ],
        "publisher": "CRC Press",
        "publishedDate": "2023-03-08",
        "description": "This book is a theoretical and practical deep dive into the craft of worldbuilding for video games, with an explicit focus on how different job disciplines contribute to worldbuilding. In addition to providing lenses for recognizing the various components in creating fictional and digital worlds, the author positions worldbuilding as a reciprocal and dynamic process, a process which acknowledges that worldbuilding is both created by and instrumental in the design of narrative, gameplay, art, audio, and more. Collaborative Worldbuilding for Video Games encourages mutual respect and collaboration among teams and provides game writers and narrative designers tools for effectively incorporating other job roles into their own worldbuilding practice and vice versa. Features: Provides in-depth exploration of worldbuilding via respective job disciplines Deep dives and case studies into a variety of games, both AAA and indie Includes boxed articles for deeper interrogation and exploration of key ideas Contains templates and checklists for practical tips on worldbuilding",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781000846362"
          },
          {
            "type": "ISBN_10",
            "identifier": "1000846369"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 165,
        "printType": "BOOK",
        "categories": [
          "Games & Activities"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=KCunEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=KCunEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=KCunEAAAQBAJ&pg=PT33&dq=elden+ring&hl=&cd=21&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=KCunEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=KCunEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 48.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 37.72,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=KCunEAAAQBAJ&rdid=book-KCunEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 48990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 37720000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Collaborative_Worldbuilding_for_Video_Ga-sample-epub.acsm?id=KCunEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Collaborative_Worldbuilding_for_Video_Ga-sample-pdf.acsm?id=KCunEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=KCunEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e ( From Software , 2022 ) has a really robust world built up from individual elements , like enemies ... \u003cb\u003eElden Ring\u003c/b\u003e and the games like it are full of this kind of worldbuilding housed in the ways items , weapons , spells&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "fFHNEAAAQBAJ",
      "etag": "hxJSGrhgaCg",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/fFHNEAAAQBAJ",
      "volumeInfo": {
        "title": "Practical Game Design",
        "subtitle": "A modern and comprehensive guide to video game design",
        "authors": [
          "Adam Kramarzewski",
          "Ennio De Nucci"
        ],
        "publisher": "Packt Publishing Ltd",
        "publishedDate": "2023-08-18",
        "description": "Arm yourself with the practical skills and cutting-edge insights necessary to successfully design captivating games across a variety of genres and platforms with the help of this part-color guide Key Features Master the skills, processes, and techniques essential for working in a professional setting Grasp the core principles and processes of level design, world building, and storytelling Design, implement, and refine high-quality features and mechanics for contemporary video games Purchase of the print or Kindle book includes a free PDF eBook Book DescriptionIf you’re in search of a cutting-edge actionable guide to game design, your quest ends here! Immerse yourself in the fundamentals of game design with expert guidance from veterans with decades of game design experience across a variety of genres and platforms. The second edition of this book remains dedicated to its original goal of helping you master the fundamentals of game design in a practical manner with the addition of some of the latest trends in game design and a whole lot of fresh, real-world examples from games of the current generation. This update brings a new chapter on games as a service, explaining the evolving role of the game designer and diving deeper into the design of games that are meant to be played forever. From conceptualizing a game idea, you’ll gradually move on to devising a design plan and adapting solutions from existing games, exploring the craft of producing original game mechanics, and eliminating anticipated design risks through testing. You’ll then be introduced to level design, interactive storytelling, user experience and accessibility. By the end of this game design book, you’ll have learned how to wrap up a game ahead of its release date, work through the challenges of designing free-to-play games and games as a service, and significantly improve their quality through iteration, playtesting, and polishing.What you will learn Define the scope and structure of a game project Conceptualize a game idea and present it to others Design gameplay systems and communicate them clearly and thoroughly Build and validate engaging game mechanics Design successful games as a service and prepare them for live operations Improve the quality of a game through playtesting and meticulous polishing Who this book is for Whether you are a student eager to design your very first game or a game designer looking to expand your skill set, this book will help you master the fundamentals of game design across all stages of game development. With a focus on best practices and a pragmatic approach, Practical Game Design offers insights into the art and craft of game design from two senior game designers, with insider knowledge that even veterans will find valuable. While prior experience with game development is not absolutely necessary, having basic knowledge of popular video games will prove helpful.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781803233901"
          },
          {
            "type": "ISBN_10",
            "identifier": "1803233907"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 446,
        "printType": "BOOK",
        "categories": [
          "Computers"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.5.5.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=fFHNEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=fFHNEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=fFHNEAAAQBAJ&pg=PA23&dq=elden+ring&hl=&cd=22&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=fFHNEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=fFHNEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 39.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 31.19,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=fFHNEAAAQBAJ&rdid=book-fFHNEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 39990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 31190000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true
        },
        "pdf": {
          "isAvailable": true
        },
        "webReaderLink": "http://play.google.com/books/reader?id=fFHNEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e. It is the last in their Souls-like game catalog. If we look at its features individually, nothing stands out as a unique, never-seen-before game mechanic. The biggest USP for \u003cb\u003eElden Ring\u003c/b\u003e is that is an Open World game, a&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "ol8FEQAAQBAJ",
      "etag": "kuvCqfvTWKA",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/ol8FEQAAQBAJ",
      "volumeInfo": {
        "title": "Graveyard Gothic",
        "authors": [
          "Eric Parisot",
          "David McAllister",
          "Xavier Aldana Reyes"
        ],
        "publisher": "Manchester University Press",
        "publishedDate": "2024-04-30",
        "description": "Graveyard Gothic is the first sustained consideration of the graveyard as a key Gothic locale. This volume examines various iterations of the Gothic graveyard (and other burial sites) from the eighteenth century to the twenty-first, as expressed in numerous forms of culture and media including poetry, fiction, TV, film and video games. The volume also extends its geographic scope beyond British traditions to accommodate multiple cultural perspectives, including those from the US, Mexico, Japan, Australia, India and Eastern Europe. The seventeen chapters from key international Gothic scholars engage a range of theoretical frameworks, including the historical, material, colonial, political and religious. With a critical introduction offering a platform for further scholarship and a coda mapping potential future critical and cultural developments, Graveyard Gothic is a landmark volume defining a new area of Gothic studies.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781526166302"
          },
          {
            "type": "ISBN_10",
            "identifier": "1526166305"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 432,
        "printType": "BOOK",
        "categories": [
          "Literary Criticism"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.4.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=ol8FEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=ol8FEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=ol8FEQAAQBAJ&pg=PT393&dq=elden+ring&hl=&cd=23&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=ol8FEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=ol8FEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 127,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 101.6,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=ol8FEQAAQBAJ&rdid=book-ol8FEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 127000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 101600000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Graveyard_Gothic-sample-epub.acsm?id=ol8FEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Graveyard_Gothic-sample-pdf.acsm?id=ol8FEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=ol8FEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e devote themselves to obliterating these aberrant undead, whose source of unlife is the festering corpse of a deity whose body is actively spreading throughout the world like a fungus ... \u003cb\u003eElden Ring\u003c/b\u003e (2022), reinforcing."
      }
    },
    {
      "kind": "books#volume",
      "id": "ddwoEQAAQBAJ",
      "etag": "ikw7X2y76n8",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/ddwoEQAAQBAJ",
      "volumeInfo": {
        "title": "Music and Sonic Environments in Video Games",
        "subtitle": "Listening to and Performing Ludic Soundscapes",
        "authors": [
          "Kate Galloway",
          "Elizabeth Hambleton"
        ],
        "publisher": "Taylor & Francis",
        "publishedDate": "2024-11-06",
        "description": "Music and Sonic Environments in Video Games brings together a range of perspectives that explore how music and sound in video games interact with virtual and real environments, often in innovative and unexpected ways. Drawing on a range of game case studies and disciplinary perspectives, the contributors consider the sonic environment in games as its own storytelling medium. Highlighting how dynamic video game soundscapes respond to players’ movements, engage them in collaborative composition, and actively contribute to worldbuilding, the chapters discuss topics including genre conventions around soundscape design, how sonic environments shape players’ perceptions, how game sound and music model ecological processes and nonhuman relationships, and issues of cultural and geographic representation. Together, the essays in this volume bring game music and sound into the environmental humanities and transform our understanding of sonic environments as an essential part of storytelling in interactive media. Engaging a wide variety of game genres and communities of play, this book will be of interest to students and scholars of music, media studies, critical game studies, popular culture, and sound studies.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781040135372"
          },
          {
            "type": "ISBN_10",
            "identifier": "1040135374"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 222,
        "printType": "BOOK",
        "categories": [
          "Music"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=ddwoEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=ddwoEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=ddwoEQAAQBAJ&pg=PT207&dq=elden+ring&hl=&cd=24&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=ddwoEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=ddwoEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 56.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 42.74,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=ddwoEQAAQBAJ&rdid=book-ddwoEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 56990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 42740000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Music_and_Sonic_Environments_in_Video_Ga-sample-epub.acsm?id=ddwoEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Music_and_Sonic_Environments_in_Video_Ga-sample-pdf.acsm?id=ddwoEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=ddwoEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e , it also fits the category of functional atmospheric music . This is a cue that belongs to this location and is determining for its atmosphere , the solo horn sounding almost ... \u003cb\u003eElden Ring\u003c/b\u003e . Screenshot by the author ."
      }
    },
    {
      "kind": "books#volume",
      "id": "ZMX5EAAAQBAJ",
      "etag": "5Oxe09twjdE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/ZMX5EAAAQBAJ",
      "volumeInfo": {
        "title": "Game Design Deep Dive",
        "subtitle": "Soulslike",
        "authors": [
          "Joshua Bycer"
        ],
        "publisher": "CRC Press",
        "publishedDate": "2024-05-02",
        "description": "Game Design Critic Joshua Bycer is back with another entry in the Game Design Deep Series to focus on the youngest genre yet: soulslikes. Over a decade, From Software defined a new genre that has led to studios chasing after them hit after hit. In this book, Josh will cover the history of the genre and popular soulslike games of the 2010s and discuss what aspects of design make a game a soulslike. The first book looking at the history of the genre A breakdown of both action and RPG design for fans and designers of both A lesson on difficulty in games and why harder doesn’t mean better",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781040020814"
          },
          {
            "type": "ISBN_10",
            "identifier": "104002081X"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 184,
        "printType": "BOOK",
        "categories": [
          "Computers"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=ZMX5EAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=ZMX5EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=ZMX5EAAAQBAJ&pg=RA1-PT117&dq=elden+ring&hl=&cd=25&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=ZMX5EAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=ZMX5EAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 55.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 43.11,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=ZMX5EAAAQBAJ&rdid=book-ZMX5EAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 55990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 43110000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Game_Design_Deep_Dive-sample-epub.acsm?id=ZMX5EAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Game_Design_Deep_Dive-sample-pdf.acsm?id=ZMX5EAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=ZMX5EAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eElden Ring\u003c/b\u003e - sized experience as your first project , that&#39;s not going to happen either . Part of the growth that studios and developers have is being able to not only improve their processes but also refine their gameplay and design&nbsp;..."
      }
    }
  ]
}
","status":200,"url":"https://www.googleapis.com/books/v1/volumes?q=elden+ring&maxResults=25&key=AIzaSyB0h8Chg6lBoHUDHUbOHY83sceJP_O_Ga4"},"revalidate":31536000,"tags":[]}