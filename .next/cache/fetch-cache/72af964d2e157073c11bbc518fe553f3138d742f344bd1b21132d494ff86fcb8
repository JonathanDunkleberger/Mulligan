{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Sat, 23 Aug 2025 22:41:28 GMT","server":"ESF","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{
  "kind": "books#volumes",
  "totalItems": 1000000,
  "items": [
    {
      "kind": "books#volume",
      "id": "GdAyEAAAQBAJ",
      "etag": "YjoYUA4fYts",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/GdAyEAAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Year By Year New Edition",
        "authors": [
          "Kristin Baver",
          "Pablo Hidalgo",
          "Daniel Wallace",
          "Ryder Windham"
        ],
        "publisher": "Penguin",
        "publishedDate": "2021-11-02",
        "description": "Discover everything you've ever wanted to know about Star Wars in this complete history of the most famous franchise in movie history. Painstakingly researched and superbly illustrated, Star WarsTM Year By Year: A Visual History, New Edition presents a unique Star Wars timeline-the full history of the amazing Star Wars phenomenon as you've never seen it before. This stunning visual journey features trivia and cultural cornerstones from director George Lucas' early life through to the iconic movie stills, comic books, novels, toys, video games, and theme parks that have spawned from five decades of seminal film making. Fully updated and expanded, this edition encompasses all nine episodes of the original, prequel, and sequel trilogies, along with the standalone movies Rogue One and Solo, and the acclaimed television series, The Mandalorian. Produced in full collaboration with Lucasfilm and written by renowned Star Wars experts, Star Wars Year by Year: A Visual History, New Edition is ideal for Star Wars fanatics and newbies alike. © & TM 2021 Lucasfilm Ltd.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780744055665"
          },
          {
            "type": "ISBN_10",
            "identifier": "0744055660"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 386,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.6.5.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=GdAyEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=GdAyEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=GdAyEAAAQBAJ&pg=PA197&dq=star+wa&hl=&cd=1&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=GdAyEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=GdAyEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 14.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 14.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=GdAyEAAAQBAJ&rdid=book-GdAyEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 14990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 14990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Year_By_Year_New_Edition-sample-epub.acsm?id=GdAyEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Year_By_Year_New_Edition-sample-pdf.acsm?id=GdAyEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=GdAyEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e check and a replacement can . KENOBI PEPSI OCTOBER - DECEMBER 1999 DECEMBER \u003cb\u003eSTAR WARS\u003c/b\u003e EPISODE I THE PHANTON HENARE AMARNING 50 Lost on Mars December 3 : NASA loses radio contact with the Mars Polar Lander , moments before the&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "pByKDwAAQBAJ",
      "etag": "IAL1SgRwcJU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/pByKDwAAQBAJ",
      "volumeInfo": {
        "title": "The Best of Star Wars Insider Volume 4",
        "authors": [
          "Jonathan Wilkins"
        ],
        "publisher": "Titan Comics",
        "publishedDate": "2016-11-22",
        "description": "Explore the galaxy far, far away. Four decades after the original Star Wars was released, changing cinema forever, the saga continues with all-new movies, books, comics, video games, and TV spin-offs. This collection of interviews and behind-the-scenes features includes: Daisy Ridley on playing Rey in The Force Awakens, an exploration of rare prototype toys that never made it into stores, and Mark Hamill’s thoughts on working with Sir Alec Guinness. “The Best of Star Wars Insider proves we don’t know all there is to know about Star Wars.” – New York Journal of Books",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781785855986"
          },
          {
            "type": "ISBN_10",
            "identifier": "1785855980"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 178,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=pByKDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=pByKDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=pByKDwAAQBAJ&pg=PA63&dq=star+wa&hl=&cd=2&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=pByKDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=pByKDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=pByKDwAAQBAJ&rdid=book-pByKDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Best_of_Star_Wars_Insider_Volume_4-sample-pdf.acsm?id=pByKDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=pByKDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eSTAR WARS\u003c/b\u003e 31 40r4 DIRECT SALES THE DARK HORSE THE HUNT FOR AURRA SING YEARS \u003cb\u003eSTAR WARS\u003c/b\u003e DARTH MAUL MARZ DUURSEMA MAGYAR McCAIC \u003cb\u003eStar Wars\u003c/b\u003e : Darth Maul ( 2000 ) The action is fast and furious as Darth Maul single - handedly wipes out a&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "E8BLDwAAQBAJ",
      "etag": "XqUWXteVkjw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/E8BLDwAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Lost Stars, Vol. 1 (manga)",
        "authors": [
          "Claudia Gray"
        ],
        "publisher": "Yen Press LLC",
        "publishedDate": "2018-05-08",
        "description": "The Empire can be seductive, particularly if you’re an aspiring young pilot... Sharing a love of ships and an admiration for the Empire, childhood friends Thane Kyrell and Ciena Ree enroll in the Imperial Academy in the hopes of realizing their dream of joining the fleet. The more they learn, however, the more their loyalties—to the Empire and to each other—are put to the test. Will Thane and Ciena’s friendship—or even they themselves—survive the trials ahead?",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781975382285"
          },
          {
            "type": "ISBN_10",
            "identifier": "1975382285"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 260,
        "printType": "BOOK",
        "categories": [
          "Comics & Graphic Novels"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "2.5.3.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=E8BLDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=E8BLDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=E8BLDwAAQBAJ&pg=PA256&dq=star+wa&hl=&cd=3&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=E8BLDwAAQBAJ&dq=star+wa&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_Lost_Stars_Vol_1_manga.html?hl=&id=E8BLDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Lost_Stars_Vol_1_manga-sample-epub.acsm?id=E8BLDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Lost_Stars_Vol_1_manga-sample-pdf.acsm?id=E8BLDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=E8BLDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... WARS ** \u003cb\u003eSTAR WARS\u003c/b\u003e LOST STARS * LOST STARS STARS マーズロスト・スターズロスト・スターズ R WARS RS L S T TAR S S 0 S T S LOST STARS X \u003cb\u003eSTAR WARS\u003c/b\u003e X ロスト・スターズロス TAR STA LS S T S TAR \u003cb\u003eSTAR WA\u003c/b\u003e LOST S ターズ R R S 0 S T S T ARS ロスト・"
      }
    },
    {
      "kind": "books#volume",
      "id": "o2oStlohFv4C",
      "etag": "D2Fr7QZvOn0",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/o2oStlohFv4C",
      "volumeInfo": {
        "title": "Department of Agriculture and Related Agencies Appropriations for Fiscal Year 1969, Hearings Before ... 90-2, on H.R. 16913",
        "authors": [
          "United States. Congress. Senate. Appropriations"
        ],
        "publishedDate": "1968",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "STANFORD:36105119581721"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 1912,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "3.14.14.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=o2oStlohFv4C&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=o2oStlohFv4C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=o2oStlohFv4C&pg=RA3-PA1433&dq=star+wa&hl=&cd=4&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=o2oStlohFv4C&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=o2oStlohFv4C"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=o2oStlohFv4C&rdid=book-o2oStlohFv4C&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/Department_of_Agriculture_and_Related_Ag.epub?id=o2oStlohFv4C&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=o2oStlohFv4C&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eWA\u003c/b\u003e BOX 8 , KAHLOTUS \u003cb\u003eWA\u003c/b\u003e KAHLOTUS \u003cb\u003eWA\u003c/b\u003e CONNELL \u003cb\u003eWA\u003c/b\u003e BOX 55 , CONNELL \u003cb\u003eWA STAR\u003c/b\u003e ROUTE , MESA НА LLS D TAYLOR AND SONS MESA \u003cb\u003eWA\u003c/b\u003e BERT LONEY EA ROBERTS INE REEVE IRL JONES BOX 176 , CONNELL \u003cb\u003eWA\u003c/b\u003e BOX 395 , CONNELL \u003cb\u003eWA\u003c/b\u003e BOX 35.CONNELL \u003cb\u003eWA\u003c/b\u003e ELTOPIA \u003cb\u003eWA\u003c/b\u003e WE&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "72Z2EAAAQBAJ",
      "etag": "uFuNjmquI/w",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/72Z2EAAAQBAJ",
      "volumeInfo": {
        "title": "The History and Politics of Star Wars",
        "subtitle": "Death Stars and Democracy",
        "authors": [
          "Chris Kempshall"
        ],
        "publisher": "Taylor & Francis",
        "publishedDate": "2022-08-11",
        "description": "This book provides the first detailed and comprehensive examination of all the materials making up the Star Wars franchise relating to the portrayal and representation of real-world history and politics. Drawing on a variety of sources, including films, published interviews with directors and actors, novels, comics, and computer games, this volume explores the ways in which historical and contemporary events have been repurposed within Star Wars. It focuses on key themes such as fascism and the Galactic Empire, the failures of democracy, the portrayal of warfare, the morality of the Jedi, and the representations of sex, gender, and race. Through these themes, this study highlights the impacts of the fall of the Soviet Union, the War on Terror, and the failures of the United Nations upon the ‘galaxy far, far away’. By analysing and understanding these events and their portrayal within Star Wars, it shows how the most popular media franchise in existence aims to speak about wider contemporary events and issues. The History and Politics of Star Wars is useful for upper-level undergraduates, postgraduates, and scholars of a variety of disciplines such as transmedia studies, science fiction, cultural studies, and world history and politics in the twentieth and twenty-first centuries.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781351382700"
          },
          {
            "type": "ISBN_10",
            "identifier": "1351382705"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 205,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=72Z2EAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=72Z2EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=72Z2EAAAQBAJ&pg=PT170&dq=star+wa&hl=&cd=5&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=72Z2EAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=72Z2EAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 54.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 43.44,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=72Z2EAAAQBAJ&rdid=book-72Z2EAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 54990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 43440000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_History_and_Politics_of_Star_Wars-sample-epub.acsm?id=72Z2EAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_History_and_Politics_of_Star_Wars-sample-pdf.acsm?id=72Z2EAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=72Z2EAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e New Jedi Order: Round Robin Interview (Part 9)&#39;, theexpandeduniverse, 22 September 2020, www.theexpandeduniverse.com/post/\u003cb\u003estar\u003c/b\u003e-\u003cb\u003ewars\u003c/b\u003e-new-jedi-order-round-robin- interview-part-9. 101 Matt Wilkins, &#39;\u003cb\u003eStar Wars\u003c/b\u003e New Jedi Order&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "9yU2AQAAIAAJ",
      "etag": "0Yl9WdhXpqw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/9yU2AQAAIAAJ",
      "volumeInfo": {
        "title": "Department of Agriculture and Related Agencies Appropriations",
        "subtitle": "Hearings Before the Subcommittee of the Committee on Appropriations",
        "authors": [
          "United States. Congress. Senate. Committee on Appropriations"
        ],
        "publishedDate": "1969",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "UCAL:$B656743"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 1634,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "5.11.12.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=9yU2AQAAIAAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=9yU2AQAAIAAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=9yU2AQAAIAAJ&pg=PA1433&dq=star+wa&hl=&cd=6&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=9yU2AQAAIAAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=9yU2AQAAIAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=9yU2AQAAIAAJ&rdid=book-9yU2AQAAIAAJ&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/Department_of_Agriculture_and_Related_Ag.epub?id=9yU2AQAAIAAJ&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=9yU2AQAAIAAJ&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eSTAR\u003c/b\u003e ROUTE , MESA \u003cb\u003eWA\u003c/b\u003e CONNELL \u003cb\u003eWA\u003c/b\u003e CONNELL \u003cb\u003eWA\u003c/b\u003e BOX 8 , KAHLOTUS \u003cb\u003eWA\u003c/b\u003e KAHLOTUS \u003cb\u003eWA\u003c/b\u003e CONNELL \u003cb\u003eWA\u003c/b\u003e BOX 55 , CONNELL \u003cb\u003eWA\u003c/b\u003e JACK GANNON ROBERT HERRON \u003cb\u003eSTAR\u003c/b\u003e ROUTE , MESA \u003cb\u003eWA\u003c/b\u003e KAHLOTUS \u003cb\u003eWA\u003c/b\u003e WELLS D TAYLOR AND SONS MESA \u003cb\u003eWA\u003c/b\u003e ALBERT LONEY BOX 176 , CONNELL \u003cb\u003eWA\u003c/b\u003e JOE A&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "zkT9EAAAQBAJ",
      "etag": "EIZsifFPmvA",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/zkT9EAAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars: Return of the Jedi: A Visual Archive",
        "subtitle": "Celebrating the Original Trilogy's Iconic Conclusion and Its Indelible Influence on a Galaxy Far, Far Away",
        "authors": [
          "Kelly Knox",
          "Clayton Sandell",
          "S.T. Bende"
        ],
        "publisher": "Simon and Schuster",
        "publishedDate": "2024-04-23",
        "description": "Celebrate Return of the Jedi with this deluxe volume that presents incredible photography and concept art, complemented by anecdotes about the film’s production. Drawing connections from the film to contemporary Star Wars storytelling, this book also offers a fresh perspective on its indelible influence. Featuring a wealth of inserts such as booklets and foldout pages, this book is a fascinating tribute to the epic conclusion of the original Star Wars trilogy. Return of the Jedi didn’t just conclude the original Star Wars trilogy—its themes, structure, and emotional core paved the way for some of the most compelling elements of modern Star Wars storytelling. Filled with photography and concept art, this book celebrates all things Return of the Jedi, while also examining its ties to modern Star Wars stories such as The Mandalorian, The Book of Boba Fett, The Clone Wars, and beyond. Covering essential aspects of Return of the Jedi, this book further examines the film’s legacy by showcasing the movie’s merchandise, novels, comics, and spinoffs. REDISCOVER THE THRILLS OF RETURN OF THE JEDI: This deluxe coffee table book presents the story of Return of the Jedi in a fun and exciting format, with plenty of facts about the production of the film. From the enduring eccentricities of Jabba the Hutt’s palace, to the climactic showdown between Luke Skywalker and Darth Vader, this book explores fan-favorite moments from the beloved movie. A BOUNTY OF SPECIAL ITEMS AND INTERACTIVE FEATURES: Gatefolds, booklets, and other interactive features add a new level of insight to this celebration of the iconic film. CELEBRATE THE LEGACY OF AN EPIC CONCLUSION: Going beyond the production of Return of the Jedi, this book explores forty years of merchandise, books, comics, and spinoffs, including Caravan of Courage: An Ewok Adventure, Ewoks: The Battle for Endor, and the animated Ewoks television show. AN IDEAL GIFT FOR ALL FANS: Return of the Jedi has timeless appeal among movie-goers and aficionados, making this book the perfect gift for the Star Wars fan in your life. COMPLETE YOUR COLLECTION: This book joins Insight Editions’ library of exciting Star Wars titles, including Star Wars: The High Republic: Chronicles of the Jedi, Star Wars: The Lightsaber Collection, and Star Wars: The Secrets of the Wookiees",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9798886633177"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 284,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=zkT9EAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=zkT9EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=zkT9EAAAQBAJ&pg=PA287&dq=star+wa&hl=&cd=7&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=zkT9EAAAQBAJ&dq=star+wa&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_Return_of_the_Jedi_A_Visual_Ar.html?hl=&id=zkT9EAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=zkT9EAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... Wa. AN EWON ADVENTU ABOVE : A page from Joe Johnston&#39;s The Adventures of Teebo . LEFT : Wicket Finds a Way cover art by Pat Paris . HEIR TO THE PUBLISHING EMPIRE Although the \u003cb\u003eStar Wars\u003c/b\u003e saga. JEDI UNLEASHED 287."
      }
    },
    {
      "kind": "books#volume",
      "id": "hhhkAAAAIAAJ",
      "etag": "E4bVaO9txcQ",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/hhhkAAAAIAAJ",
      "volumeInfo": {
        "title": "Department of Agriculture and Related Agencies Appropriations for Fiscal Year 1971",
        "subtitle": "Hearings Before the Subcommittee of the Committee on Appropriations, United States Senate, Ninety-first Congress, Second Session, on H.R. 17923, an Act Making Appropriations for the Department of Agriculture and Related Agencies for the Fiscal Year Ending June 30, 1971, and for Other Purposes",
        "authors": [
          "United States. Congress. House. Committee on Appropriations. Subcommittee on Agriculture--Environmental and Consumer Protection Appropriations"
        ],
        "publishedDate": "1970",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "UCAL:B3406819"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 2036,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.9.7.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=hhhkAAAAIAAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=hhhkAAAAIAAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=hhhkAAAAIAAJ&pg=PA1921&dq=star+wa&hl=&cd=8&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=hhhkAAAAIAAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=hhhkAAAAIAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=hhhkAAAAIAAJ&rdid=book-hhhkAAAAIAAJ&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/Department_of_Agriculture_and_Related_Ag.epub?id=hhhkAAAAIAAJ&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=hhhkAAAAIAAJ&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eSTAR\u003c/b\u003e ROUTE , CONNELL \u003cb\u003eWA\u003c/b\u003e BOX 628 , WASHTUCNA \u003cb\u003eWA\u003c/b\u003e CONNELL \u003cb\u003eWA\u003c/b\u003e TOTAL PAYMENTS 14,083 13,973 13,878 \u003cb\u003eSTAR\u003c/b\u003e ROUTE , MESA \u003cb\u003eWA\u003c/b\u003e BOX 206 , CONNELL \u003cb\u003eWA\u003c/b\u003e 13,308 13,263 KAHLOTUS \u003cb\u003eWA\u003c/b\u003e 13,202 \u003cb\u003eSTAR\u003c/b\u003e ROUTE , MESA \u003cb\u003eWA\u003c/b\u003e 12,989 BOX 85 , CONNELL \u003cb\u003eWA\u003c/b\u003e 12,575 \u003cb\u003eSTAR\u003c/b\u003e&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "p00EAAAAMBAJ",
      "etag": "ef/EnopTDlQ",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/p00EAAAAMBAJ",
      "volumeInfo": {
        "title": "Billboard",
        "publishedDate": "1977-10-15",
        "description": "In its 114th year, Billboard remains the world's premier weekly music publication and a diverse digital, events, brand, content and data licensing platform. Billboard publishes the most trusted charts and offers unrivaled reporting about the latest music, video, gaming, media, digital and mobile entertainment issues and trends.",
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 157,
        "printType": "MAGAZINE",
        "averageRating": 5,
        "ratingsCount": 2,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=p00EAAAAMBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=p00EAAAAMBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=p00EAAAAMBAJ&pg=PT17&dq=star+wa&hl=&cd=9&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=p00EAAAAMBAJ&dq=star+wa&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Billboard.html?hl=&id=p00EAAAAMBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=p00EAAAAMBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003ewa\u003c/b\u003e\\ oi .mother on the production deals.&quot; It&#39;s true thai some ol the artists |n the production compan) ma) be offered ... \u003cb\u003eStar\u003c/b\u003e Wai and &quot;A \u003cb\u003eStar\u003c/b\u003e Is Born&quot; which featur the Oscar-winning &quot;Evergreen&quot; sung by Barbra Streisand-the company&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "uhAvAAAAMAAJ",
      "etag": "L1hSJH9VaPs",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/uhAvAAAAMAAJ",
      "volumeInfo": {
        "title": "Department of Agriculture and Related Agencies Appropriations for Fiscal Year 1969",
        "subtitle": "Hearings Before the Subcommittee of the Committee on Appropriations ... Ninetieth Congress, Second Session--on H.R. 16913",
        "authors": [
          "United States. Congress. Senate. Committee on Appropriations"
        ],
        "publishedDate": "1968",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "LOC:00029834398"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 1536,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "2.9.8.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=uhAvAAAAMAAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=uhAvAAAAMAAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=uhAvAAAAMAAJ&pg=PA1433&dq=star+wa&hl=&cd=10&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=uhAvAAAAMAAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=uhAvAAAAMAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=uhAvAAAAMAAJ&rdid=book-uhAvAAAAMAAJ&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/Department_of_Agriculture_and_Related_Ag.epub?id=uhAvAAAAMAAJ&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=uhAvAAAAMAAJ&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eSTAR\u003c/b\u003e ROUTE , MESA \u003cb\u003eWA\u003c/b\u003e CONNELL \u003cb\u003eWA\u003c/b\u003e CONNELL \u003cb\u003eWA\u003c/b\u003e BOX 8 , KAHLOTUS \u003cb\u003eWA\u003c/b\u003e KAHLOTUS \u003cb\u003eWA\u003c/b\u003e CONNELL \u003cb\u003eWA\u003c/b\u003e BOX 55 , CONNELL \u003cb\u003eWA STAR\u003c/b\u003e ROUTE , MESA \u003cb\u003eWA\u003c/b\u003e KAHLOTUS \u003cb\u003eWA\u003c/b\u003e WELLS D TAYLOR AND SONS MESA \u003cb\u003eWA\u003c/b\u003e 7 ALBERT LONEY JOE A ROBERTS GENE REEVE CARL JONES BOX 176&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "g20HEAAAQBAJ",
      "etag": "BRIOzdBQZck",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/g20HEAAAQBAJ",
      "volumeInfo": {
        "title": "The National Security League, 1914-1922",
        "subtitle": "Wall Street and the War Machine",
        "authors": [
          "Kerry Segrave"
        ],
        "publisher": "McFarland",
        "publishedDate": "2020-10-29",
        "description": "The early 20th century saw the founding of the National Security League, a nationalistic nonprofit organization committed to an expanded military, conscripted service and meritocracy. This book details its history, from its formation in December 1914 through 1922, at which point it was a spent force in decline. Founded by wealthy corporate lawyers based in New York City, it had secret backers in the capitalist class, who had two goals in mind. One was to profit immensely from the newly begun World War I. The other was to control the working classes in times of both war and peace. This agenda was presented to the public under the guise of preparedness, patriotism, and Americanization. Although the league was eventually found by Congress to have violated election spending limits, no sanctions of any kind were ever applied. This history details the secret machinations of an organization dedicated to solidifying the grip of the capitalist class over workers, all under the cover of American pride.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781476640914"
          },
          {
            "type": "ISBN_10",
            "identifier": "1476640912"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 270,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=g20HEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=g20HEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=g20HEAAAQBAJ&pg=PA255&dq=star+wa&hl=&cd=11&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=g20HEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=g20HEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=g20HEAAAQBAJ&rdid=book-g20HEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_National_Security_League_1914_1922-sample-epub.acsm?id=g20HEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_National_Security_League_1914_1922-sample-pdf.acsm?id=g20HEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=g20HEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar\u003c/b\u003e (\u003cb\u003eWashington\u003c/b\u003e), Jan 25, 1917. “Union to aid Americanism founded here.” New York Tribune, May 19, 1921. “Unions attacked.” Labor Journal (Everett WA) ... \u003cb\u003eStar\u003c/b\u003e (\u003cb\u003eWashington\u003c/b\u003e), Jul 14, 1915. “Urges grim war on secret enemies.” Evening Star&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "TWuVemYuX7sC",
      "etag": "2vodlPTRhIY",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/TWuVemYuX7sC",
      "volumeInfo": {
        "title": "Merchant Vessels of the United States...",
        "subtitle": "(including Yachts).",
        "authors": [
          "United States. Coast Guard"
        ],
        "publishedDate": "1957",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "UOM:39015026306582"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "2.4.4.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=TWuVemYuX7sC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=TWuVemYuX7sC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=TWuVemYuX7sC&pg=PA593&dq=star+wa&hl=&cd=12&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=TWuVemYuX7sC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=TWuVemYuX7sC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=TWuVemYuX7sC&rdid=book-TWuVemYuX7sC&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/Merchant_Vessels_of_the_United_States.epub?id=TWuVemYuX7sC&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=TWuVemYuX7sC&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... WA 4 ? we noi . PorgieNA ---- NA &quot; *** kaWA .38 Gerry D. WAS ? Gerry KayWAS 0 Gerle FlienWAS Ger rudeWAS settide ... \u003cb\u003eStar\u003c/b\u003e ----- \u003cb\u003eWA\u003c/b\u003e 4857 Evening \u003cb\u003eStarWA\u003c/b\u003e 4862 North Pass ------ NA 4864 E. Warren Reed ---- WA4865 Elmore Foster&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "5xZz3f16Pj8C",
      "etag": "BP8G0wVfDjc",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/5xZz3f16Pj8C",
      "volumeInfo": {
        "title": "Congressional Record",
        "subtitle": "Proceedings and Debates of the ... Congress",
        "authors": [
          "United States. Congress"
        ],
        "publishedDate": "1995",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "UCR:31210015375114"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 1544,
        "printType": "BOOK",
        "categories": [
          "Law"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.0.1.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=5xZz3f16Pj8C&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=5xZz3f16Pj8C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=5xZz3f16Pj8C&pg=PA33341&dq=star+wa&hl=&cd=13&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=5xZz3f16Pj8C&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=5xZz3f16Pj8C"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=5xZz3f16Pj8C&rdid=book-5xZz3f16Pj8C&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/Congressional_Record.epub?id=5xZz3f16Pj8C&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=5xZz3f16Pj8C&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003estar wars\u003c/b\u003e p want to stan at will cost ra \u003cb\u003estar wa\u003c/b\u003e e bring on th that show a big thre ad Iraq is a they can se might be the o are so p rs simply It is a prop ram . who think Chat a far , if in fatt a rogue cated inte It is the packed&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "VilUE8owmcQC",
      "etag": "8YtKWIuLzPY",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/VilUE8owmcQC",
      "volumeInfo": {
        "title": "Department of Agriculture and Related Agencies Appropriations for Fiscal Year 1970: Program payments made to producers during calendar year 1968; subsidy payments for agricultural exports",
        "authors": [
          "United States. Congress. Senate. Committee on Appropriations"
        ],
        "publishedDate": "1969",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "MINN:31951P01183820Z"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 1740,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.6.6.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=VilUE8owmcQC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=VilUE8owmcQC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=VilUE8owmcQC&pg=PA1652&dq=star+wa&hl=&cd=14&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=VilUE8owmcQC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=VilUE8owmcQC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=VilUE8owmcQC&rdid=book-VilUE8owmcQC&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/Department_of_Agriculture_and_Related_Ag.epub?id=VilUE8owmcQC&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=VilUE8owmcQC&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eWA\u003c/b\u003e WASHTUCNA \u003cb\u003eWA\u003c/b\u003e CONNELL \u003cb\u003eWA\u003c/b\u003e PO BCX 5 , CONNELL \u003cb\u003eWA\u003c/b\u003e CONNELL \u003cb\u003eWA STAR\u003c/b\u003e ROUTE , MESA \u003cb\u003eWA\u003c/b\u003e BOX 85 , CONNELL \u003cb\u003eWA\u003c/b\u003e GREEN GIANT COMPANY MAYNARD BAILIE LARRY VAN BUREN MARVIN JONES DRUMHELLER PH WILLIAM V CASPER NORMAN WELCH WILBUR FLOWERS RODERICK&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "57YPBwAAQBAJ",
      "etag": "rc+Kw0L71ek",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/57YPBwAAQBAJ",
      "volumeInfo": {
        "title": "Modern Analysis and Topology",
        "authors": [
          "Norman R. Howes"
        ],
        "publisher": "Springer Science & Business Media",
        "publishedDate": "2012-12-06",
        "description": "The purpose of this book is to provide an integrated development of modern analysis and topology through the integrating vehicle of uniform spaces. It is intended that the material be accessible to a reader of modest background. An advanced calculus course and an introductory topology course should be adequate. But it is also intended that this book be able to take the reader from that state to the frontiers of modern analysis and topology in-so-far as they can be done within the framework of uniform spaces. Modern analysis is usually developed in the setting of metric spaces although a great deal of harmonic analysis is done on topological groups and much offimctional analysis is done on various topological algebraic structures. All of these spaces are special cases of uniform spaces. Modern topology often involves spaces that are more general than uniform spaces, but the uniform spaces provide a setting general enough to investigate many of the most important ideas in modern topology, including the theories of Stone-Cech compactification, Hewitt Real-compactification and Tamano-Morita Para compactification, together with the theory of rings of continuous functions, while at the same time retaining a structure rich enough to support modern analysis.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781461208334"
          },
          {
            "type": "ISBN_10",
            "identifier": "1461208335"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 434,
        "printType": "BOOK",
        "categories": [
          "Mathematics"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=57YPBwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=57YPBwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=57YPBwAAQBAJ&pg=PA98&dq=star+wa&hl=&cd=15&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=57YPBwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=57YPBwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE_AND_RENTAL",
        "isEbook": true,
        "listPrice": {
          "amount": 54.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 43.44,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=57YPBwAAQBAJ&rdid=book-57YPBwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 54990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 43440000,
              "currencyCode": "USD"
            },
            "giftable": true
          },
          {
            "finskyOfferType": 3,
            "listPrice": {
              "amountInMicros": 19250000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 16750000,
              "currencyCode": "USD"
            },
            "rentalDuration": {
              "unit": "DAY",
              "count": 90
            }
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Modern_Analysis_and_Topology-sample-pdf.acsm?id=57YPBwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=57YPBwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... Star ( p , b ) = N. Also , there is acελ with c &lt; * a and ( c ) ∈ Star ( p , a ) . Then p and y ( c ) both belong to some Wa∈ a . Also y ( c ) ∈ Ve and VC Va . Hence Star ( p , a ) с \u003cb\u003eStar\u003c/b\u003e ( \u003cb\u003eWa\u003c/b\u003e , a ) W1 for some W1∈ band Va Star&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "1BiRMU1npLgC",
      "etag": "GkgA6cBjVzg",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/1BiRMU1npLgC",
      "volumeInfo": {
        "title": "Handbook of Tribal Names of Pennsylvania",
        "subtitle": "Together with Signification of Indian Words",
        "authors": [
          "Thomas K. Donnalley",
          "Larry S. Watson"
        ],
        "publisher": "HISTREE",
        "publishedDate": "1986",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780942594119"
          },
          {
            "type": "ISBN_10",
            "identifier": "0942594118"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 127,
        "printType": "BOOK",
        "categories": [
          "Names, Indian"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "2.4.3.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=1BiRMU1npLgC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=1BiRMU1npLgC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=1BiRMU1npLgC&pg=PA96&dq=star+wa&hl=&cd=16&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=1BiRMU1npLgC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=1BiRMU1npLgC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 19.95,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 11.57,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=1BiRMU1npLgC&rdid=book-1BiRMU1npLgC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 19950000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 11570000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Handbook_of_Tribal_Names_of_Pennsylvania-sample-pdf.acsm?id=1BiRMU1npLgC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=1BiRMU1npLgC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... Wa - chung , spur of the mountain . Wa - chu - sett , the mountain . Wa - co , the heron . Wa - co - nah , bright \u003cb\u003estar\u003c/b\u003e . \u003cb\u003eWa\u003c/b\u003e - cou - ta , a shooter . Wa - dan , thanks . Wa - dig - as - ka - li , brown head . Wa - ga - zu - ti , very&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "SSJoDQAAQBAJ",
      "etag": "EjsNstloLhI",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/SSJoDQAAQBAJ",
      "volumeInfo": {
        "title": "Guinness World Records 2017 Gamer’s Edition",
        "authors": [
          "Guinness World Records"
        ],
        "publisher": "Guinness World Records",
        "publishedDate": "2016-11-15",
        "description": "It’s time to celebrate the 10th anniversary of the Guinness World Records: Gamer’s Edition! With over four million copies sold, this is the ultimate annual for every gaming fan. It’s bursting with the latest facts and stats on your favorite games from the futuristic soccer action of Rocket League to the psychedelic paint battles of Splatoon. And as Star Wars mania explodes once again, we explore everything Jedi in a special feature section. Plus, you’ll get a sneak peek at all-new games from the ever-evolving gaming universe! Get an inside look at the indie game scene, the big-money world of eSports, and a celebration of 25 years of Mario Kart. There’s everything from space shooters such as Destiny, to RPGs such as Fallout 4, to the hit sport series FIFAand Madden. We’ve got sims, strategy games, and horror titles, and we also take a look at the toys-to-life phenomenon. From League of Legends to The Legend of Zelda, it’s all here in the 2017 edition of Guinness World Records: Gamer’s Edition!",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781910561690"
          },
          {
            "type": "ISBN_10",
            "identifier": "191056169X"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 219,
        "printType": "BOOK",
        "categories": [
          "Games & Activities"
        ],
        "averageRating": 3,
        "ratingsCount": 2,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.3.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=SSJoDQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=SSJoDQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=SSJoDQAAQBAJ&pg=PA107&dq=star+wa&hl=&cd=17&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=SSJoDQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=SSJoDQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=SSJoDQAAQBAJ&rdid=book-SSJoDQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Guinness_World_Records_2017_Gamer_s_Edit-sample-epub.acsm?id=SSJoDQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Guinness_World_Records_2017_Gamer_s_Edit-sample-pdf.acsm?id=SSJoDQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=SSJoDQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... MARS STAR M GUINNESS ORLD &quot; THESE AREN&#39;T THE GAMES YOU&#39;RE LOOKING FOR ... &quot; – - JOEL HOPKINS TAKES THE SECURITY OF HIS \u003cb\u003eSTAR WARS\u003c/b\u003e COLLECTION VERY SERIOUSLY INDEED ... WA RDS RECO TH 107 A LONG TIME AGO, IN A GALAXY FAR, FAR AWAY..."
      }
    },
    {
      "kind": "books#volume",
      "id": "Mw_MDAAAQBAJ",
      "etag": "bymMst6jm98",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Mw_MDAAAQBAJ",
      "volumeInfo": {
        "title": "Police Violence in America, 1869-1920",
        "subtitle": "256 Incidents Involving Death or Injury",
        "authors": [
          "Kerry Segrave"
        ],
        "publisher": "McFarland",
        "publishedDate": "2016-08-15",
        "description": "Police violence is not a new phenomenon. In the late 19th and early 20th centuries, police officers in America assaulted or killed many ordinary citizens, often during improper detainments or arrests where no threat existed or no crime had been committed. Based on hundreds of newspaper accounts from 1869 through 1920, this history provides a chronological listing of interactions between police and unarmed citizens in which the citizens--some of them minors--were assaulted or killed. Police who committed such acts often lied to protect themselves, assisted by fellow officers and encouraging the media to demonize the victims. The author provides information on the prosecution and punishment of officers where available.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781476664835"
          },
          {
            "type": "ISBN_10",
            "identifier": "1476664838"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 247,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=Mw_MDAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=Mw_MDAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=Mw_MDAAAQBAJ&pg=PA225&dq=star+wa&hl=&cd=18&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=Mw_MDAAAQBAJ&dq=star+wa&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Police_Violence_in_America_1869_1920.html?hl=&id=Mw_MDAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Police_Violence_in_America_1869_1920-sample-pdf.acsm?id=Mw_MDAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Mw_MDAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar\u003c/b\u003e ( \u003cb\u003eWashington\u003c/b\u003e ) , March 26 , 1873 . &quot; Officer Cross suspended . ” Pittsburgh Dispatch , March 4 , 1892 ... WA ) , June 23 , 1909 . &quot; Police clubber convicted . &quot; New York Times , March 2 , 1907 . &quot; Police court . &quot; Cincinnati&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "5o9qDwAAQBAJ",
      "etag": "yzvdvfJvioY",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/5o9qDwAAQBAJ",
      "volumeInfo": {
        "title": "Collaborative Worldbuilding for Writers and Gamers",
        "authors": [
          "Trent Hergenrader"
        ],
        "publisher": "Bloomsbury Publishing",
        "publishedDate": "2018-10-18",
        "description": "The digital technologies of the 21st century are reshaping how we experience storytelling. More than ever before, storylines from the world's most popular narratives cross from the pages of books to the movie theatre, to our television screens and in comic books series. Plots intersect and intertwine, allowing audiences many different entry points to the narratives. In this sometimes bewildering array of stories across media, one thing binds them together: their large-scale fictional world. Collaborative Worldbuilding for Writers and Gamers describes how writers can co-create vast worlds for use as common settings for their own stories. Using the worlds of Star Wars, Lord of the Rings, A Game of Thrones, and Dungeons & Dragons as models, this book guides readers through a step-by-step process of building sprawling fictional worlds complete with competing social forces that have complex histories and yet are always evolving. It also shows readers how to populate a catalog with hundreds of unique people, places, and things that grow organically from their world, which become a rich repository of story making potential. The companion website collaborativeworldbuilding.com features links to online resources, past worldbuilding projects, and an innovative card system designed to work with this book.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781350016699"
          },
          {
            "type": "ISBN_10",
            "identifier": "1350016691"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 281,
        "printType": "BOOK",
        "categories": [
          "Language Arts & Disciplines"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.2.3.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=5o9qDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=5o9qDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=5o9qDwAAQBAJ&pg=PA241&dq=star+wa&hl=&cd=19&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=5o9qDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=5o9qDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 29.65,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 16.01,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=5o9qDwAAQBAJ&rdid=book-5o9qDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 29650000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 16010000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Collaborative_Worldbuilding_for_Writers-sample-epub.acsm?id=5o9qDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Collaborative_Worldbuilding_for_Writers-sample-pdf.acsm?id=5o9qDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=5o9qDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Trent Hergenrader. 8 George Lucas , \u003cb\u003eStar Wars\u003c/b\u003e: Episode IV – A New Hope ( 20th Century Fox , 1977 ) . 9 George Lucas ... WA : Wizards of the Coast , 2015 ) 7 . 18 Matt Forbeck and Ed Greenwood , “ Volo&#39;s Guide to the Forgotten Realms&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "V0_qCAAAQBAJ",
      "etag": "DGVebrKi58A",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/V0_qCAAAQBAJ",
      "volumeInfo": {
        "title": "Pulsation, Rotation and Mass Loss in Early-Type Stars",
        "subtitle": "Proceedings of the 162nd Symposium of the International Astronomical Union, Held in Antibes-Juan-Les-Pins, France, October 5–8, 1993",
        "authors": [
          "Luis A. Balona",
          "Huib F. Henrichs",
          "Jean Michel Le Contel"
        ],
        "publisher": "Springer Science & Business Media",
        "publishedDate": "2012-12-06",
        "description": "In this Symposium, researchers specializing in pulsation, rotation, magnetic fields and stellar winds are brought together for the first time in order to broaden our understanding of O and B stars. Thanks to advances in digital spectroscopy, new types of pulsating B stars have been discovered. The pulsations can be understood in terms of the recent revision of metal opacities, but the effects of rapid rotation and magnetic fields need further study. Observations in the UV and X-ray regions demonstrate that many B and Be stars show other activity, besides pulsation which is not yet understood. The reason for the enhanced mass loss in Be stars is a question which dominates the Symposium and which remains unanswered, although it is surely to be found in activity at or near the photosphere coupled with rotation. It is shown that the geometry of the circumstellar envelopes around Be stars is indeed a flattened disk as they can now be optically resolved. The variability of radiatively-driven winds from O and B stars are likely related to the rotation of the star. This underlines the central theme of the book: that the various phenomena seen in these stars cannot be studied in isolation.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9789401110303"
          },
          {
            "type": "ISBN_10",
            "identifier": "9401110301"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 554,
        "printType": "BOOK",
        "categories": [
          "Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=V0_qCAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=V0_qCAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=V0_qCAAAQBAJ&pg=PR6&dq=star+wa&hl=&cd=20&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=V0_qCAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=V0_qCAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE_AND_RENTAL",
        "isEbook": true,
        "listPrice": {
          "amount": 54.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 43.44,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=V0_qCAAAQBAJ&rdid=book-V0_qCAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 54990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 43440000,
              "currencyCode": "USD"
            },
            "giftable": true
          },
          {
            "finskyOfferType": 3,
            "listPrice": {
              "amountInMicros": 19250000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 16750000,
              "currencyCode": "USD"
            },
            "rentalDuration": {
              "unit": "DAY",
              "count": 90
            }
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Pulsation_Rotation_and_Mass_Loss_in_Earl-sample-pdf.acsm?id=V0_qCAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=V0_qCAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar\u003c/b\u003e Pulsations \u003cb\u003eW.A.\u003c/b\u003e Dziembowski 55 Convective zones in the envelope of massive \u003cb\u003estars\u003c/b\u003e F.M. Alberts 67 g - Mode ... \u003cb\u003estar\u003c/b\u003e oscillations A.A. Pamyatnykh , \u003cb\u003eW.A.\u003c/b\u003e Dziembowski , P. Moskalik , M.J. Seaton .... 70 The stability of massive&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "RR75DwAAQBAJ",
      "etag": "byvN6uwPsBU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/RR75DwAAQBAJ",
      "volumeInfo": {
        "title": "The Empire Strikes Back",
        "authors": [
          "Rebecca Harrison"
        ],
        "publisher": "Bloomsbury Publishing",
        "publishedDate": "2020-10-29",
        "description": "The Empire Strikes Back (1980), the second film in the original Star Wars trilogy, is often cited as the 'best' and most popular Star Wars movie. In her compelling study, Rebecca Harrison draws on previously unpublished archival research to reveal a variety of original and often surprising perspectives on the film, from the cast and crew who worked on its production through to the audiences who watched it in cinemas. Harrison guides readers on a journey that begins with the film's production in 1979 and ends with a discussion about its contemporary status as an object of reverence and nostalgia. She demonstrates how Empire's meaning and significance has continually shifted over the past 40 years not only within the franchise, but also in broader conversations about film authorship, genre, and identity. Offering new insights and original analysis of Empire via its cultural context, production history, textual analysis, exhibition, reception, and post-1980 re-evaluations of the film, the book provides a timely and relevant reassessment of this enduringly popular film.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781911239994"
          },
          {
            "type": "ISBN_10",
            "identifier": "1911239996"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 113,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.3.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=RR75DwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=RR75DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=RR75DwAAQBAJ&pg=PA82&dq=star+wa&hl=&cd=21&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=RR75DwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=RR75DwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 14.35,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=RR75DwAAQBAJ&rdid=book-RR75DwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 14350000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Empire_Strikes_Back-sample-epub.acsm?id=RR75DwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Empire_Strikes_Back-sample-pdf.acsm?id=RR75DwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=RR75DwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... WA: Epic Ink, 2011), p. 106. 200 Bethany Lacina, &#39;Who Hates \u003cb\u003eStar Wars\u003c/b\u003e for its Newfound 82 BFI FILM CLASSICS."
      }
    },
    {
      "kind": "books#volume",
      "id": "OVv7RfPJIrEC",
      "etag": "1tA9ZNFn35E",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/OVv7RfPJIrEC",
      "volumeInfo": {
        "title": "Percheron Stud Book of America",
        "authors": [
          "Percheron Society of America"
        ],
        "publishedDate": "1919",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "UGA:32108026435944"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 670,
        "printType": "BOOK",
        "categories": [
          "Percheron horse"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=OVv7RfPJIrEC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=OVv7RfPJIrEC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=OVv7RfPJIrEC&pg=PA475&dq=star+wa&hl=&cd=22&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=OVv7RfPJIrEC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=OVv7RfPJIrEC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=OVv7RfPJIrEC&rdid=book-OVv7RfPJIrEC&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/Percheron_Stud_Book_of_America.epub?id=OVv7RfPJIrEC&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=OVv7RfPJIrEC&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003estar\u003c/b\u003e ; left hind foot May 10 , 1917..Laudanum 97607 ( 104044 ) white to above fetlock joint J. S. Miller Mascarette ... \u003cb\u003eW. A.\u003c/b\u003e Smith May 10 , 1917..Pink Pride Jr. 98000 Florine 51479 May 16 , 1917..Pink Pride Jr. 98000 Frances&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "Xc8OAQAAMAAJ",
      "etag": "P6RdL9PN3bw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Xc8OAQAAMAAJ",
      "volumeInfo": {
        "title": "Hand Book of Tribal Names of Pennsylvania",
        "subtitle": "Together with Signification of Indian Words ; Also A History of Great Council of Pennsylvania with Articles Pertaining to the Improved Order of Red Men",
        "authors": [
          "Thomas K. Donnalley"
        ],
        "publishedDate": "1908",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "PSU:000002561677"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 336,
        "printType": "BOOK",
        "categories": [
          "Indians of North America"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.6.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=Xc8OAQAAMAAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=Xc8OAQAAMAAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=Xc8OAQAAMAAJ&pg=PA317&dq=star+wa&hl=&cd=23&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=Xc8OAQAAMAAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=Xc8OAQAAMAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=Xc8OAQAAMAAJ&rdid=book-Xc8OAQAAMAAJ&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/Hand_Book_of_Tribal_Names_of_Pennsylvani.epub?id=Xc8OAQAAMAAJ&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "downloadLink": "http://books.google.com/books/download/Hand_Book_of_Tribal_Names_of_Pennsylvani.pdf?id=Xc8OAQAAMAAJ&hl=&output=pdf&sig=ACfU3U2sZPmiclzrmzxpcIbHusFggQuIWQ&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Xc8OAQAAMAAJ&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... wa - gil - a , the foam . Uty - san - tha , beautiful spirit . V Vau - de - was , land of the Iroquois . W Waa - be ... \u003cb\u003estar\u003c/b\u003e . \u003cb\u003eWa\u003c/b\u003e - cou - ta , a shooter . Wa - dan , thanks . Wa - dig - as - ka - li , brown head . Wa - ga - zu - ti&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "RPLmKJD2r_wC",
      "etag": "NYTb/PYy2Zc",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/RPLmKJD2r_wC",
      "volumeInfo": {
        "title": "Burger King",
        "publisher": "PediaPress",
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 219,
        "printType": "BOOK",
        "averageRating": 5,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=RPLmKJD2r_wC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=RPLmKJD2r_wC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=RPLmKJD2r_wC&pg=PA212&dq=star+wa&hl=&cd=24&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=RPLmKJD2r_wC&dq=star+wa&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Burger_King.html?hl=&id=RPLmKJD2r_wC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Burger_King-sample-pdf.acsm?id=RPLmKJD2r_wC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=RPLmKJD2r_wC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... WA , 156 , 171 Spokesman , 12 Spongebob Squarepants , 63 , 92 Sports agent , 63 SportsCenter , 63 Sprint Nextel , 64 Standard form contract , 142 Starbucks , 107 Star Trek ( film ) , 63 \u003cb\u003eStar Wars\u003c/b\u003e , 42 , 43 , 57 \u003cb\u003eStar Wars\u003c/b\u003e Episode II&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "WpBwRbtq8cEC",
      "etag": "gpIDLfERFMc",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/WpBwRbtq8cEC",
      "volumeInfo": {
        "title": "Eyewitness Companions: Film",
        "authors": [
          "Anita Ganeri",
          "Ronald Bergan"
        ],
        "publisher": "Penguin",
        "publishedDate": "2006-10-16",
        "description": "Not just another film guide–this is a visual road map to the best cinema has to offer. A comprehensive, fun to browse, and easy-to-use source for everything you need to know about movies and the people behind them. From Hollywood to Bollywood, the unique approach will explore every aspect of film and provide pointers on how to watch and understand films of different types, styles, and periods.Covers the history of film, from celluloid to the virtual world of digital FXProfiles the most important historical and contemporary directors, actors, producers, studios, and moreHighlights the top 100 “cornerstone movies” and contains an extensive trivia sectionDetails the principles behind film making styles, from sci-fi to romantic comedy",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780756643461"
          },
          {
            "type": "ISBN_10",
            "identifier": "0756643465"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 514,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.3.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=WpBwRbtq8cEC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=WpBwRbtq8cEC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=WpBwRbtq8cEC&pg=PA465&dq=star+wa&hl=&cd=25&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=WpBwRbtq8cEC&dq=star+wa&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Eyewitness_Companions_Film.html?hl=&id=WpBwRbtq8cEC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Eyewitness_Companions_Film-sample-pdf.acsm?id=WpBwRbtq8cEC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=WpBwRbtq8cEC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Anita Ganeri, Ronald Bergan. \u003cb\u003eStar Wars\u003c/b\u003e George Lucas | 1977 In \u003cb\u003eStar Wars\u003c/b\u003e , a young man , Luke Skywalker , is chosen by destiny to lead the resistance against the Galactic Empire . George Lucas&#39;s fantasy film inspired generations of&nbsp;..."
      }
    }
  ]
}
","status":200,"url":"https://www.googleapis.com/books/v1/volumes?q=star+wa&maxResults=25&key=AIzaSyB0h8Chg6lBoHUDHUbOHY83sceJP_O_Ga4"},"revalidate":31536000,"tags":[]}