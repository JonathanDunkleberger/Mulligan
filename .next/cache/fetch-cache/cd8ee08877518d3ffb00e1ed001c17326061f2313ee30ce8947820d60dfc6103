{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Sat, 23 Aug 2025 22:42:24 GMT","server":"ESF","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{
  "kind": "books#volumes",
  "totalItems": 1000000,
  "items": [
    {
      "kind": "books#volume",
      "id": "PB57P_dOF7EC",
      "etag": "g0VVS0+Nkx4",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/PB57P_dOF7EC",
      "volumeInfo": {
        "title": "Finding the Force of the Star Wars Franchise",
        "subtitle": "Fans, Merchandise, & Critics",
        "authors": [
          "Matthew Kapell",
          "John Shelton Lawrence"
        ],
        "publisher": "Peter Lang",
        "publishedDate": "2006",
        "description": "Textbook",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0820463337"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780820463339"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 332,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.6.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=PB57P_dOF7EC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=PB57P_dOF7EC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=PB57P_dOF7EC&pg=PA89&dq=star+wars&hl=&cd=1&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=PB57P_dOF7EC&dq=star+wars&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Finding_the_Force_of_the_Star_Wars_Franc.html?hl=&id=PB57P_dOF7EC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Finding_the_Force_of_the_Star_Wars_Franc-sample-pdf.acsm?id=PB57P_dOF7EC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=PB57P_dOF7EC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e galaxy , including how it can apply to life on earth , in our own Milky Way galaxy . Especially when viewed in light of thematic parallels with other religious traditions , the films &#39; representation of the Force points toward&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "A0MeEQAAQBAJ",
      "etag": "HEINVB64mJI",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/A0MeEQAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Complete Locations New Edition",
        "authors": [
          "Jason Fry",
          "Emily Shkoukani",
          "Kristin Lund",
          "Simon Beecroft",
          "Kerrie Dougherty",
          "James Luceno"
        ],
        "publisher": "Penguin",
        "publishedDate": "2025-03-11",
        "description": "Explore the worlds of a galaxy far, far away with incredible cross-sections. With more than 60 intricate full-color artworks and 3D maps, explore iconic locations that bring the Star Wars saga to life. This updated edition has been comprehensively updated and includes incredible cross-sections from Star Wars: The Last Jedi, Star Wars: The Rise of Skywalker, Rogue One: A Star Wars Story, Solo: A Star Wars Story, Star Wars: The Mandalorian, and Star Wars: Andor. Uncover the unspeakable secrets of Darth Vader’s castle. Explore the ancient Jedi ruins on Ahch-To. Discover the unmatched opulence of Canto Bight and the brutal efficiency of the Narkina-5 prison complex. Created in close collaboration with Lucasfilm, this book also contains the official map of the Star Wars galaxy, charting hundreds of planets from Ajan Kloss to Zygerria. This comprehensive book makes the perfect gift for any Star Wars fan. Readers will spend hours studying the fascinating artwork to gain new insights into iconic locations from their favorite saga.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780593967102"
          },
          {
            "type": "ISBN_10",
            "identifier": "0593967100"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 226,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=A0MeEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=A0MeEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=A0MeEQAAQBAJ&printsec=frontcover&dq=star+wars&hl=&cd=2&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=A0MeEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=A0MeEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=A0MeEQAAQBAJ&rdid=book-A0MeEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Complete_Locations_New_Edition-sample-epub.acsm?id=A0MeEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Complete_Locations_New_Edition-sample-pdf.acsm?id=A0MeEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=A0MeEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Created in close collaboration with Lucasfilm, this book also contains the official map of the Star Wars galaxy, charting hundreds of planets from Ajan Kloss to Zygerria. This comprehensive book makes the perfect gift for any Star Wars fan."
      }
    },
    {
      "kind": "books#volume",
      "id": "jtHouDm9EEIC",
      "etag": "2l7ukrby280",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/jtHouDm9EEIC",
      "volumeInfo": {
        "title": "Star Wars",
        "subtitle": "The Essential Reader's Companion",
        "authors": [
          "Pablo Hidalgo"
        ],
        "publisher": "Random House Digital, Inc.",
        "publishedDate": "2012",
        "description": "From the original movie tie-in novel through the monumental Fate of the Jedi series, legions of devoted readers have helped expand science fiction's most celebrated film saga into a page-turning print sensation. Now, a comprehensive overview of these sweeping adventures is presented in one beautifully illustrated volume.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780345511195"
          },
          {
            "type": "ISBN_10",
            "identifier": "0345511190"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 498,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.2.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=jtHouDm9EEIC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=jtHouDm9EEIC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=jtHouDm9EEIC&pg=PA481&dq=star+wars&hl=&cd=3&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=jtHouDm9EEIC&dq=star+wars&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars.html?hl=&id=jtHouDm9EEIC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=jtHouDm9EEIC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e Adventure Journal # 1 , &quot; A Glimmer of Hope &quot; 282 \u003cb\u003eStar Wars\u003c/b\u003e Adventure Journal # 2 , &quot; Whispers in the Dark &quot; 282 \u003cb\u003eStar Wars\u003c/b\u003e Adventure Journal # 3 , &quot; Mission to Zila &quot; 302 \u003cb\u003eStar Wars\u003c/b\u003e Adventure Journal # 4 , &quot; Shadows of Darkness &quot;&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "0WCnDwAAQBAJ",
      "etag": "zz2eAIKGO7M",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/0WCnDwAAQBAJ",
      "volumeInfo": {
        "title": "Disney's Star Wars",
        "subtitle": "Forces of Production, Promotion, and Reception",
        "authors": [
          "William Proctor",
          "Richard McCulloch"
        ],
        "publisher": "University of Iowa Press",
        "publishedDate": "2019-07-01",
        "description": "In 2012, Disney purchased Lucasfilm, which meant it also inherited the beloved Star Wars franchise. This corporate marriage sent media critics and fans into a frenzy of speculation about what would happen next with the hugely popular series. Disney’s Star Wars gathers twenty-one noted fan and media studies scholars from around the world to examine Disney’s revival of the franchise. Covering the period from Disney’s purchase through the release of The Force Awakens, the book reveals how fans anticipated, interpreted, and responded to the steady stream of production stories, gossip, marketing materials, merchandise, and other sources in the build-up to the movie’s release. From fears that Princess Leia would be turned into a “Disney princess” to collaborative brand management, the authors explore the shifting relationship between fans, texts, and media industries in the context of a crucial rebranding campaign. The result is a fascinating examination of a critical moment in the iconic series’ history.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781609386443"
          },
          {
            "type": "ISBN_10",
            "identifier": "1609386442"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 409,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "2.3.3.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=0WCnDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=0WCnDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=0WCnDwAAQBAJ&pg=PA392&dq=star+wars&hl=&cd=4&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=0WCnDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=0WCnDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 65,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 52,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=0WCnDwAAQBAJ&rdid=book-0WCnDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 65000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 52000000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Disney_s_Star_Wars-sample-epub.acsm?id=0WCnDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Disney_s_Star_Wars-sample-pdf.acsm?id=0WCnDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=0WCnDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e : Episode VII Trailer ( Disney Toy Story Version ) &quot; ( Bad Mosquito ) , 215 \u003cb\u003eStar Wars\u003c/b\u003e : Force Collection ( video game ) , 133 \u003cb\u003eStar Wars\u003c/b\u003e Galactic Nights , 145 \u003cb\u003eStar Wars\u003c/b\u003e Galaxies ( video game , 2003 ) , 133 \u003cb\u003eStar Wars\u003c/b\u003e : Galaxy of&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "ZXUgEAAAQBAJ",
      "etag": "M6z0j6JkWhg",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/ZXUgEAAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Skywalker – A Family At War",
        "authors": [
          "Kristin Baver"
        ],
        "publisher": "Penguin",
        "publishedDate": "2021-04-06",
        "description": "Uncover the secrets of the Skywalkers: the family that shaped a galaxy far, far away... The Skywalker story has everything: passion, intrigue, heroism, and dark deeds. This revelatory biography explores every twist and turn of the Skywalker dynasty: the slow seduction to the dark side of Anakin; his doomed marriage to Padmé Amidala; the heroics of Luke and Leia; the fall and redemption of Han Solo and Princess Leia's son, Ben; and the struggles of his dyad in the Force, Rey. Leaving no stone unturned in tracing the dynasty's trials and tribulations, this definitive biography of Star Wars' first family explores and explains the deeper, more personal story of the Skywalkers, their characters, motivations, and, against seemingly impossible odds, their ultimate triumph. © AND TM 2021 LUCASFILM LTD.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780744047653"
          },
          {
            "type": "ISBN_10",
            "identifier": "074404765X"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 377,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.6.7.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=ZXUgEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=ZXUgEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=ZXUgEAAAQBAJ&printsec=frontcover&dq=star+wars&hl=&cd=5&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=ZXUgEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=ZXUgEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 10.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 10.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=ZXUgEAAAQBAJ&rdid=book-ZXUgEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 10990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 10990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Skywalker_A_Family_At_War-sample-epub.acsm?id=ZXUgEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Skywalker_A_Family_At_War-sample-pdf.acsm?id=ZXUgEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=ZXUgEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Uncover the secrets of the Skywalkers: the family that shaped a galaxy far, far away... The Skywalker story has everything: passion, intrigue, heroism, and dark deeds."
      }
    },
    {
      "kind": "books#volume",
      "id": "rLzOegLpMJQC",
      "etag": "y8KmcsOGhLg",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/rLzOegLpMJQC",
      "volumeInfo": {
        "title": "William Shakespeare's Star Wars",
        "subtitle": "Verily, A New Hope",
        "authors": [
          "Ian Doescher"
        ],
        "publisher": "Quirk Books",
        "publishedDate": "2013-07-09",
        "description": "The New York Times Best Seller Experience the Star Wars saga reimagined as an Elizabethan drama penned by William Shakespeare himself, complete with authentic meter and verse, and theatrical monologues and dialogue by everyone from Darth Vader to R2D2. Return once more to a galaxy far, far away with this sublime retelling of George Lucas’s epic Star Wars in the style of the immortal Bard of Avon. The saga of a wise (Jedi) knight and an evil (Sith) lord, of a beautiful princess held captive and a young hero coming of age, Star Wars abounds with all the valor and villainy of Shakespeare’s greatest plays. Authentic meter, stage directions, reimagined movie scenes and dialogue, and hidden Easter eggs throughout will entertain and impress fans of Star Wars and Shakespeare alike. Every scene and character from the film appears in the play, along with twenty woodcut-style illustrations that depict an Elizabethan version of the Star Wars galaxy. Zounds! This is the book you’re looking for.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781594746550"
          },
          {
            "type": "ISBN_10",
            "identifier": "1594746559"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 178,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "averageRating": 4,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.5.7.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=rLzOegLpMJQC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=rLzOegLpMJQC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=rLzOegLpMJQC&printsec=frontcover&dq=star+wars&hl=&cd=6&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=rLzOegLpMJQC&dq=star+wars&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/William_Shakespeare_s_Star_Wars.html?hl=&id=rLzOegLpMJQC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/William_Shakespeare_s_Star_Wars-sample-epub.acsm?id=rLzOegLpMJQC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/William_Shakespeare_s_Star_Wars-sample-pdf.acsm?id=rLzOegLpMJQC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=rLzOegLpMJQC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Every scene and character from the film appears in the play, along with twenty woodcut-style illustrations that depict an Elizabethan version of the Star Wars galaxy. Zounds! This is the book you’re looking for."
      }
    },
    {
      "kind": "books#volume",
      "id": "p-wwDwAAQBAJ",
      "etag": "oWd/2hjTl1M",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/p-wwDwAAQBAJ",
      "volumeInfo": {
        "title": "100 Things Star Wars Fans Should Know & Do Before They Die",
        "authors": [
          "Dan Casey"
        ],
        "publisher": "Triumph Books",
        "publishedDate": "2018-05-01",
        "description": "As a Star Wars fan, you've seen the movies, from A New Hope to The Last Jedi, and beyond. And of course you've probably had a faux lightsaber battle or two, pretending to be Luke Skywalker, Rey, or maybe Kylo Ren. But can you name the seven actors who have portrayed Darth Vader? Do you know how Ralph McQuarrie helped shape the world of Star Wars? Are you familiar with Deak Starkiller, Darth Plagueis, or Drew Struzan? Have you seen the infamous Star Wars Holiday Special? 100 Things Star Wars Fans Should Know & Do Before They Die is the ultimate resource for true fans of the galaxy far, far away. In this revised and updated edition, Dan Casey has collected every essential piece of Star Wars knowledge and trivia, as well as must-do activites, and ranks them all from 1 to 100, providing an entertaining and easy-to-follow checklist for viewers old and new to progress on their way to fan superstardom.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781633199835"
          },
          {
            "type": "ISBN_10",
            "identifier": "1633199835"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 464,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.5.6.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=p-wwDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=p-wwDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=p-wwDwAAQBAJ&pg=PT513&dq=star+wars&hl=&cd=7&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=p-wwDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=p-wwDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 11.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 11.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=p-wwDwAAQBAJ&rdid=book-p-wwDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 11990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 11990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/100_Things_Star_Wars_Fans_Should_Know_Do-sample-epub.acsm?id=p-wwDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/100_Things_Star_Wars_Fans_Should_Know_Do-sample-pdf.acsm?id=p-wwDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=p-wwDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e: The Last Jedi&#39;. On Rey&#39;s Parents, Luke&#39;s Fate and More.” The Daily Beast, The Daily Beast Company, 19 Dec. 2017, www.thedailybeast.com/\u003cb\u003estar\u003c/b\u003e-\u003cb\u003ewars\u003c/b\u003e-director-reveals-secrets-of-thelast-jedi-on-reys-parents-lukes-fate-and-more&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "GdAyEAAAQBAJ",
      "etag": "Fk88y3ZPSmU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/GdAyEAAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Year By Year New Edition",
        "authors": [
          "Kristin Baver",
          "Pablo Hidalgo",
          "Daniel Wallace",
          "Ryder Windham"
        ],
        "publisher": "Penguin",
        "publishedDate": "2021-11-02",
        "description": "Discover everything you've ever wanted to know about Star Wars in this complete history of the most famous franchise in movie history. Painstakingly researched and superbly illustrated, Star WarsTM Year By Year: A Visual History, New Edition presents a unique Star Wars timeline-the full history of the amazing Star Wars phenomenon as you've never seen it before. This stunning visual journey features trivia and cultural cornerstones from director George Lucas' early life through to the iconic movie stills, comic books, novels, toys, video games, and theme parks that have spawned from five decades of seminal film making. Fully updated and expanded, this edition encompasses all nine episodes of the original, prequel, and sequel trilogies, along with the standalone movies Rogue One and Solo, and the acclaimed television series, The Mandalorian. Produced in full collaboration with Lucasfilm and written by renowned Star Wars experts, Star Wars Year by Year: A Visual History, New Edition is ideal for Star Wars fanatics and newbies alike. © & TM 2021 Lucasfilm Ltd.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780744055665"
          },
          {
            "type": "ISBN_10",
            "identifier": "0744055660"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 386,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.6.5.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=GdAyEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=GdAyEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=GdAyEAAAQBAJ&pg=PA375&dq=star+wars&hl=&cd=8&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=GdAyEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=GdAyEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 14.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 14.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=GdAyEAAAQBAJ&rdid=book-GdAyEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 14990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 14990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Year_By_Year_New_Edition-sample-epub.acsm?id=GdAyEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Year_By_Year_New_Edition-sample-pdf.acsm?id=GdAyEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=GdAyEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e : Episode II 201 , 203 , 207 \u003cb\u003eStar Wars\u003c/b\u003e : Episode III 227 , 231 , 238 TV work 150 Christie , Gwendoline 331 , 334 Christmas in the Stars : \u003cb\u003eStar Wars\u003c/b\u003e Christmas Album 82 Chronicle 315 Chronicle Books 280 , 294 , 304 , 318 The&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "72Z2EAAAQBAJ",
      "etag": "rsDK17+iXVc",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/72Z2EAAAQBAJ",
      "volumeInfo": {
        "title": "The History and Politics of Star Wars",
        "subtitle": "Death Stars and Democracy",
        "authors": [
          "Chris Kempshall"
        ],
        "publisher": "Taylor & Francis",
        "publishedDate": "2022-08-11",
        "description": "This book provides the first detailed and comprehensive examination of all the materials making up the Star Wars franchise relating to the portrayal and representation of real-world history and politics. Drawing on a variety of sources, including films, published interviews with directors and actors, novels, comics, and computer games, this volume explores the ways in which historical and contemporary events have been repurposed within Star Wars. It focuses on key themes such as fascism and the Galactic Empire, the failures of democracy, the portrayal of warfare, the morality of the Jedi, and the representations of sex, gender, and race. Through these themes, this study highlights the impacts of the fall of the Soviet Union, the War on Terror, and the failures of the United Nations upon the ‘galaxy far, far away’. By analysing and understanding these events and their portrayal within Star Wars, it shows how the most popular media franchise in existence aims to speak about wider contemporary events and issues. The History and Politics of Star Wars is useful for upper-level undergraduates, postgraduates, and scholars of a variety of disciplines such as transmedia studies, science fiction, cultural studies, and world history and politics in the twentieth and twenty-first centuries.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781351382700"
          },
          {
            "type": "ISBN_10",
            "identifier": "1351382705"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 205,
        "printType": "BOOK",
        "categories": [
          "History"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=72Z2EAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=72Z2EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=72Z2EAAAQBAJ&pg=PT92&dq=star+wars&hl=&cd=9&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=72Z2EAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=72Z2EAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 54.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 43.44,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=72Z2EAAAQBAJ&rdid=book-72Z2EAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 54990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 43440000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_History_and_Politics_of_Star_Wars-sample-epub.acsm?id=72Z2EAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_History_and_Politics_of_Star_Wars-sample-pdf.acsm?id=72Z2EAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=72Z2EAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e : Bloodline &quot; Behind the Scenes Details on Twitter &#39; . The \u003cb\u003eStar Wars\u003c/b\u003e Underworld , 8 May 2018 . https://web.archive.org/web/20200606150911/www.starwarsunderworld.com/2016/05/lucasfilms- pablo - hidalgo - shares - star.html&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "uxQjEAAAQBAJ",
      "etag": "rZloPkFpADk",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/uxQjEAAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars and the Hero's Journey",
        "subtitle": "Mythic Character Arcs Through the 12-Film Epic",
        "authors": [
          "Valerie Estelle Frankel"
        ],
        "publisher": "McFarland",
        "publishedDate": "2021-03-29",
        "description": "The original Star Wars trilogy famously follows Joseph Campbell's model for the hero's journey, making Luke Skywalker's story the new hero quest for a modern age. With the nine-plus film saga complete, however, new story patterns have emerged as the hero's journey is imagined over and over for characters of different ages, genders, and backgrounds. The prequels offer the plot arc of the villain's journey through Anakin. Leia and Padme, while damsels in the men's story, break out to undergo their own ordeals. The heroine's journey is exemplified by Rey and Jyn. Obi-Wan, Yoda, and Vader must accept the loss of power and fade into spirit guardians, perpetuating the lifecycle. By the sequel era, the original trio become mentors to the younger generation and finally must do the same. Meanwhile, the Mandalorian explores a different form of the quest as he transforms from immature warrior to patriarch. This book tracks the journeys of over 20 characters throughout the franchise.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781476684291"
          },
          {
            "type": "ISBN_10",
            "identifier": "1476684294"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 240,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=uxQjEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=uxQjEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=uxQjEAAAQBAJ&pg=PA223&dq=star+wars&hl=&cd=10&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=uxQjEAAAQBAJ&dq=star+wars&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_and_the_Hero_s_Journey.html?hl=&id=uxQjEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_and_the_Hero_s_Journey-sample-pdf.acsm?id=uxQjEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=uxQjEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e Episode I : The Phantom Menace . Scholastic , 1999 . Zahn , Timothy . Dark Force Rising . Del Rey , 1992 ... \u003cb\u003eStar Wars\u003c/b\u003e Insider 2 , Titan Books , 2016 , pp . 4-13 . &quot; Luke Skywalker : The Wizard&#39;s Journey . &quot; \u003cb\u003eStar Wars\u003c/b\u003e&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "uG0uCgAAQBAJ",
      "etag": "OAdM7nWSv9U",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/uG0uCgAAQBAJ",
      "volumeInfo": {
        "title": "How Star Wars Conquered the Universe",
        "subtitle": "The Past, Present, and Future of a Multibillion Dollar Franchise",
        "authors": [
          "Chris Taylor"
        ],
        "publisher": "Basic Books",
        "publishedDate": "2015-10-06",
        "description": "In 1973, a young filmmaker named George Lucas scribbled some notes for a far-fetched space-fantasy epic. Some forty years and 37 billion later, Star Wars -- related products outnumber human beings, a growing stormtrooper army spans the globe, and \"Jediism\" has become a religion in its own right. Lucas's creation has grown into far more than a cinematic classic; it is, quite simply, one of the most lucrative, influential, and interactive franchises of all time. Yet incredibly, until now the complete history of Star Wars -- its influences and impact, the controversies it has spawned, its financial growth and long-term prospects -- has never been told. In How Star Wars Conquered the Universe, veteran journalist Chris Taylor traces the series from the difficult birth of the original film through its sequels, the franchise's death and rebirth, the prequels, and the preparations for a new trilogy. Providing portraits of the friends, writers, artists, producers, and marketers who labored behind the scenes to turn Lucas's idea into a legend, Taylor also jousts with modern-day Jedi, tinkers with droid builders, and gets inside Boba Fett's helmet, all to find out how Star Wars has attracted and inspired so many fans for so long. Since the first film's release in 1977, Taylor shows, Star Wars has conquered our culture with a sense of lightness and exuberance, while remaining serious enough to influence politics in far-flung countries and spread a spirituality that appeals to religious groups and atheists alike. Controversial digital upgrades and poorly received prequels have actually made the franchise stronger than ever. Now, with a savvy new set of bosses holding the reins and Episode VII on the horizon, it looks like Star Wars is just getting started. An energetic, fast-moving account of this creative and commercial phenomenon, How Star Wars Conquered the Universe explains how a young filmmaker's fragile dream beat out a surprising number of rivals to gain a diehard, multigenerational fan base -- and why it will be galvanizing our imaginations and minting money for generations to come.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780465097517"
          },
          {
            "type": "ISBN_10",
            "identifier": "0465097510"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 490,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "2.8.10.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=uG0uCgAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=uG0uCgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=uG0uCgAAQBAJ&pg=PT2&dq=star+wars&hl=&cd=11&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=uG0uCgAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=uG0uCgAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 11.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 11.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=uG0uCgAAQBAJ&rdid=book-uG0uCgAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 11990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 11990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/How_Star_Wars_Conquered_the_Universe-sample-epub.acsm?id=uG0uCgAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=uG0uCgAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e&#39; Conquered the Universe—a mustread for any fan, film buff, or student of modern culture.” —Brad Stone, author of The Everything Store: Jeff Bezos and the Age of Amazon “Every \u003cb\u003eStar Wars\u003c/b\u003e fan should pick up a copy of How &#39;\u003cb\u003eStar Wars\u003c/b\u003e&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "pByKDwAAQBAJ",
      "etag": "DgYW3fRBIpg",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/pByKDwAAQBAJ",
      "volumeInfo": {
        "title": "The Best of Star Wars Insider Volume 4",
        "authors": [
          "Jonathan Wilkins"
        ],
        "publisher": "Titan Comics",
        "publishedDate": "2016-11-22",
        "description": "Explore the galaxy far, far away. Four decades after the original Star Wars was released, changing cinema forever, the saga continues with all-new movies, books, comics, video games, and TV spin-offs. This collection of interviews and behind-the-scenes features includes: Daisy Ridley on playing Rey in The Force Awakens, an exploration of rare prototype toys that never made it into stores, and Mark Hamill’s thoughts on working with Sir Alec Guinness. “The Best of Star Wars Insider proves we don’t know all there is to know about Star Wars.” – New York Journal of Books",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781785855986"
          },
          {
            "type": "ISBN_10",
            "identifier": "1785855980"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 178,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=pByKDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=pByKDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=pByKDwAAQBAJ&pg=PA69&dq=star+wars&hl=&cd=12&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=pByKDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=pByKDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=pByKDwAAQBAJ&rdid=book-pByKDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Best_of_Star_Wars_Insider_Volume_4-sample-pdf.acsm?id=pByKDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=pByKDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eSTAR WARS\u003c/b\u003e STAR 25 THE CLONE WAR THE DARK HORSE \u003cb\u003eSTARWARS\u003c/b\u003e KNIGHTS KEI BLIC OF YE OLD THE END OF THE GALAXY AS YOU KNOW IT ! VECTORE YEARS \u003cb\u003eStar Wars\u003c/b\u003e : Vector ( 2008 ) Dark Horse&#39;s first \u003cb\u003eStar Wars\u003c/b\u003e crossover involved four titles , a year of&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "YEhGDAAAQBAJ",
      "etag": "ylpMsTzu01s",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/YEhGDAAAQBAJ",
      "volumeInfo": {
        "title": "The Best of Star Wars Insider Volume 2",
        "authors": [
          "Jonathan Wilkins"
        ],
        "publisher": "Titan",
        "publishedDate": "2016-06-01",
        "description": "Inside the greatest movie saga of them all. From interviews with the cast and crew to expert analysis of the characters from leading Star Wars writers, this book showcases the Star Wars phenomenon in exhaustive detail. This essential collection features the exclusive true story of George Lucas¡¯ struggle to bring Star Wars to the big screen, and how his love of fast-moving vehicles shaped the saga. A must have for Star Wars fans, this retrospective also includes the cast and crew of Star Wars: The Clone Wars on Attack of the Clones, Mark Hamill on life at a Star Wars convention, and what it was really like to work with Jabba the Hutt.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781785855962"
          },
          {
            "type": "ISBN_10",
            "identifier": "1785855964"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 179,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.3.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=YEhGDAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=YEhGDAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=YEhGDAAAQBAJ&pg=PA57&dq=star+wars&hl=&cd=13&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=YEhGDAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=YEhGDAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 19.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=YEhGDAAAQBAJ&rdid=book-YEhGDAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 19990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Best_of_Star_Wars_Insider_Volume_2-sample-epub.acsm?id=YEhGDAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Best_of_Star_Wars_Insider_Volume_2-sample-pdf.acsm?id=YEhGDAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=YEhGDAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e authors . They have an irrepressible creativity to them and a wit sharper than you&#39;d ever believe possible . The interview was done long before the Expanded Universe was made over into the Legends universe , but it pertains to&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "oPYYEQAAQBAJ",
      "etag": "amaolzBSYtw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/oPYYEQAAQBAJ",
      "volumeInfo": {
        "title": "The Star Wars Radio Dramas",
        "subtitle": "Brian Daley and the Serialization That Saved NPR",
        "authors": [
          "Maria Jose Tenuto",
          "John Tenuto"
        ],
        "publisher": "McFarland",
        "publishedDate": "2024-07-18",
        "description": "By 1977 National Public Radio (NPR) was in trouble, plagued by too little funding and small audiences. The phenomenal success of its adaptation of Star Wars as a radio drama in 1981 gave NPR the needed ratings, publicity, and boost in donations that kept it afloat at exactly the time it was threatened the most. Most importantly, Star Wars brought a new audience to NPR. As it did in theaters, where George Lucas's films redefined movie making, so too did NPR's Star Wars forever change the artistic world of radio drama. That a radio network, dependent exclusively on audio, would find a lifeline in one of the most visually dynamic movies ever released is the stuff of irony. Utilizing new interviews with creatives such as Anthony Daniels (C-3PO), Ann Sachs (Princess Leia), Perry King (Han Solo), and director John Madden, and archival research, this book details how an unlikely alliance of academics, radio executives, Lucasfilm employees, actors, and behind-the-scenes artists banded together, despite the obstacles, to create a unique and consequential work. It is also the story of how writer Brian Daley was the fulcrum who made it all possible.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781476653372"
          },
          {
            "type": "ISBN_10",
            "identifier": "1476653372"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 214,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=oPYYEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=oPYYEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=oPYYEQAAQBAJ&pg=PA179&dq=star+wars&hl=&cd=14&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=oPYYEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=oPYYEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 25.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 25.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=oPYYEQAAQBAJ&rdid=book-oPYYEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 25990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 25990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Star_Wars_Radio_Dramas-sample-epub.acsm?id=oPYYEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Star_Wars_Radio_Dramas-sample-pdf.acsm?id=oPYYEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=oPYYEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e: A New Hope Novelization Cov- ers.” \u003cb\u003eStarwars\u003c/b\u003e.com. March 9, 2018. https:// www.\u003cb\u003estarwars\u003c/b\u003e.com/news/check-out-over- 40-years-of-\u003cb\u003estar\u003c/b\u003e-\u003cb\u003ewars\u003c/b\u003e-a-new-hope-novel ization-covers. 35. Newborn, Alex. “A Fan Interviews Brian Daley.” The&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "0osIEAAAQBAJ",
      "etag": "mk5cWH92kaU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/0osIEAAAQBAJ",
      "volumeInfo": {
        "title": "The Transmedia Franchise of Star Wars TV",
        "authors": [
          "Dominic J. Nardi",
          "Derek R. Sweet"
        ],
        "publisher": "Springer Nature",
        "publishedDate": "2020-11-11",
        "description": "While previous work on the Star Wars universe charts the Campbellian mythic arcs, political representations, and fan reactions associated with the films, this volume takes a transmedial approach to the material, recognizing that Star Wars TV projects interact with and relate to other Star Wars texts. The chapters in this volume take as a basic premise that the televisual entrants into the Star Wars transmedia storyworld are both important texts in the history of popular culture and also key to understanding how the Star Wars franchise—and, thus, industry-wide transmedia storytelling strategies—developed. The book expands previous work to consider television studies and sharp cultural criticism together in an effort to bring both long-running popular series, long-ignored texts, and even toy commercials to bear on the franchise’s complex history.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9783030529581"
          },
          {
            "type": "ISBN_10",
            "identifier": "3030529584"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 213,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=0osIEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=0osIEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=0osIEAAAQBAJ&pg=PA198&dq=star+wars&hl=&cd=15&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=0osIEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=0osIEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE_AND_RENTAL",
        "isEbook": true,
        "listPrice": {
          "amount": 109,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 87.2,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=0osIEAAAQBAJ&rdid=book-0osIEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 109000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 87200000,
              "currencyCode": "USD"
            },
            "giftable": true
          },
          {
            "finskyOfferType": 3,
            "listPrice": {
              "amountInMicros": 38150000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 33190000,
              "currencyCode": "USD"
            },
            "rentalDuration": {
              "unit": "DAY",
              "count": 90
            }
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Transmedia_Franchise_of_Star_Wars_TV-sample-epub.acsm?id=0osIEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Transmedia_Franchise_of_Star_Wars_TV-sample-pdf.acsm?id=0osIEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=0osIEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003estarwars\u003c/b\u003e.com/tv-shows/clone-wars/revenge-trivia- gallery . Lucasfilm Ltd. &quot; The Legendary \u003cb\u003eStar Wars\u003c/b\u003e Expanded Universe Turns A New Page . &quot; April 25 , 2014b . http://www.\u003cb\u003estarwars\u003c/b\u003e.com/news/the-legendary-\u003cb\u003estar\u003c/b\u003e- \u003cb\u003ewars\u003c/b\u003e - expanded - universe&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "qa3JEAAAQBAJ",
      "etag": "9qpuboZuKIM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/qa3JEAAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars: Essays Exploring a Galaxy Far, Far Away",
        "authors": [
          "Emily Strand",
          "Amy H. Sturgis"
        ],
        "publisher": "Vernon Press",
        "publishedDate": "2023-09-12",
        "description": "'Star Wars' is a global phenomenon that in 2022 celebrated its 45th year of transmedia storytelling, and it has never been more successful than it is today. More 'Star Wars' works than ever are currently available or in simultaneous development, including live-action and animated series, novels, comics, and merchandise, as well as the feature films for which the franchise is best known. 'Star Wars' fandom is worldwide, time-tested, and growing; academic interest in the franchise, both inside and outside of the classroom, is high. This accessible and multidisciplinary anthology covers topics across the full history of the franchise. With a range of essays by authors whose disciplines run from culture and religious studies to film, feminism, and philology, 'Star Wars: Essays Exploring a Galaxy Far, Far Away' speaks to academics in the field, students in the classroom, and anyone looking to broaden their understanding and deepen their appreciation for 'Star Wars'.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781648897559"
          },
          {
            "type": "ISBN_10",
            "identifier": "164889755X"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 252,
        "printType": "BOOK",
        "categories": [
          "Art"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=qa3JEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=qa3JEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=qa3JEAAAQBAJ&pg=PA24&dq=star+wars&hl=&cd=16&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=qa3JEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=qa3JEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 97,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 97,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=qa3JEAAAQBAJ&rdid=book-qa3JEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 97000000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 97000000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Essays_Exploring_a_Galaxy_Far-sample-pdf.acsm?id=qa3JEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=qa3JEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Emily Strand, Amy H. Sturgis. LucasArts. \u003cb\u003eStar Wars\u003c/b\u003e: Jedi Knight: Dark Forces II. LucasArts. Microsoft Windows. 1997 ... \u003cb\u003eStar Wars\u003c/b\u003e: The Clone 24 Chapter 1."
      }
    },
    {
      "kind": "books#volume",
      "id": "0tpwDwAAQBAJ",
      "etag": "+JzC48cXD/Y",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/0tpwDwAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars Meets the Eras of Feminism",
        "subtitle": "Weighing All the Galaxy’s Women Great and Small",
        "authors": [
          "Valerie Estelle Frankel"
        ],
        "publisher": "Bloomsbury Publishing PLC",
        "publishedDate": "2020-07-07",
        "description": "Star Wars defined popular, big-screen science fiction. Still, what many viewers best recall is assertive, hilarious Leia, the diminutive princess with a giant blaster who had to save them all. As the 1977 film arrived, women were marching for equality and demanding equal pay, with few onscreen role models. Leia echoed their struggle and showed them what they could be. Two more films joined in, though by the early eighties, post-feminism was pushing back and shoving the tough heroine into her pornographic gold bikini. After a sixteen-year gap, the prequels catered to a far different audience. Queen Amidala’s decoy power originates in how dominated she is by her massive royal gowns. This obsession with fashion but also costuming as a girly superpower fits well with the heroines of the time. The third wavers filled the screens with glamorous, mighty girls – strong but not too strong, like the idealistic teen Ahsoka of Clone Wars. However, space colonialism, abusive romance, and sacrifice left these characters a work in progress. Finally, the sequel era has introduced many more women to fill the galaxy: Rey, Jyn, Rose, Maz, Qi’ra, Val, L3-37, Captain Phasma, Admiral Holdo, and of course General Leia. Making women the central warriors and leaders while keeping them powerful and nonsexualized emphasizes that they can share in the franchise instead of supporting male Jedi. There’s also more diversity, though it’s still imperfect. Hera and Sabine on the spinoff cartoon Rebels and the many girls in the new franchise Forces of Destiny round out the era, along with toys, picture books, and other hallmarks of a new, more feminist fourth wave for the franchise.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781498583879"
          },
          {
            "type": "ISBN_10",
            "identifier": "1498583873"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 365,
        "printType": "BOOK",
        "categories": [
          "Social Science"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.19.8.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=0tpwDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=0tpwDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=0tpwDwAAQBAJ&pg=PA334&dq=star+wars&hl=&cd=17&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=0tpwDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=0tpwDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 46.79,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 36.96,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=0tpwDwAAQBAJ&rdid=book-0tpwDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 46790000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 36960000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Meets_the_Eras_of_Feminism-sample-epub.acsm?id=0tpwDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_Meets_the_Eras_of_Feminism-sample-pdf.acsm?id=0tpwDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=0tpwDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e Boycott Trending on Twitter . &quot; Vox Magazine , October 19 , 2015. https://www.vox.com/2015/ 10 / 19 / 9571309 / \u003cb\u003estar\u003c/b\u003e - \u003cb\u003ewars\u003c/b\u003e - boycott . Kurka , Rostislav . 2017. “ Forces of Destiny Review : What Is Its Value ? ” Scifi&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "sYd_EQAAQBAJ",
      "etag": "O629OQUoPQo",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/sYd_EQAAQBAJ",
      "volumeInfo": {
        "title": "Myth, Media, and Culture in Star Wars",
        "subtitle": "An Anthology",
        "authors": [
          "Douglas Brode",
          "Leah Deyneka"
        ],
        "publisher": "Bloomsbury Publishing USA",
        "publishedDate": "2012-06-14",
        "description": "In 1977, Star Wars blazed across the screen to become one of the highest grossing and most beloved movies of all time. It was followed by two sequels and three prequels, all of which became blockbusters. Comic books, novels, graphic novels, and magazines devoted to the films have added to the mythology of George Lucas’s creation. Despite the impact of the franchise on popular culture, however, discussion of the films from a scholarly perspective has not kept pace with the films. In Myth, Media, and Culture in Star Wars: An Anthology, Douglas Brode and Leah Deyneka have assembled an intriguing collection of essays addressing the influences that shaped the films, as well as the impact the franchise has had on popular culture. Contributors to this volume discuss the Star Wars universe and what its connection to various cultural touchstones—from fairy tales and Joseph Campbell to Disneyland and Marvel comics—mean to viewers. Essays examine the films in the franchise as well as incarnations of the Star Wars universe in video games, comic books, and television programs, including the films’ influence on new generations of filmmakers. A companion volume to Sex, Politics, and Culture in Star Wars, Myth, Media, and Culture in Star Wars is a diverse collection of criticism that investigates the dynamic force that Star Wars has become in popular culture, from every imaginable angle.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780810885134"
          },
          {
            "type": "ISBN_10",
            "identifier": "0810885131"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 243,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=sYd_EQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=sYd_EQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=sYd_EQAAQBAJ&pg=PT151&dq=star+wars&hl=&cd=18&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=sYd_EQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=sYd_EQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 78.3,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 62.64,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=sYd_EQAAQBAJ&rdid=book-sYd_EQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 78300000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 62640000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Myth_Media_and_Culture_in_Star_Wars-sample-epub.acsm?id=sYd_EQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Myth_Media_and_Culture_in_Star_Wars-sample-pdf.acsm?id=sYd_EQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=sYd_EQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e Wiki , ” accessed November 27 , 2010 , http://\u003cb\u003estarwars\u003c/b\u003e.wikia.com/wiki/Leia Organa Solo # cite_noteThe_Courtship_of_Princess_Leia- 65 . 22. &quot; \u003cb\u003eStar Wars\u003c/b\u003e Expanded Universe - Wikipedia , the Free Encyclopedia , ” accessed&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "Dw8GuPhsjkYC",
      "etag": "zEQtuYPvup4",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Dw8GuPhsjkYC",
      "volumeInfo": {
        "title": "Star Wars: The New Essential Guide to Alien Species",
        "authors": [
          "Ann Margaret Lewis",
          "Helen Keier"
        ],
        "publisher": "Random House Worlds",
        "publishedDate": "2013-04-30",
        "description": "Discover who’s who and what’s what in the Star Wars universe with this beautifully illustrated guide–now in full color for the first time. When it comes to extraterrestrial life-forms, there’s more to science fiction’s most famous galaxy than just Jawas, Wookiees, Ewoks, and Hutts. From the skylanes of Coruscant to the worlds of the Outer Rim, an untold number of species populate those planets far, far away. And if you confuse Gungans with Gamorreans, or don’t know a bantha from a tauntaun, you definitely need the in-depth data that only this revised, expanded, and updated guide can deliver. This comprehensive overview includes beings from all six of the classic movies–plus the novels, cartoon series, comics, and video games. It’s an even bigger cross section of species than what you’ll find in the Mos Eisley cantina. And each entry, from acklay to Zabrak, from amphibians to vacuum-breathers, features everything you need to know, including • complete physical description and official designation, so you can tell your sentients from your non-sentients, and your humanoids from your insectoids • homeworld: from dry and dusty Tatooine, stormy and waterlogged Kamino, to arctic Hoth, and countless other strange and varied worlds • phonetic pronunciation: Askajian, H’nemthe, Iktotchi, Ssi-ruu, and Xexto/Quermian aren’t as easy to say as they are to, er, spell • notable appearance: a listing of one of the more significant appearances of each species in the teeming Star Wars storyline Plus, this brand-new edition includes a glossary of crucial descriptive terms and a completely original, full color illustration for each of more than one hundred individual species. It’s a big galaxy, and someone has to organize it. Count on Star Wars®: The New Essential Guide to Alien Species–and don’t leave your homeworld without it.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780345542793"
          },
          {
            "type": "ISBN_10",
            "identifier": "0345542797"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 242,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.8.7.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=Dw8GuPhsjkYC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=Dw8GuPhsjkYC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=Dw8GuPhsjkYC&pg=PA224&dq=star+wars&hl=&cd=19&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=Dw8GuPhsjkYC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=Dw8GuPhsjkYC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 8.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 8.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=Dw8GuPhsjkYC&rdid=book-Dw8GuPhsjkYC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 8990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 8990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Star_Wars_The_New_Essential_Guide_to_Ali-sample-epub.acsm?id=Dw8GuPhsjkYC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Dw8GuPhsjkYC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... STAR Labyrinth of Evil . \u003cb\u003eStar Wars\u003c/b\u003e : Episode III Prequel , James Luceno , Del Rey Books , 2005 Han Solo and the Corporate Sector Sourcebook Michael Allen Horne , West ... \u003cb\u003eSTAR WARS STAR WARS\u003c/b\u003e Medstar 1 : Battle Surgeons . \u003cb\u003eStar Wars\u003c/b\u003e. 224."
      }
    },
    {
      "kind": "books#volume",
      "id": "zkT9EAAAQBAJ",
      "etag": "qagX2gZqbzU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/zkT9EAAAQBAJ",
      "volumeInfo": {
        "title": "Star Wars: Return of the Jedi: A Visual Archive",
        "subtitle": "Celebrating the Original Trilogy's Iconic Conclusion and Its Indelible Influence on a Galaxy Far, Far Away",
        "authors": [
          "Kelly Knox",
          "Clayton Sandell",
          "S.T. Bende"
        ],
        "publisher": "Simon and Schuster",
        "publishedDate": "2024-04-23",
        "description": "Celebrate Return of the Jedi with this deluxe volume that presents incredible photography and concept art, complemented by anecdotes about the film’s production. Drawing connections from the film to contemporary Star Wars storytelling, this book also offers a fresh perspective on its indelible influence. Featuring a wealth of inserts such as booklets and foldout pages, this book is a fascinating tribute to the epic conclusion of the original Star Wars trilogy. Return of the Jedi didn’t just conclude the original Star Wars trilogy—its themes, structure, and emotional core paved the way for some of the most compelling elements of modern Star Wars storytelling. Filled with photography and concept art, this book celebrates all things Return of the Jedi, while also examining its ties to modern Star Wars stories such as The Mandalorian, The Book of Boba Fett, The Clone Wars, and beyond. Covering essential aspects of Return of the Jedi, this book further examines the film’s legacy by showcasing the movie’s merchandise, novels, comics, and spinoffs. REDISCOVER THE THRILLS OF RETURN OF THE JEDI: This deluxe coffee table book presents the story of Return of the Jedi in a fun and exciting format, with plenty of facts about the production of the film. From the enduring eccentricities of Jabba the Hutt’s palace, to the climactic showdown between Luke Skywalker and Darth Vader, this book explores fan-favorite moments from the beloved movie. A BOUNTY OF SPECIAL ITEMS AND INTERACTIVE FEATURES: Gatefolds, booklets, and other interactive features add a new level of insight to this celebration of the iconic film. CELEBRATE THE LEGACY OF AN EPIC CONCLUSION: Going beyond the production of Return of the Jedi, this book explores forty years of merchandise, books, comics, and spinoffs, including Caravan of Courage: An Ewok Adventure, Ewoks: The Battle for Endor, and the animated Ewoks television show. AN IDEAL GIFT FOR ALL FANS: Return of the Jedi has timeless appeal among movie-goers and aficionados, making this book the perfect gift for the Star Wars fan in your life. COMPLETE YOUR COLLECTION: This book joins Insight Editions’ library of exciting Star Wars titles, including Star Wars: The High Republic: Chronicles of the Jedi, Star Wars: The Lightsaber Collection, and Star Wars: The Secrets of the Wookiees",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9798886633177"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 284,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=zkT9EAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=zkT9EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=zkT9EAAAQBAJ&pg=PA300&dq=star+wars&hl=&cd=20&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=zkT9EAAAQBAJ&dq=star+wars&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars_Return_of_the_Jedi_A_Visual_Ar.html?hl=&id=zkT9EAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=zkT9EAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... \u003cb\u003eStar Wars\u003c/b\u003e : Return of the Jedi . &quot; New York : Ballantine , 1983 . Peterson , Lorne . Sculpting a Galaxy : Inside the &quot; \u003cb\u003eStar Wars\u003c/b\u003e &quot; Model Shop . San Rafael , CA : Insight Editions , 2006 . Pirani , Adam . &quot; Return of the Ewoks&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "1knEEAAAQBAJ",
      "etag": "SdCEFfWHXVI",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/1knEEAAAQBAJ",
      "volumeInfo": {
        "title": "Graphic Novels",
        "subtitle": "A Guide to Comic Books, Manga, and More",
        "authors": [
          "Michael Pawuk",
          "David S. Serchay"
        ],
        "publisher": "Bloomsbury Publishing USA",
        "publishedDate": "2017-05-30",
        "description": "Covering genres from adventure and fantasy to horror, science fiction, and superheroes, this guide maps the vast terrain of graphic novels, describing and organizing titles to help librarians balance their graphic novel collections and direct patrons to read-alikes. New subgenres, new authors, new artists, and new titles appear daily in the comic book and manga world, joining thousands of existing titles—some of which are very popular and well-known to the enthusiastic readers of books in this genre. How do you determine which graphic novels to purchase, and which to recommend to teen and adult readers? This updated guide is intended to help you start, update, or maintain a graphic novel collection and advise readers about the genre. Containing mostly new information as compared to the previous edition, the book covers iconic super-hero comics and other classic and contemporary crime fighter-based comics; action and adventure comics, including prehistoric, heroic, explorer, and Far East adventure as well as Western adventure; science fiction titles that encompass space opera/fantasy, aliens, post-apocalyptic themes, and comics with storylines revolving around computers, robots, and artificial intelligence. There are also chapters dedicated to fantasy titles; horror titles, such as comics about vampires, werewolves, monsters, ghosts, and the occult; crime and mystery titles regarding detectives, police officers, junior sleuths, and true crime; comics on contemporary life, covering romance, coming-of-age stories, sports, and social and political issues; humorous titles; and various nonfiction graphic novels.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781440851360"
          },
          {
            "type": "ISBN_10",
            "identifier": "1440851360"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 758,
        "printType": "BOOK",
        "categories": [
          "Language Arts & Disciplines"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=1knEEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=1knEEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=1knEEAAAQBAJ&pg=PA705&dq=star+wars&hl=&cd=21&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=1knEEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=1knEEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 76.5,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 61.2,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=1knEEAAAQBAJ&rdid=book-1knEEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 76500000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 61200000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Graphic_Novels-sample-pdf.acsm?id=1knEEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=1knEEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "... David S. Serchay. Star Trek : The Next Generation - Hive , 225 Star Trek : The Next Generation Omnibus , 225 \u003cb\u003eStar Wars\u003c/b\u003e , 201-2 , 206-20 \u003cb\u003eStar Wars\u003c/b\u003e ( 2013 ) , 208 \u003cb\u003eStar Wars\u003c/b\u003e ( 2015 ) , 208 \u003cb\u003eStar Wars\u003c/b\u003e , The , 206 \u003cb\u003eStar Wars\u003c/b\u003e Adventures , 209 Star&nbsp;..."
      }
    },
    {
      "kind": "books#volume",
      "id": "GZunDwAAQBAJ",
      "etag": "m/Yg1HnUDLU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/GZunDwAAQBAJ",
      "volumeInfo": {
        "title": "Disney's Star Wars",
        "subtitle": "Forces of Production, Promotion, and Reception",
        "authors": [
          "William Proctor",
          "Richard McCulloch"
        ],
        "publisher": "University of Iowa Press",
        "publishedDate": "2019-07-01",
        "description": "In 2012, Disney purchased Lucasfilm, which meant it also inherited the beloved Star Wars franchise. This corporate marriage sent media critics and fans into a frenzy of speculation about what would happen next with the hugely popular series. Disney’s Star Wars gathers twenty-one noted fan and media studies scholars from around the world to examine Disney’s revival of the franchise. Covering the period from Disney’s purchase through the release of The Force Awakens, the book reveals how fans anticipated, interpreted, and responded to the steady stream of production stories, gossip, marketing materials, merchandise, and other sources in the build-up to the movie’s release. From fears that Princess Leia would be turned into a “Disney princess” to collaborative brand management, the authors explore the shifting relationship between fans, texts, and media industries in the context of a crucial rebranding campaign. The result is a fascinating examination of a critical moment in the iconic series’ history.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781609386436"
          },
          {
            "type": "ISBN_10",
            "identifier": "1609386434"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 409,
        "printType": "BOOK",
        "categories": [
          "Performing Arts"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=GZunDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=GZunDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=GZunDwAAQBAJ&printsec=frontcover&dq=star+wars&hl=&cd=22&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=GZunDwAAQBAJ&dq=star+wars&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Disney_s_Star_Wars.html?hl=&id=GZunDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Disney_s_Star_Wars-sample-pdf.acsm?id=GZunDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=GZunDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Covering the period from Disney’s purchase through the release of The Force Awakens, the book reveals how fans anticipated, interpreted, and responded to the steady stream of production stories, gossip, marketing materials, merchandise, ..."
      }
    },
    {
      "kind": "books#volume",
      "id": "rS-WPwAACAAJ",
      "etag": "+xuTQoiY+0U",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/rS-WPwAACAAJ",
      "volumeInfo": {
        "title": "Star Wars",
        "subtitle": "A New Hope : from the Adventures of Luke Skywalker : a Novel",
        "authors": [
          "George Lucas"
        ],
        "publisher": "Sphere",
        "publishedDate": "1976",
        "description": "Luke Skywalker lives a boring life until he intercepts a distress call from a captive princess. Setting out to save her, he is catapulted into the most savage space war ever. This book is reissued with The Empire Strikes Back, The Return of the Jedi and an omnibus edition of all three.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0751515450"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780751515459"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 247,
        "printType": "BOOK",
        "categories": [
          "Life on other planets"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=rS-WPwAACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=rS-WPwAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=rS-WPwAACAAJ&dq=star+wars&hl=&cd=23&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=rS-WPwAACAAJ&dq=star+wars&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Star_Wars.html?hl=&id=rS-WPwAACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=rS-WPwAACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Setting out to save her, he is catapulted into the most savage space war ever. This book is reissued with The Empire Strikes Back, The Return of the Jedi and an omnibus edition of all three."
      }
    },
    {
      "kind": "books#volume",
      "id": "Ak7TCwAAQBAJ",
      "etag": "CdWqAri1jyo",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/Ak7TCwAAQBAJ",
      "volumeInfo": {
        "title": "The Star Wars Trilogy",
        "authors": [
          "George Lucas",
          "Donald Glut",
          "James Kahn"
        ],
        "publisher": "Random House Worlds",
        "publishedDate": "2015-09-01",
        "description": "A special anniversary collector’s edition featuring the novels of all three classic films—Star Wars: A New Hope, Star Wars: The Empire Strikes Back, and Star Wars: Return of the Jedi Forty years after the phenomenon was born, Star Wars remains one of the greatest science fantasy sagas ever told. Read these stories and rediscover the wonder of the epic that begins: A long time ago, in a galaxy far, far away. . . . Star Wars Trilogy is a must-read for anyone who wants to relive the excitement, the magic, and the sheer entertainment of this legendary saga—now and forever.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781101885376"
          },
          {
            "type": "ISBN_10",
            "identifier": "1101885378"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 690,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 5,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.1.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=Ak7TCwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=Ak7TCwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=Ak7TCwAAQBAJ&printsec=frontcover&dq=star+wars&hl=&cd=24&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=Ak7TCwAAQBAJ&dq=star+wars&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Star_Wars_Trilogy.html?hl=&id=Ak7TCwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=Ak7TCwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Read these stories and rediscover the wonder of the epic that begins: A long time ago, in a galaxy far, far away. . ."
      }
    },
    {
      "kind": "books#volume",
      "id": "owYAAAAAMBAJ",
      "etag": "X2MLv+eT4Vw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/owYAAAAAMBAJ",
      "volumeInfo": {
        "title": "Bulletin of the Atomic Scientists",
        "publishedDate": "1986-01",
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 56,
        "printType": "MAGAZINE",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.1.0.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=owYAAAAAMBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=owYAAAAAMBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=owYAAAAAMBAJ&pg=PA27&dq=star+wars&hl=&cd=25&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=owYAAAAAMBAJ&dq=star+wars&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Bulletin_of_the_Atomic_Scientists.html?hl=&id=owYAAAAAMBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=owYAAAAAMBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      },
      "searchInfo": {
        "textSnippet": "Taking the pledge against \u003cb\u003eStar Wars\u003c/b\u003e In response to a solicitation letter from the Strategic Defense Initiative Organization, academic scientists around the country began to organize resistance to participation in \u003cb\u003eStar Wars\u003c/b\u003e research&nbsp;..."
      }
    }
  ]
}
","status":200,"url":"https://www.googleapis.com/books/v1/volumes?q=star+wars&maxResults=25&key=AIzaSyB0h8Chg6lBoHUDHUbOHY83sceJP_O_Ga4"},"revalidate":31536000,"tags":[]}