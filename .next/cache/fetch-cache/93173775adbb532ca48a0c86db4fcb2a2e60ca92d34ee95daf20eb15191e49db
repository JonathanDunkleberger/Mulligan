{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Sat, 23 Aug 2025 23:18:45 GMT","server":"ESF","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{
  "kind": "books#volumes",
  "totalItems": 1000000,
  "items": [
    {
      "kind": "books#volume",
      "id": "oNY0DwAAQBAJ",
      "etag": "xxB1xQJ+sEk",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/oNY0DwAAQBAJ",
      "volumeInfo": {
        "title": "There There",
        "subtitle": "A novel",
        "authors": [
          "Tommy Orange"
        ],
        "publisher": "Vintage",
        "publishedDate": "2018-06-05",
        "description": "PULITZER PRIZE FINALIST • NATIONAL BESTSELLER • A wondrous and shattering award-winning novel that follows twelve characters from Native communities: all traveling to the Big Oakland Powwow, all connected to one another in ways they may not yet realize. A contemporary classic, this “astonishing literary debut” (Margaret Atwood, bestselling author of The Handmaid’s Tale) “places Native American voices front and center” (NPR/Fresh Air). One of The Atlantic’s Great American Novels of the Past 100 Years Among them is Jacquie Red Feather, newly sober and trying to make it back to the family she left behind. Dene Oxendene, pulling his life together after his uncle’s death and working at the powwow to honor his memory. Fourteen-year-old Orvil, coming to perform traditional dance for the very first time. They converge and collide on one fateful day at the Big Oakland Powwow and together this chorus of voices tells of the plight of the urban Native American—grappling with a complex and painful history, with an inheritance of beauty and spirituality, with communion and sacrifice and heroism A book with “so much jangling energy and brings so much news from a distinct corner of American life that it’s a revelation” (The New York Times). It is fierce, funny, suspenseful, and impossible to put down--full of poetry and rage, exploding onto the page with urgency and force. There There is at once poignant and unflinching, utterly contemporary and truly unforgettable. Don't miss Tommy Orange's new book, Wandering Stars!",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780525520382"
          },
          {
            "type": "ISBN_10",
            "identifier": "0525520384"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 260,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 5,
        "ratingsCount": 2,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.18.16.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=oNY0DwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=oNY0DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=oNY0DwAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=1&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=oNY0DwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=oNY0DwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 7.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 7.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=oNY0DwAAQBAJ&rdid=book-oNY0DwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 7990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 7990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/There_There-sample-epub.acsm?id=oNY0DwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=oNY0DwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "KVGd-NabpW0C",
      "etag": "VN/sHc3fJ9o",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/KVGd-NabpW0C",
      "volumeInfo": {
        "title": "The Plague",
        "authors": [
          "Albert Camus"
        ],
        "publisher": "Vintage",
        "publishedDate": "1991-05-07",
        "description": "“Its relevance lashes you across the face.” —Stephen Metcalf, The Los Angeles Times • “A redemptive book, one that wills the reader to believe, even in a time of despair.” —Roger Lowenstein, The Washington Post A haunting tale of human resilience and hope in the face of unrelieved horror, Albert Camus' iconic novel about an epidemic ravaging the people of a North African coastal town is a classic of twentieth-century literature. The townspeople of Oran are in the grip of a deadly plague, which condemns its victims to a swift and horrifying death. Fear, isolation and claustrophobia follow as they are forced into quarantine. Each person responds in their own way to the lethal disease: some resign themselves to fate, some seek blame, and a few, like Dr. Rieux, resist the terror. An immediate triumph when it was published in 1947, The Plague is in part an allegory of France's suffering under the Nazi occupation, and a timeless story of bravery and determination against the precariousness of human existence.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780679720218"
          },
          {
            "type": "ISBN_10",
            "identifier": "0679720219"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 322,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 4.5,
        "ratingsCount": 14,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "2.2.2.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=KVGd-NabpW0C&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=KVGd-NabpW0C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=KVGd-NabpW0C&printsec=frontcover&dq=subject:fiction&hl=&cd=2&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=KVGd-NabpW0C&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Plague.html?hl=&id=KVGd-NabpW0C"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=KVGd-NabpW0C&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "icKmd-tlvPMC",
      "etag": "7Eqg3XQdw+U",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/icKmd-tlvPMC",
      "volumeInfo": {
        "title": "Journey to the Center of the Earth",
        "authors": [
          "Jules Verne"
        ],
        "publisher": "Bantam",
        "publishedDate": "2006-04-25",
        "description": "The intrepid Professor Lindenbrock embarks upon the strangest expedition of the nineteenth century: a journey down an extinct Icelandic volcano to the Earth’s very core. In his quest to penetrate the planet’s primordial secrets, the geologist—together with his quaking nephew Axel and their devoted guide, Hans—discovers an astonishing subterranean menagerie of prehistoric proportions. Verne’s imaginative tale is at once the ultimate science fiction adventure and a reflection on the perfectibility of human understanding and the psychology of the questor. As David Brin notes in his Introduction, though Verne never knew the term “science fiction,” Journey to the Centre of the Earth is “inarguably one of the wellsprings from which it all began.”",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780553902549"
          },
          {
            "type": "ISBN_10",
            "identifier": "0553902547"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 242,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 3.5,
        "ratingsCount": 3,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.6.4.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=icKmd-tlvPMC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=icKmd-tlvPMC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=icKmd-tlvPMC&printsec=frontcover&dq=subject:fiction&hl=&cd=3&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=icKmd-tlvPMC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=icKmd-tlvPMC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 1.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 1.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=icKmd-tlvPMC&rdid=book-icKmd-tlvPMC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 1990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 1990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Journey_to_the_Center_of_the_Earth-sample-epub.acsm?id=icKmd-tlvPMC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Journey_to_the_Center_of_the_Earth-sample-pdf.acsm?id=icKmd-tlvPMC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=icKmd-tlvPMC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "kYKMEAAAQBAJ",
      "etag": "siOKr7dosck",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/kYKMEAAAQBAJ",
      "volumeInfo": {
        "title": "Netochka Nezvanova",
        "authors": [
          "Fyodor Dostoyevsky"
        ],
        "publisher": "National Geographic Books",
        "publishedDate": "1986-01-07",
        "description": "Netochka Nezvanova - a 'Nameless Nobody' - tells the story of a childhood dominated by her stepfather, Efimov, a failed musician who believes he is a neglected genius. The young girl is strangely drawn to this drunken ruin of a man, who exploits her and drives the family to poverty. But when she is rescued by an aristocratic family, the abuse against Netochka's delicate psyche continues in a more subtle way, condemning her to remain an outsider - a solitary spectator of a glittering society. Conceived as part of a novel on a grand scale, Netochka Nezvanova remained incomplete after Dostoyevsky was exiled to Siberia for 'revolutionary activities' in 1849. With its depiction of the suffering, loneliness, madness and sin that affect both rich and poor in St Petersburg, it contains the great themes that were to dominate his later novels.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780140444551"
          },
          {
            "type": "ISBN_10",
            "identifier": "0140444556"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 0,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=kYKMEAAAQBAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=kYKMEAAAQBAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=kYKMEAAAQBAJ&dq=subject:fiction&hl=&cd=4&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=kYKMEAAAQBAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Netochka_Nezvanova.html?hl=&id=kYKMEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=kYKMEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "MRoMUV2kLZEC",
      "etag": "dWiC0l3BF8E",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/MRoMUV2kLZEC",
      "volumeInfo": {
        "title": "Mysteries",
        "authors": [
          "Knut Hamsun"
        ],
        "publisher": "Penguin",
        "publishedDate": "2001-01-01",
        "description": "The first complete English translation of the Nobel Prize-winner’s literary masterpiece A Penguin Classic Mysteries is the story of Johan Nilsen Nagel, a mysterious stranger who suddenly turns up in a small Norwegian town one summer—and just as suddenly disappears. Nagel is a complete outsider, a sort of modern Christ treated in a spirit of near parody. He condemns the politics and thought of the age, brings comfort to the “insulted and injured,” and gains the love of two women suggestive of the biblical Mary and Martha. But there is a sinister side of him: in his vest he carries a vial of prussic acid... The novel creates a powerful sense of Nagel's stream of thought, as he increasingly withdraws into the torture chamber of his own subconscious psyche. For more than seventy years, Penguin has been the leading publisher of classic literature in the English-speaking world. With more than 1,800 titles, Penguin Classics represents a global bookshelf of the best works throughout history and across genres and disciplines. Readers trust the series to provide authoritative texts enhanced by introductions and notes by distinguished scholars and contemporary authors, as well as up-to-date translations by award-winning translators.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0141186186"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780141186184"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 356,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 4,
        "ratingsCount": 3,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.4.5.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=MRoMUV2kLZEC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=MRoMUV2kLZEC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=MRoMUV2kLZEC&printsec=frontcover&dq=subject:fiction&hl=&cd=5&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=MRoMUV2kLZEC&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Mysteries.html?hl=&id=MRoMUV2kLZEC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=MRoMUV2kLZEC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "B9qLCgAAQBAJ",
      "etag": "L2ndZxeDHSI",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/B9qLCgAAQBAJ",
      "volumeInfo": {
        "title": "Pudd'nhead Wilson",
        "authors": [
          "Mark Twain"
        ],
        "publisher": "Simon and Schuster",
        "publishedDate": "2016-05-24",
        "description": "Enriched Classics offer readers accessible editions of great works of literature enhanced by helpful notes and commentary. Each book includes educational tools alongside the text, enabling students and readers alike to gain a deeper and more developed understanding of the writer and their work. Mark Twain's darkly comic short classic set in the antebellum South stands as a literary condemnation of slavery and racial inequality. This edition includes: -A concise introduction that gives readers important background information -A chronology of the author's life and work -A timeline of significant events that provides the book's historical context -An outline of key themes and plot points to help readers form their own interpretations -Detailed explanatory notes -Critical analysis, including contemporary and modern perspectives on the work -Discussion questions to promote lively classroom and book group interaction -A list of recommended related books and films to broaden the reader's experience Enriched Classics offer readers affordable editions of great works of literature enhanced by helpful notes and insightful commentary. The scholarship provided in Enriched Classics enables readers to appreciate, understand, and enjoy the world's finest books to their full potential.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781439117132"
          },
          {
            "type": "ISBN_10",
            "identifier": "1439117136"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 260,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "3.16.14.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=B9qLCgAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=B9qLCgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=B9qLCgAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=6&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=B9qLCgAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=B9qLCgAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 5.95,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 5.95,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=B9qLCgAAQBAJ&rdid=book-B9qLCgAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 5950000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 5950000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Pudd_nhead_Wilson-sample-epub.acsm?id=B9qLCgAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=B9qLCgAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "EhSj9KDEPmwC",
      "etag": "bhjH+cUi/os",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/EhSj9KDEPmwC",
      "volumeInfo": {
        "title": "The Odyssey of Homer",
        "authors": [
          "Richmond Lattimore"
        ],
        "publisher": "Harper Perennial Modern Classics",
        "publishedDate": "1967",
        "description": "The most eloquent translation of Homer's Odyssey into modern English.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "0060931957"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780060931957"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 388,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=EhSj9KDEPmwC&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=EhSj9KDEPmwC&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=EhSj9KDEPmwC&dq=subject:fiction&hl=&cd=7&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=EhSj9KDEPmwC&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Odyssey_of_Homer.html?hl=&id=EhSj9KDEPmwC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=EhSj9KDEPmwC&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "XdMBTKWSfeMC",
      "etag": "oekMQvlfpzY",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/XdMBTKWSfeMC",
      "volumeInfo": {
        "title": "Taras Bulba",
        "authors": [
          "Nikolái V. Gogol"
        ],
        "publisher": "Ediciones AKAL",
        "publishedDate": "2006-12-19",
        "description": "Feroces, crueles, valientes y apasionados, los cosacos hacen temblar la estepa bajo los cascos de sus caballos. Y entre ellos se encuentra Taras Bulba, un anciano lleno aún de fuerza e inteligencia que junto a sus hijos, Ostap y Andrí, avanzará por tierras polacas con intención de vengar su fe ortodoxa burlada por los católicos. Ninguna guarnición, ciudad amurallada o iglesia podrán detenerlos, hasta que la desgracia se cierna sobre ellos y el apuesto y enamoradizo Andrí haga que su padre maldiga el día en que lo engendró. Taras Bulba, una anomalía entre la obra más conocida de Gogol, es una aventura trepidante, una sinfonía en perpetuo crescendo, en la que cada capítulo es más intenso y sorprendente que el anterior. un fresco tan afinadamente dibujado y tan vívido que resulta absolutamente intemporal.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9788446023708"
          },
          {
            "type": "ISBN_10",
            "identifier": "8446023709"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 154,
        "printType": "BOOK",
        "categories": [
          "Literary Criticism"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.3.3.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=XdMBTKWSfeMC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=XdMBTKWSfeMC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "es",
        "previewLink": "http://books.google.com/books?id=XdMBTKWSfeMC&printsec=frontcover&dq=subject:fiction&hl=&cd=8&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=XdMBTKWSfeMC&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Taras_Bulba.html?hl=&id=XdMBTKWSfeMC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Taras_Bulba-sample-pdf.acsm?id=XdMBTKWSfeMC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=XdMBTKWSfeMC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "V5mdEAAAQBAJ",
      "etag": "TQwThPiWXOU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/V5mdEAAAQBAJ",
      "volumeInfo": {
        "title": "Stories from the Pentamerone",
        "subtitle": "in large print",
        "authors": [
          "Giambattista Basile"
        ],
        "publisher": "BoD – Books on Demand",
        "publishedDate": "2022-11-23",
        "description": "Reproduction of the original.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9783368319625"
          },
          {
            "type": "ISBN_10",
            "identifier": "3368319620"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 294,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=V5mdEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=V5mdEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=V5mdEAAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=9&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=V5mdEAAAQBAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Stories_from_the_Pentamerone.html?hl=&id=V5mdEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Stories_from_the_Pentamerone-sample-pdf.acsm?id=V5mdEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=V5mdEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "fP33EAAAQBAJ",
      "etag": "D1uA98MY1dQ",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/fP33EAAAQBAJ",
      "volumeInfo": {
        "title": "THE Murder Of Roger Ackroyd",
        "authors": [
          "AGATHA CHRISTIE"
        ],
        "publisher": "ببلومانيا للنشر والتوزيع",
        "publishedDate": "2024-02-29",
        "description": "Considered to be one of Agatha Christie's greatest, and also most controversial mysteries, 'The Murder Of Roger Ackroyd' breaks the rules of traditional mystery. The peaceful English village of King’s Abbot is stunned. The widow Ferrars dies from an overdose of Veronal. Not twenty-four hours later, Roger Ackroyd—the man she had planned to marry—is murdered. It is a baffling case involving blackmail and death that taxes Hercule Poirot’s “little grey cells” before he reaches one of the most startling conclusions of his career. Librarian's note: the first fifteen novels in the Hercule Poirot series are 1) The Mysterious Affair at Styles, 1920; 2) The Murder on the Links, 1923; 3) The Murder of Roger Ackroyd, 1926; 4) The Big Four, 1927; 5) The Mystery of the Blue Train, 1928; 6) Peril at End House, 1932; 7) Lord Edgware Dies, 1933; 8) Murder on the Orient Express, 1934; 9) Three Act Tragedy, 1935; 10) Death in the Clouds, 1935; 11) The A.B.C. Murders, 1936; 12) Murder in Mesopotamia, 1936; 13) Cards on the Table, 1936; 14) Dumb Witness, 1937; and 15) Death on the Nile, 1937. These are just the novels; Poirot also appears in this period in a play, Black Coffee, 1930, and two collections of short stories, Poirot Investigates, 1924, and Murder in the Mews, 1937. Each novel, play and short story has its own entry on Goodreads.",
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 314,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.1.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=fP33EAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=fP33EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=fP33EAAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=10&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=fP33EAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=fP33EAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 4.12,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 4.12,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=fP33EAAAQBAJ&rdid=book-fP33EAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 4120000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 4120000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/THE_Murder_Of_Roger_Ackroyd-sample-pdf.acsm?id=fP33EAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=fP33EAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "NjWctE3-vzEC",
      "etag": "GOkNvc+PORs",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/NjWctE3-vzEC",
      "volumeInfo": {
        "title": "Uncle Tom’s Cabin (Volume 2 of 2) (EasyRead Large Edition)",
        "authors": [
          "Harriet Beecher Stowe"
        ],
        "publisher": "ReadHowYouWant.com",
        "publishedDate": "2008-08-15",
        "description": "Stowes Uncle Toms Cabin (1852) is a powerful condemnation of slavery. With biblical references, she proves those wrong who contend that slavery is condoned in Christianity. The hardships faced by the Afro-Americans in order to survive are vivid and gut-wrenching, and Stowes female characters are ready to take on fate head-on.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781427052735"
          },
          {
            "type": "ISBN_10",
            "identifier": "1427052735"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 450,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.4.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=NjWctE3-vzEC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=NjWctE3-vzEC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=NjWctE3-vzEC&printsec=frontcover&dq=subject:fiction&hl=&cd=11&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=NjWctE3-vzEC&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Uncle_Tom_s_Cabin_Volume_2_of_2_EasyRead.html?hl=&id=NjWctE3-vzEC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Uncle_Tom_s_Cabin_Volume_2_of_2_EasyRead-sample-pdf.acsm?id=NjWctE3-vzEC&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=NjWctE3-vzEC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "8T9_cxH7z6sC",
      "etag": "u2jw4KOKA90",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/8T9_cxH7z6sC",
      "volumeInfo": {
        "title": "The Trial",
        "subtitle": "Introduction by George Steiner",
        "authors": [
          "Franz Kafka"
        ],
        "publisher": "Everyman's Library",
        "publishedDate": "1992-06-30",
        "description": "The story of the mysterious indictment, trial, and reckoning forced upon Joseph K—one of the twentieth century’s master parables from one of the greatest writers of the twentieth century, the author of The Metamorphosis. Translated by Willa and Edwin Muir The Trial reflects the central spiritual crises of modern life. Kafka’s method—one that has influenced, in some way, almost every writer of substance who followed him—was to render the absurd and the terrifying convincing by a scrupulous, hyperreal matter-of-factness of tone and treatment. He thereby imparted to his work a level of seriousness normally associated with civilization’s most cherished poems and religious texts. Everyman's Library pursues the highest production standards, printing on acid-free cream-colored paper, with full-cloth cases with two-color foil stamping, decorative endpapers, silk ribbon markers, European-style half-round spines, and a full-color illustrated jacket. Contemporary Classics include an introduction, a select bibliography, and a chronology of the author's life and times.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780679409946"
          },
          {
            "type": "ISBN_10",
            "identifier": "0679409947"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 345,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.5.1.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=8T9_cxH7z6sC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=8T9_cxH7z6sC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=8T9_cxH7z6sC&printsec=frontcover&dq=subject:fiction&hl=&cd=12&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=8T9_cxH7z6sC&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Trial.html?hl=&id=8T9_cxH7z6sC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=8T9_cxH7z6sC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "N3TGDgAAQBAJ",
      "etag": "npA5LUrOhYE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/N3TGDgAAQBAJ",
      "volumeInfo": {
        "title": "As Brave As You",
        "authors": [
          "Jason Reynolds"
        ],
        "publisher": "Simon and Schuster",
        "publishedDate": "2016",
        "description": "When two brothers decide to prove how brave they are, everything backfires--literally.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781481415910"
          },
          {
            "type": "ISBN_10",
            "identifier": "1481415913"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 432,
        "printType": "BOOK",
        "categories": [
          "Juvenile Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.4.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=N3TGDgAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=N3TGDgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=N3TGDgAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=13&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=N3TGDgAAQBAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/As_Brave_As_You.html?hl=&id=N3TGDgAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=N3TGDgAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "QR9rEQAAQBAJ",
      "etag": "h6X1FCEech0",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/QR9rEQAAQBAJ",
      "volumeInfo": {
        "title": "White fang",
        "authors": [
          "Jack London"
        ],
        "publisher": "W. Books",
        "publishedDate": "2025-07-03",
        "description": "In ush.the wild Yukon Territory, a fierce wolf-dog struggles to survive the harsh wilderness. Born of a wolf and raised among men, White Fang learns the brutal laws of nature and the cruelty of mankind. But amidst the violence, a glimmer of hope shines through when he encounters kindness for the first time. Will White Fang find his place in a world of man and beast, or be consumed by the savage forces around him?",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9786552942296"
          },
          {
            "type": "ISBN_10",
            "identifier": "655294229X"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 171,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=QR9rEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=QR9rEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=QR9rEQAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=14&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=QR9rEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=QR9rEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 3.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 3.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=QR9rEQAAQBAJ&rdid=book-QR9rEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 3990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 3990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/White_fang-sample-epub.acsm?id=QR9rEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/White_fang-sample-pdf.acsm?id=QR9rEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=QR9rEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "9zfmEAAAQBAJ",
      "etag": "RpOTkRZ4t3w",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/9zfmEAAAQBAJ",
      "volumeInfo": {
        "title": "Frankenstein",
        "subtitle": "The Original 1818 'Uncensored' Edition",
        "authors": [
          "Mary Shelley"
        ],
        "publisher": "Good Press",
        "publishedDate": "2023-12-27",
        "description": "Mary Shelley's 'Frankenstein' is a groundbreaking work of gothic literature that explores themes of ambition, isolation, and the consequences of playing god. Written in an epistolary format, the reader is drawn into the chilling tale of Victor Frankenstein and his creation, the monster. Shelley's descriptive prose and use of multiple narrators create a sense of foreboding and unease, making 'Frankenstein' a timeless classic in the literary canon. The novel also raises ethical questions about scientific responsibility and the limits of human knowledge, making it a thought-provoking read for modern audiences. Mary Shelley's personal experiences, including the death of her own children and her tumultuous relationship with Percy Bysshe Shelley, undoubtedly influenced the creation of 'Frankenstein.' Her unique perspective as a female author in the 19th century adds layers of depth to the story, highlighting the societal expectations and constraints faced by women of her time. I highly recommend 'Frankenstein' to readers who enjoy thought-provoking literature that delves into the darker aspects of human nature and morality.",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "EAN:8596547791485"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 234,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=9zfmEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=9zfmEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=9zfmEAAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=15&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=9zfmEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=9zfmEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 0.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 0.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=9zfmEAAAQBAJ&rdid=book-9zfmEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Frankenstein-sample-epub.acsm?id=9zfmEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Frankenstein-sample-pdf.acsm?id=9zfmEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=9zfmEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "qvk6DwAAQBAJ",
      "etag": "lyCDItLJxsE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/qvk6DwAAQBAJ",
      "volumeInfo": {
        "title": "Sense and Sensibility - Illustrated Edition",
        "authors": [
          "Jane Austen"
        ],
        "publisher": "Abela Publishing Ltd",
        "publishedDate": "2017-10-23",
        "description": "SENSE AND SENSIBILITY written by Jane Austen with 41 illustrations by Hugh Thomson. When Elinor Dashwood's father dies, her family's finances are crippled. After the Dashwoods move to a cottage in Devonshire, Elinor's sister Marianne is torn between the handsome John Willoughby and the older Colonel Brandon. Meanwhile, Elinor's romantic hopes with Edward Ferrars are hindered due to his prior engagement. Both Elinor and Marianne strive for love while the circumstances in their lives constantly change.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9788826096476"
          },
          {
            "type": "ISBN_10",
            "identifier": "8826096473"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 579,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.3.4.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=qvk6DwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=qvk6DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=qvk6DwAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=16&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=qvk6DwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=qvk6DwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 1.49,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 1.49,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=qvk6DwAAQBAJ&rdid=book-qvk6DwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 1490000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 1490000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Sense_and_Sensibility_Illustrated_Editio-sample-epub.acsm?id=qvk6DwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Sense_and_Sensibility_Illustrated_Editio-sample-pdf.acsm?id=qvk6DwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=qvk6DwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "UiRdEQAAQBAJ",
      "etag": "jdvcyA6nkMg",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/UiRdEQAAQBAJ",
      "volumeInfo": {
        "title": "The History of the Peloponnesian War",
        "authors": [
          "Thucydides"
        ],
        "publisher": "Otbebookpublishing",
        "publishedDate": "2021-01-13",
        "description": "The History of the Peloponnesian War (Greek: Ἱστορίαι, \"Histories\") is a historical account of the Peloponnesian War (431–404 BC), which was fought between the Peloponnesian League (led by Sparta) and the Delian League (led by Athens). It was written by Thucydides, an Athenian historian who also served as an Athenian general during the war. His account of the conflict is widely considered to be a classic and regarded as one of the earliest scholarly works of history. The History is divided into eight books.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9783968656762"
          },
          {
            "type": "ISBN_10",
            "identifier": "3968656768"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 738,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.3.3.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=UiRdEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=UiRdEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=UiRdEQAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=17&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=UiRdEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=UiRdEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 1.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 1.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=UiRdEQAAQBAJ&rdid=book-UiRdEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 1990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 1990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true
        },
        "pdf": {
          "isAvailable": true
        },
        "webReaderLink": "http://play.google.com/books/reader?id=UiRdEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "v7VPEQAAQBAJ",
      "etag": "vq/Cid27ywQ",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/v7VPEQAAQBAJ",
      "volumeInfo": {
        "title": "The Street of Crocodiles",
        "authors": [
          "Bruno Schulz"
        ],
        "publisher": "Rare Treasure Editions",
        "publishedDate": "2025-03-19T00:00:00Z",
        "description": "''The Street of Crocodiles'' by Bruno Schulz (1892-1942) was first published in Polish in 1934; this English translation was first published in the US by Walker and Company in 1963, public domain. A novel that blends the real and the fantastic, from \"one of the most original imaginations in modern Europe\" (Cynthia Ozick). The Street of Crocodiles in the Polish city of Drogobych is a street of memories and dreams where recollections of Bruno Schulz's uncommon boyhood and of the eerie side of his merchant family's life are evoked in a startling blend of the real and the fantastic. Most memorable - and most chilling - is the portrait of the author's father, a maddened shopkeeper who imports rare birds' eggs to hatch in his attic, who believes tailors' dummies should be treated like people, and whose obsessive fear of cockroaches causes him to resemble one. Bruno Schulz, a Polish Jew killed by the Nazis in 1942, is considered by many to have been the leading Polish writer between the two world wars.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9788087830277"
          },
          {
            "type": "ISBN_10",
            "identifier": "808783027X"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 136,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=v7VPEQAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=v7VPEQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=v7VPEQAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=18&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=v7VPEQAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=v7VPEQAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 0.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 0.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=v7VPEQAAQBAJ&rdid=book-v7VPEQAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Street_of_Crocodiles-sample-epub.acsm?id=v7VPEQAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Street_of_Crocodiles-sample-pdf.acsm?id=v7VPEQAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=v7VPEQAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "J_Kw1oREJcUC",
      "etag": "FSltDHVsDqE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/J_Kw1oREJcUC",
      "volumeInfo": {
        "title": "Dreamcatcher",
        "subtitle": "A Novel",
        "authors": [
          "Stephen King"
        ],
        "publisher": "Simon and Schuster",
        "publishedDate": "2001-03-20",
        "description": "From master storyteller Stephen King comes his classic #1 New York Times bestseller about four friends who encounter evil in the Maine woods. Twenty-five years ago, in their haunted hometown of Derry, Maine, four boys bravely stood together and saved a mentally challenged child from vicious local bullies. It was something that fundamentally changed them, in ways they could never begin to understand. These lifelong friends—now with separate lives and separate problems—make it a point to reunite every year for a hunting trip deep in the snowy Maine woods. This time, though, chaos erupts when a stranger suddenly stumbles into their camp, freezing, deliriously mumbling about lights in the sky. And all too quickly, the four companions are plunged into a horrifying struggle for survival with an otherworldly threat and the forces that oppose it...where their only chance of survival is locked into their shared past—and the extraordinary element that bonds them all...",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780743221887"
          },
          {
            "type": "ISBN_10",
            "identifier": "0743221885"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 704,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "2.31.27.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=J_Kw1oREJcUC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=J_Kw1oREJcUC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=J_Kw1oREJcUC&printsec=frontcover&dq=subject:fiction&hl=&cd=19&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=J_Kw1oREJcUC&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=J_Kw1oREJcUC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 10.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 10.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=J_Kw1oREJcUC&rdid=book-J_Kw1oREJcUC&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 10990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 10990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Dreamcatcher-sample-epub.acsm?id=J_Kw1oREJcUC&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=J_Kw1oREJcUC&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "ZuqwEAAAQBAJ",
      "etag": "ur28EZvQvRA",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/ZuqwEAAAQBAJ",
      "volumeInfo": {
        "title": "Sin and Its Consequences",
        "authors": [
          "Henry Edward"
        ],
        "publisher": "BoD – Books on Demand",
        "publishedDate": "2023-02-28",
        "description": "Reprint of the original, first published in 1874. The publishing house Anatiposi publishes historical books as reprints. Due to their age, these books may have missing pages or inferior quality. Our aim is to preserve these books and make them available to the public so that they do not get lost.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9783382501068"
          },
          {
            "type": "ISBN_10",
            "identifier": "3382501066"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 274,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.0.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=ZuqwEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=ZuqwEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=ZuqwEAAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=20&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=ZuqwEAAAQBAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Sin_and_Its_Consequences.html?hl=&id=ZuqwEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Sin_and_Its_Consequences-sample-pdf.acsm?id=ZuqwEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=ZuqwEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "7GgKzgEACAAJ",
      "etag": "zhQ72QJrbtE",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/7GgKzgEACAAJ",
      "volumeInfo": {
        "title": "A Connecticut Yankee in King Arthur's Court Illustrated",
        "authors": [
          "Mark Twain"
        ],
        "publisher": "Independently Published",
        "publishedDate": "2020-11-12",
        "description": "A Connecticut Yankee in King Arthur's Court is an 1889 novel by American humorist and writer Mark Twain. The book was originally titled A Yankee in King Arthur's Court. Some early editions are titled A Yankee at the Court of King Arthur.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9798563591301"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 412,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=7GgKzgEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=7GgKzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=7GgKzgEACAAJ&dq=subject:fiction&hl=&cd=21&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=7GgKzgEACAAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/A_Connecticut_Yankee_in_King_Arthur_s_Co.html?hl=&id=7GgKzgEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=7GgKzgEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "IbFfswEACAAJ",
      "etag": "tz/5JvZrcyk",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/IbFfswEACAAJ",
      "volumeInfo": {
        "title": "A Connecticut Yankee in King Arthur's Court",
        "authors": [
          "Mark Twain"
        ],
        "publisher": "Createspace Independent Publishing Platform",
        "publishedDate": "2017-07-26",
        "description": "A Connecticut Yankee in King Arthur's Court is an 1889 novel by American humorist and writer Mark Twain. The book was originally titled A Yankee in King Arthur's Court. Some early editions are titled A Yankee at the Court of King Arthur.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "1548996289"
          },
          {
            "type": "ISBN_13",
            "identifier": "9781548996284"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 206,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=IbFfswEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=IbFfswEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=IbFfswEACAAJ&dq=subject:fiction&hl=&cd=22&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=IbFfswEACAAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/A_Connecticut_Yankee_in_King_Arthur_s_Co.html?hl=&id=IbFfswEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=IbFfswEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "nAYBEAAAQBAJ",
      "etag": "KvXE2b1Jr8o",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/nAYBEAAAQBAJ",
      "volumeInfo": {
        "title": "The Prophet",
        "subtitle": "Timeless Wisdom for Modern Life",
        "authors": [
          "Kahlil Gibran"
        ],
        "publisher": "Pan Macmillan",
        "publishedDate": "2020-10-29",
        "description": "A 20th century classic, The Prophet is thought-provoking, comforting and wise, and its simple truths remain compelling and rewarding to this day. Utterly unique and beloved around the world, The Prophet is a collection of twenty-six poetic essays by the Lebanese artist, philosopher and writer Kahlil Gibran. Telling the story of the prophet Al-Mustafa and his conversations with various acquaintances as he returns home after a long absence, the book touches on subjects of universal concern, including love, friendship, passion, pain, religion and freedom.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781529067415"
          },
          {
            "type": "ISBN_10",
            "identifier": "1529067413"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 79,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "0.1.1.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=nAYBEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=nAYBEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=nAYBEAAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=23&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=nAYBEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=nAYBEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 1.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 1.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=nAYBEAAAQBAJ&rdid=book-nAYBEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 1990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 1990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Prophet-sample-epub.acsm?id=nAYBEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=nAYBEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "eejyzQEACAAJ",
      "etag": "ZlLe0H7bwdo",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/eejyzQEACAAJ",
      "volumeInfo": {
        "title": "A Connecticut Yankee in King Arthur's Cour",
        "authors": [
          "Mark Twain"
        ],
        "publishedDate": "2020-07-04",
        "description": "One of the greatest satires in American literature, Mark Twain's 'A Connecticut Yankee in King Arthur's Court' begins when Hank Morgan, a skilled mechanic in a nineteenth-century New England arms factory, is struck on the head during a quarrel and awakens to find himself among the knights and magicians of King Arthur's Camelot. The 'Yankee' vows brashly to \"boss the whole country inside of three weeks\" and embarks on an ambitious plan to modernize Camelot with 19th c. industrial inventions like electricity and gunfire. It isn't long before all hell breaks loose! Written in 1889, Mark 'A Connecticut Yankee in King Arthur's Court' is one of literature's first genre mash-ups and one of the first works to feature time travel. It is one of the best known Twain stories, and also one of his most unique. Twain uses the work to launch a social commentary on contemporary society, a thinly veiled critique of the contemporary times despite the Old World setting. While the dark pessimism that would fully blossom in Twain's later works can be discerned in 'A Connecticut Yankee in King Arthur's Court, ' the novel will nevertheless be remembered primarily for its wild leaps of imagination, brilliant wit, and entertaining storytelling.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9798663693394"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 637,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=eejyzQEACAAJ&dq=subject:fiction&hl=&cd=24&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=eejyzQEACAAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/A_Connecticut_Yankee_in_King_Arthur_s_Co.html?hl=&id=eejyzQEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=eejyzQEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "6vGiDwAAQBAJ",
      "etag": "I1SDaNLdwpQ",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/6vGiDwAAQBAJ",
      "volumeInfo": {
        "title": "The Picture of Dorian Gray",
        "authors": [
          "Oscar Wilde"
        ],
        "publisher": "Lulu.com",
        "publishedDate": "2019-07-12",
        "description": "The Picture of Dorian Gray is the only published novel by Oscar Wilde, appearing as the lead story in Lippincott's Monthly Magazine on 20 June 1890, printed as the July 1890 issue. The magazine's editors feared the story was indecent as submitted, so they censored roughly 500 words, without Wilde's knowledge, before publication. But even with that, the story was still greeted with outrage by British reviewers, some of whom suggested that Wilde should be prosecuted on moral grounds, leading Wilde to defend the novel aggressively in letters to the British press. Today, Wilde's fin de siècle novella is considered a classic. This new edition from Immortal Books includes footnotes and images.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780359788330"
          },
          {
            "type": "ISBN_10",
            "identifier": "0359788335"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 188,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.1.2.0.preview.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=6vGiDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=6vGiDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=6vGiDwAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=25&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=6vGiDwAAQBAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Picture_of_Dorian_Gray.html?hl=&id=6vGiDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/The_Picture_of_Dorian_Gray-sample-pdf.acsm?id=6vGiDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=6vGiDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "OqAFAQAAIAAJ",
      "etag": "bwJDCaIaGug",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/OqAFAQAAIAAJ",
      "volumeInfo": {
        "title": "Mrs. Dalloway",
        "authors": [
          "Virginia Woolf"
        ],
        "publisher": "Houghton Mifflin Harcourt",
        "publishedDate": "1925",
        "description": "Heralded as Virginia Woolf's greatest novel, this is a vivid portrait of a single day in a woman's life. When we meet her, Mrs. Clarissa Dalloway is preoccupied with the last-minute details of party preparation while in her mind she is something much more than a perfect society hostess. As she readies her house, she is flooded with remembrances of faraway times. And, met with the realities of the present, Clarissa reexamines the choices that brought her there, hesitantly looking ahead to the unfamiliar work of growing old. \"Mrs. Dalloway was the first novel to split the atom. If the novel before Mrs. Dalloway aspired to immensities of scope and scale, to heroic journeys across vast landscapes, with Mrs. Dalloway Virginia Woolf insisted that it could also locate the enormous within the everyday; that a life of errands and party-giving was every bit as viable a subject as any life lived anywhere; and that should any human act in any novel seem unimportant, it has merely been inadequately observed. The novel asan art form has not been the same since. \"Mrs. Dalloway also contains some of the most beautiful, complex, incisive and idiosyncratic sentences ever written in English, and that alone would be reason enough to read it. It is one of the most moving, revolutionary artworks of the twentieth century.\" --Michael Cunningham, author of The Hours",
        "industryIdentifiers": [
          {
            "type": "OTHER",
            "identifier": "STANFORD:36105003773616"
          }
        ],
        "readingModes": {
          "text": false,
          "image": true
        },
        "pageCount": 312,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.4.7.0.full.1",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=OqAFAQAAIAAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=OqAFAQAAIAAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=OqAFAQAAIAAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=26&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=OqAFAQAAIAAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=OqAFAQAAIAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FREE",
        "isEbook": true,
        "buyLink": "https://play.google.com/store/books/details?id=OqAFAQAAIAAJ&rdid=book-OqAFAQAAIAAJ&rdot=1&source=gbs_api"
      },
      "accessInfo": {
        "country": "US",
        "viewability": "ALL_PAGES",
        "embeddable": true,
        "publicDomain": true,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false,
          "downloadLink": "http://books.google.com/books/download/Mrs_Dalloway.epub?id=OqAFAQAAIAAJ&hl=&output=epub&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=OqAFAQAAIAAJ&hl=&source=gbs_api",
        "accessViewStatus": "FULL_PUBLIC_DOMAIN",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "BfnFoAEACAAJ",
      "etag": "ALhETqaW7wg",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/BfnFoAEACAAJ",
      "volumeInfo": {
        "title": "A Connecticut Yankee in King Arthur's Court",
        "authors": [
          "Mark Twain"
        ],
        "publisher": "CreateSpace",
        "publishedDate": "2014-06-22",
        "description": "A Connecticut Yankee in King Arthur's Court is an 1889 novel by American humorist and writer Mark Twain. The book was originally titled A Yankee in King Arthur's Court. Some early editions are titled A Yankee at the Court of King Arthur.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "1500276359"
          },
          {
            "type": "ISBN_13",
            "identifier": "9781500276355"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 340,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=BfnFoAEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=BfnFoAEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=BfnFoAEACAAJ&dq=subject:fiction&hl=&cd=27&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=BfnFoAEACAAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/A_Connecticut_Yankee_in_King_Arthur_s_Co.html?hl=&id=BfnFoAEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=BfnFoAEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "-3L_zAEACAAJ",
      "etag": "34CfrIJvTNA",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/-3L_zAEACAAJ",
      "volumeInfo": {
        "title": "The Metamorphosis",
        "subtitle": "New Edition - The Metamorphosis by Franz Kafka",
        "authors": [
          "Franz Kafka"
        ],
        "publishedDate": "2019-12-22",
        "description": "The Metamorphosis by Franz Kafka is a real classic. You should grab it and read it to experience it yourself. Here's a simple plot to The Metamorphosis by Franz Kafka Gregor Samsa wakes up one morning to find himself transformed into a \"monstrous vermin\". He initially considers the transformation to be temporary and slowly ponders the consequences of this metamorphosis. Unable to get up and leave the bed, Gregor reflects on his job as a traveling salesman and cloth merchant, which he characterizes as an exhausting and never-ending traffic. He sees his employer as a despot and would quickly quit his job were he not his family's sole breadwinner and working off his bankrupt father's debts. While trying to move, Gregor finds that his office manager, the chief clerk, has shown up to check on him, indignant about Gregor's unexcused absence. Gregor attempts to communicate with both the manager and his family, but all they can hear from behind the door is incomprehensible vocalizations. Gregor laboriously drags himself across the floor and opens the door. The manager, upon seeing the transformed Gregor, flees the apartment. Gregor's family is horrified, and his father drives him back into his room under the threat of violence. With Gregor's unexpected incapacitation, the family is deprived of their financial stability. Although Gregor's sister Grete now shies away from the sight of him, she takes to supplying him with food, which they find he can only eat rotten. Gregor begins to accept his new identity and begins crawling on the floor, walls and ceiling. Discovering Gregor's new pastime, Grete decides to remove some of the furniture to give Gregor more space. She and her mother begin taking furniture away, but Gregor finds their actions deeply distressing. He desperately tries to save a particularly-loved portrait on the wall of a woman clad in fur. His mother loses consciousness at the sight of Gregor clinging to the image to protect it. As Grete rushes to assist her mother, Gregor follows her and is hurt by a medicine bottle falling on his face. His father returns home from work and angrily tosses apples at Gregor. One of them is lodged into a sensitive spot in his back and severely wounds him. Gregor suffers from his injuries for several weeks and takes very little food. He is increasingly neglected by his family and his room becomes used for storage. To secure their livelihood, the family takes three tenants into their apartment. The cleaning lady alleviates Gregor's isolation by leaving his door open for him on the evenings that the tenants eat out. One day, his door is left open despite the presence of the tenants. Gregor, attracted by Grete's violin-playing in the living room, crawls out of his room and is spotted by the unsuspecting tenants, who complain about the apartment's unhygienic conditions and cancel their tenancy. Grete, who has by now become tired of taking care of Gregor and is realizing the burden his existence puts on each one in the family, tells her parents they must get rid of \"it\", or they will all be ruined. Gregor, understanding that he is no longer wanted, dies of starvation before the next sunrise. The relieved and optimistic family take a tram ride out to the countryside, and decide to move to a smaller apartment to further save money. During this short trip, Mr. and Mrs. Samsa realize that, in spite of going through hardships which have brought an amount of paleness to her face, Grete appears to have grown up into a pretty and well-figured lady, which leads her parents to think about finding her a husband. ... ... The Metamorphosis by Franz Kafka",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "1679211935"
          },
          {
            "type": "ISBN_13",
            "identifier": "9781679211935"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 70,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=-3L_zAEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=-3L_zAEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=-3L_zAEACAAJ&dq=subject:fiction&hl=&cd=28&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=-3L_zAEACAAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Metamorphosis.html?hl=&id=-3L_zAEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=-3L_zAEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "In8mDwAAQBAJ",
      "etag": "yaGsJFltJL4",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/In8mDwAAQBAJ",
      "volumeInfo": {
        "title": "How to Stop Time",
        "subtitle": "A Novel",
        "authors": [
          "Matt Haig"
        ],
        "publisher": "Penguin",
        "publishedDate": "2018-02-06",
        "description": "From the New York Times bestselling author of The Midnight Library. “A quirky romcom dusted with philosophical observations….A delightfully witty…poignant novel.” —The Washington Post “She smiled a soft, troubled smile and I felt the whole world slipping away, and I wanted to slip with it, to go wherever she was going… I had existed whole years without her, but that was all it had been. An existence. A book with no words.” Tom Hazard has just moved back to London, his old home, to settle down and become a high school history teacher. And on his first day at school, he meets a captivating French teacher at his school who seems fascinated by him. But Tom has a dangerous secret. He may look like an ordinary 41-year-old, but owing to a rare condition, he's been alive for centuries. Tom has lived history--performing with Shakespeare, exploring the high seas with Captain Cook, and sharing cocktails with Fitzgerald. Now, he just wants an ordinary life. Unfortunately for Tom, the Albatross Society, the secretive group which protects people like Tom, has one rule: Never fall in love. As painful memories of his past and the erratic behavior of the Society's watchful leader threaten to derail his new life and romance, the one thing he can't have just happens to be the one thing that might save him. Tom will have to decide once and for all whether to remain stuck in the past, or finally begin living in the present. How to Stop Time tells a love story across the ages—and for the ages—about a man lost in time, the woman who could save him, and the lifetimes it can take to learn how to live. It is a bighearted, wildly original novel about losing and finding yourself, the inevitability of change, and how with enough time to learn, we just might find happiness. Soon to be a major motion picture starring Benedict Cumberbatch.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780525522881"
          },
          {
            "type": "ISBN_10",
            "identifier": "0525522883"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 352,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 4,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.16.16.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=In8mDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=In8mDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=In8mDwAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=29&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=In8mDwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=In8mDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 12.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 12.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=In8mDwAAQBAJ&rdid=book-In8mDwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 12990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 12990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/How_to_Stop_Time-sample-epub.acsm?id=In8mDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=In8mDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "yfJrxQEACAAJ",
      "etag": "SoJB1ZOvt/E",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/yfJrxQEACAAJ",
      "volumeInfo": {
        "title": "Bartleby, The Scrivener",
        "authors": [
          "Herman Melville"
        ],
        "publisher": "Blurb",
        "publishedDate": "2019-04-29",
        "description": "\"Bartleby, the Scrivener: A Story of Wall Street\" is a short story by the American writer Herman Melville, first serialized anonymously in two parts in the November and December 1853 issues of Putnam's Magazine, and reprinted with minor textual alterations in his The Piazza Tales in 1856. In the story, a Wall Street lawyer hires a new clerk who, after an initial bout of hard work, refuses to make copy or do any other task required of him, with the words \"I would prefer not to\". Numerous critical essays have been published on the story, which scholar Robert Milder describes as \"unquestionably the masterpiece of the short fiction\" in the Melville canon.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "036870436X"
          },
          {
            "type": "ISBN_13",
            "identifier": "9780368704369"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 44,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=yfJrxQEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=yfJrxQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=yfJrxQEACAAJ&dq=subject:fiction&hl=&cd=30&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=yfJrxQEACAAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Bartleby_The_Scrivener.html?hl=&id=yfJrxQEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=yfJrxQEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "aLPqDwAAQBAJ",
      "etag": "PEQ7zcXOKk0",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/aLPqDwAAQBAJ",
      "volumeInfo": {
        "title": "Difficult Loves",
        "authors": [
          "Italo Calvino"
        ],
        "publisher": "Houghton Mifflin Harcourt",
        "publishedDate": "2020-06-11",
        "description": "The author of Invisible Cities explores love and war \"with enormous realist dignity\" in this collection of \" wondrous work from [his] early career\" ( Kirkus, starred review). In this short story collection, one of Italy's greatest storytellers explores the interior lives of characters just as their most cherished illusions of love are suddenly swept away. A soldier is reduced to quivering fear by the presence of a full-figured woman in his train compartment; a young clerk leaves a lady's bed at dawn; a young woman is isolated from bathers on a beach by the loss of her bikini bottom. Confronted with a jarring moment of recognition, each of these characters discovers hidden truths beneath the surface of everyday life. This is the first edition in English to present these fifteen short stories together as Calvino originally envisioned them. It also includes two stories newly translated by Ann Goldstein.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9780544133419"
          },
          {
            "type": "ISBN_10",
            "identifier": "0544133412"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 237,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.5.5.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=aLPqDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=aLPqDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=aLPqDwAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=31&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=aLPqDwAAQBAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Difficult_Loves.html?hl=&id=aLPqDwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Difficult_Loves-sample-epub.acsm?id=aLPqDwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Difficult_Loves-sample-pdf.acsm?id=aLPqDwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=aLPqDwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "a98mCwAAQBAJ",
      "etag": "IWQ63WelSmw",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/a98mCwAAQBAJ",
      "volumeInfo": {
        "title": "Jacob's Room",
        "authors": [
          "Virgina Woolf"
        ],
        "publisher": "Xist Publishing",
        "publishedDate": "2015-08-07",
        "description": "A Nonconformist Novel with No Central Character “Either we are men, or we are women. Either we are cold, or we are sentimental. Either we are young, or growing old. In any case life is but a procession of shadows, and God knows why it is that we embrace them so eagerly, and see them depart with such anguish, being shadows.” - Virginia Woolf, Jacob's Room Jacob’s Room is not your typical Victorian English novel. The fact that there is no real protagonist stands out the most. Jacob is not actually a character, only a collection of memories, feelings and sensations. His life is like a room seen through the eyes of other people. This Xist Classics edition has been professionally formatted for e-readers with a linked table of contents. This eBook also contains a bonus book club leadership guide and discussion questions. We hope you’ll share this book with your friends, neighbors and colleagues and can’t wait to hear what you have to say about it.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781681951607"
          },
          {
            "type": "ISBN_10",
            "identifier": "1681951606"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 183,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "1.4.5.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=a98mCwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=a98mCwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=a98mCwAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=32&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=a98mCwAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=a98mCwAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 1.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 1.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=a98mCwAAQBAJ&rdid=book-a98mCwAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 1990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 1990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Jacob_s_Room-sample-epub.acsm?id=a98mCwAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Jacob_s_Room-sample-pdf.acsm?id=a98mCwAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=a98mCwAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "svtYzgEACAAJ",
      "etag": "IRRMFqyv4og",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/svtYzgEACAAJ",
      "volumeInfo": {
        "title": "Don Quixote Annotated",
        "authors": [
          "Migue D Cervantes"
        ],
        "publishedDate": "2021-02-06",
        "description": "\"The Ingenious Gentleman Don Quixote of is a Spanish novel by Miguel de Cervantes. Published in two parts, in 1605 and 1615, Don Quixote is the most influential work of literature from the Spanish Golden Age and the entire Spanish literary canon. A founding work of Western literature, it is often labeled \"\"the first modern novel and is sometimes considered the best literary work ever written.The plot revolves around the adventures of a noble from La Mancha named Alonso Quixano, who reads so many chivalric romances that he loses his mind and decides to become a knight errant (caballero andante) to revive chivalry and serve his nation, under the name Don Quixote de la Mancha. He recruits a simple farmer, Sancho Panza, as his squire, who often employs a unique, earthy wit in dealing with Don Quixote's rhetorical monologues on knighthood, already considered old-fashioned at the time. Don Quixote, in the first part of the book, does not see the world for what it is and prefers to imagine that he is living out a knightly story.\"",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9798705583591"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 796,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=svtYzgEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=svtYzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=svtYzgEACAAJ&dq=subject:fiction&hl=&cd=33&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=svtYzgEACAAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Don_Quixote_Annotated.html?hl=&id=svtYzgEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=svtYzgEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "BcCevp5-L6oC",
      "etag": "pCMYUxSAl+M",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/BcCevp5-L6oC",
      "volumeInfo": {
        "title": "The Swineherd",
        "authors": [
          "Hans Christian Andersen"
        ],
        "publisher": "Michael Neugebauer Books",
        "publishedDate": "1995",
        "description": "A prince disguises himself as a swineherd and learns the true character of the princess he desires.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "1558584293"
          },
          {
            "type": "ISBN_13",
            "identifier": "9781558584297"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 36,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.7.1.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=BcCevp5-L6oC&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=BcCevp5-L6oC&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=BcCevp5-L6oC&dq=subject:fiction&hl=&cd=34&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=BcCevp5-L6oC&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Swineherd.html?hl=&id=BcCevp5-L6oC"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=BcCevp5-L6oC&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "BfxUzQEACAAJ",
      "etag": "jO/Cv3EeMlA",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/BfxUzQEACAAJ",
      "volumeInfo": {
        "title": "Don Quixote",
        "authors": [
          "Cervantes"
        ],
        "publisher": "Iboo Academic Press",
        "publishedDate": "2020-02-14",
        "description": "This title is collected from the Guardiand's, \"the 100 greatest novels of all time\" list. iBoo Press House uses state-of-the-art technology to digitally reconstruct the work. We preserve the original format whilst repairing imperfections present in the aged copy.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "1641814535"
          },
          {
            "type": "ISBN_13",
            "identifier": "9781641814539"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 652,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=BfxUzQEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=BfxUzQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=BfxUzQEACAAJ&dq=subject:fiction&hl=&cd=35&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=BfxUzQEACAAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Don_Quixote.html?hl=&id=BfxUzQEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=BfxUzQEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "SHDXjwEACAAJ",
      "etag": "Ni7tuBC7viU",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/SHDXjwEACAAJ",
      "volumeInfo": {
        "title": "The Ingenious Gentleman Don Quixote of La Mancha, Volume 2",
        "authors": [
          "John Ormsby"
        ],
        "publisher": "Palala Press",
        "publishedDate": "2015-08-31",
        "description": "This work has been selected by scholars as being culturally important, and is part of the knowledge base of civilization as we know it. This work was reproduced from the original artifact, and remains as true to the original work as possible. Therefore, you will see the original copyright references, library stamps (as most of these works have been housed in our most important libraries around the world), and other notations in the work. This work is in the public domain in the United States of America, and possibly other nations. Within the United States, you may freely copy and distribute this work, as no entity (individual or corporate) has a copyright on the body of the work.As a reproduction of a historical artifact, this work may contain missing or blurred pages, poor pictures, errant marks, etc. Scholars believe, and we concur, that this work is important enough to be preserved, reproduced, and made generally available to the public. We appreciate your support of the preservation process, and thank you for being an important part of keeping this knowledge alive and relevant.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "1340698412"
          },
          {
            "type": "ISBN_13",
            "identifier": "9781340698416"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 410,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=SHDXjwEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=SHDXjwEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=SHDXjwEACAAJ&dq=subject:fiction&hl=&cd=36&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=SHDXjwEACAAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/The_Ingenious_Gentleman_Don_Quixote_of_L.html?hl=&id=SHDXjwEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=SHDXjwEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "7WjitMEwF78C",
      "etag": "c1d39RjeUVM",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/7WjitMEwF78C",
      "volumeInfo": {
        "title": "Web of Dreams",
        "authors": [
          "V.C. Andrews"
        ],
        "publisher": "Simon and Schuster",
        "publishedDate": "2009-11-24",
        "description": "With nowhere to go, no one to help her, will Leigh flee into the arms of the one person she shouldn’t run to? Don’t miss this fifth and final installment in the Casteel family saga from New York Times bestselling author and literary phenomenon V.C. Andrews (Flowers in the Attic, My Sweet Audrina), now a major Lifetime movie event. Leigh VanVoreen had to escape from Boston’s Farthinggale Manor. The foul secret she harbored within her seemed to darken her life forever. Jillian, her mother, would not believe her, and Tony Tatterton, her stepfather, had betrayed her cruelly. But the pure devotion of Luke Casteel promised her hope and respect. Only Luke knew her deepest of secrets…only Luke would love and protect her. Bravely she bore the suspicions of the Willies’ hillfolk, as she tried to grasp the happiness that had so long eluded her. Leigh prayed with all her heart that her bright, shining dreams would save her from tragedy at last…",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781439187814"
          },
          {
            "type": "ISBN_10",
            "identifier": "1439187819"
          }
        ],
        "readingModes": {
          "text": true,
          "image": false
        },
        "pageCount": 448,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": true,
        "contentVersion": "1.30.26.0.preview.2",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=7WjitMEwF78C&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=7WjitMEwF78C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=7WjitMEwF78C&printsec=frontcover&dq=subject:fiction&hl=&cd=37&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=7WjitMEwF78C&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=7WjitMEwF78C"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 9.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=7WjitMEwF78C&rdid=book-7WjitMEwF78C&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 9990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Web_of_Dreams-sample-epub.acsm?id=7WjitMEwF78C&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=7WjitMEwF78C&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "FrPsAgAAQBAJ",
      "etag": "W4P1VdvD/oI",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/FrPsAgAAQBAJ",
      "volumeInfo": {
        "title": "Fallen Too Far",
        "subtitle": "A Rosemary Beach Novel",
        "authors": [
          "Abbi Glines"
        ],
        "publisher": "Simon and Schuster",
        "publishedDate": "2014-03-04",
        "description": "Blaire Wynn left her small farmhouse in Alabama after her mother passed away to move in with her father and his new wife in their sprawling beach house along the Florida Gulf Coast. She isn't prepared for the lifestyle change and she knows she'll never fit into this world. Then there's her sexy stepbrother Rush, who's as spoiled as he is gorgeous: she knows he's anything but good for her and that he'll never be faithful to anyone.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9781476775982"
          },
          {
            "type": "ISBN_10",
            "identifier": "1476775982"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 240,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "averageRating": 5,
        "ratingsCount": 1,
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.3.0.preview.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=FrPsAgAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=FrPsAgAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=FrPsAgAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=38&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=FrPsAgAAQBAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Fallen_Too_Far.html?hl=&id=FrPsAgAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED_FOR_ACCESSIBILITY",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=FrPsAgAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "JSOvEAAAQBAJ",
      "etag": "bZHpmnJetr4",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/JSOvEAAAQBAJ",
      "volumeInfo": {
        "title": "Little Black Sambo",
        "authors": [
          "Helen Bannerman"
        ],
        "publisher": "anboco",
        "publishedDate": "2016-08-11",
        "description": "The Story of Little Black Sambo is a children's book written and illustrated by Scottish author Helen Bannerman, and first published by Grant Richards in October 1899 as one in a series of small-format books called The Dumpy Books for Children. The story was a children's favorite for more than half a century but would become a victim of allegations of racism in the mid-20th century. Critics of the time observed that Bannerman presents one of the first black heroes in children's literature and regarded the book as positively portraying black characters in both the text and pictures, especially in comparison to the more negative books of that era that depicted blacks as simple and uncivilized. Both text and illustrations have undergone considerable revision since.",
        "industryIdentifiers": [
          {
            "type": "ISBN_13",
            "identifier": "9783736409309"
          },
          {
            "type": "ISBN_10",
            "identifier": "3736409303"
          }
        ],
        "readingModes": {
          "text": true,
          "image": true
        },
        "pageCount": 25,
        "printType": "BOOK",
        "categories": [
          "Fiction"
        ],
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "0.2.2.0.preview.3",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=JSOvEAAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=JSOvEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=JSOvEAAAQBAJ&printsec=frontcover&dq=subject:fiction&hl=&cd=39&source=gbs_api",
        "infoLink": "https://play.google.com/store/books/details?id=JSOvEAAAQBAJ&source=gbs_api",
        "canonicalVolumeLink": "https://play.google.com/store/books/details?id=JSOvEAAAQBAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "FOR_SALE",
        "isEbook": true,
        "listPrice": {
          "amount": 0.99,
          "currencyCode": "USD"
        },
        "retailPrice": {
          "amount": 0.99,
          "currencyCode": "USD"
        },
        "buyLink": "https://play.google.com/store/books/details?id=JSOvEAAAQBAJ&rdid=book-JSOvEAAAQBAJ&rdot=1&source=gbs_api",
        "offers": [
          {
            "finskyOfferType": 1,
            "listPrice": {
              "amountInMicros": 990000,
              "currencyCode": "USD"
            },
            "retailPrice": {
              "amountInMicros": 990000,
              "currencyCode": "USD"
            },
            "giftable": true
          }
        ]
      },
      "accessInfo": {
        "country": "US",
        "viewability": "PARTIAL",
        "embeddable": true,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Little_Black_Sambo-sample-epub.acsm?id=JSOvEAAAQBAJ&format=epub&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "pdf": {
          "isAvailable": true,
          "acsTokenLink": "http://books.google.com/books/download/Little_Black_Sambo-sample-pdf.acsm?id=JSOvEAAAQBAJ&format=pdf&output=acs4_fulfillment_token&dl_type=sample&source=gbs_api"
        },
        "webReaderLink": "http://play.google.com/books/reader?id=JSOvEAAAQBAJ&hl=&source=gbs_api",
        "accessViewStatus": "SAMPLE",
        "quoteSharingAllowed": false
      }
    },
    {
      "kind": "books#volume",
      "id": "VVwoswEACAAJ",
      "etag": "piqHSH3D5h8",
      "selfLink": "https://www.googleapis.com/books/v1/volumes/VVwoswEACAAJ",
      "volumeInfo": {
        "title": "Pride and Prejudice",
        "authors": [
          "Jane Austen"
        ],
        "publisher": "Createspace Independent Publishing Platform",
        "publishedDate": "2017-09-29",
        "description": "Elizabeth Bennet is Austen's most liberated and unambiguously appealing heroine, and Pride and Prejudice has remained over most of the past two centuries Austen's most popular novel. The story turns on the marriage prospects of the five daughters of Mr. and Mrs. Bennet: Elizabeth forms a prejudice against the proud and distant Mr. Darcy; Darcy's charming friend Charles Bingley falls in love with her sister Jane; and the handsome officer George Wickham forms attachments successively to Elizabeth and to her sister Lydia. Irvine's extensive introduction sets the novel in the context of the literary and intellectual history of the period, and deals with such crucial background issues as early-nineteenth century class relations in Britain, and female exclusion from property and power.",
        "industryIdentifiers": [
          {
            "type": "ISBN_10",
            "identifier": "1977628230"
          },
          {
            "type": "ISBN_13",
            "identifier": "9781977628237"
          }
        ],
        "readingModes": {
          "text": false,
          "image": false
        },
        "pageCount": 330,
        "printType": "BOOK",
        "maturityRating": "NOT_MATURE",
        "allowAnonLogging": false,
        "contentVersion": "preview-1.0.0",
        "panelizationSummary": {
          "containsEpubBubbles": false,
          "containsImageBubbles": false
        },
        "imageLinks": {
          "smallThumbnail": "http://books.google.com/books/content?id=VVwoswEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api",
          "thumbnail": "http://books.google.com/books/content?id=VVwoswEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api"
        },
        "language": "en",
        "previewLink": "http://books.google.com/books?id=VVwoswEACAAJ&dq=subject:fiction&hl=&cd=40&source=gbs_api",
        "infoLink": "http://books.google.com/books?id=VVwoswEACAAJ&dq=subject:fiction&hl=&source=gbs_api",
        "canonicalVolumeLink": "https://books.google.com/books/about/Pride_and_Prejudice.html?hl=&id=VVwoswEACAAJ"
      },
      "saleInfo": {
        "country": "US",
        "saleability": "NOT_FOR_SALE",
        "isEbook": false
      },
      "accessInfo": {
        "country": "US",
        "viewability": "NO_PAGES",
        "embeddable": false,
        "publicDomain": false,
        "textToSpeechPermission": "ALLOWED",
        "epub": {
          "isAvailable": false
        },
        "pdf": {
          "isAvailable": false
        },
        "webReaderLink": "http://play.google.com/books/reader?id=VVwoswEACAAJ&hl=&source=gbs_api",
        "accessViewStatus": "NONE",
        "quoteSharingAllowed": false
      }
    }
  ]
}
","status":200,"url":"https://www.googleapis.com/books/v1/volumes?q=subject%3Afiction&maxResults=40&orderBy=relevance&key=AIzaSyB0h8Chg6lBoHUDHUbOHY83sceJP_O_Ga4"},"revalidate":31536000,"tags":[]}